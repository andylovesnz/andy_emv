!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADC_CDR	include/at91sam7s512.h	/^	AT91_REG	 ADC_CDR[8]; \/\/ ADC Channel Data Register$/;"	m	struct:_AT91S_ADC
ADC_CDR0	include/at91sam7s512.h	/^#define ADC_CDR0 /;"	d
ADC_CDR1	include/at91sam7s512.h	/^#define ADC_CDR1 /;"	d
ADC_CDR2	include/at91sam7s512.h	/^#define ADC_CDR2 /;"	d
ADC_CDR3	include/at91sam7s512.h	/^#define ADC_CDR3 /;"	d
ADC_CDR4	include/at91sam7s512.h	/^#define ADC_CDR4 /;"	d
ADC_CDR5	include/at91sam7s512.h	/^#define ADC_CDR5 /;"	d
ADC_CDR6	include/at91sam7s512.h	/^#define ADC_CDR6 /;"	d
ADC_CDR7	include/at91sam7s512.h	/^#define ADC_CDR7 /;"	d
ADC_CHANNEL	include/proxmark3.h	/^#define ADC_CHANNEL(/;"	d
ADC_CHAN_HF	include/proxmark3.h	/^#define ADC_CHAN_HF	/;"	d
ADC_CHAN_LF	include/proxmark3.h	/^#define ADC_CHAN_LF	/;"	d
ADC_CHDR	include/at91sam7s512.h	/^	AT91_REG	 ADC_CHDR; 	\/\/ ADC Channel Disable Register$/;"	m	struct:_AT91S_ADC
ADC_CHDR	include/at91sam7s512.h	/^#define ADC_CHDR /;"	d
ADC_CHER	include/at91sam7s512.h	/^	AT91_REG	 ADC_CHER; 	\/\/ ADC Channel Enable Register$/;"	m	struct:_AT91S_ADC
ADC_CHER	include/at91sam7s512.h	/^#define ADC_CHER /;"	d
ADC_CHSR	include/at91sam7s512.h	/^	AT91_REG	 ADC_CHSR; 	\/\/ ADC Channel Status Register$/;"	m	struct:_AT91S_ADC
ADC_CHSR	include/at91sam7s512.h	/^#define ADC_CHSR /;"	d
ADC_CR	include/at91sam7s512.h	/^	AT91_REG	 ADC_CR; 	\/\/ ADC Control Register$/;"	m	struct:_AT91S_ADC
ADC_CR	include/at91sam7s512.h	/^#define ADC_CR /;"	d
ADC_END_OF_CONVERSION	include/proxmark3.h	/^#define ADC_END_OF_CONVERSION(/;"	d
ADC_IDR	include/at91sam7s512.h	/^	AT91_REG	 ADC_IDR; 	\/\/ ADC Interrupt Disable Register$/;"	m	struct:_AT91S_ADC
ADC_IDR	include/at91sam7s512.h	/^#define ADC_IDR /;"	d
ADC_IER	include/at91sam7s512.h	/^	AT91_REG	 ADC_IER; 	\/\/ ADC Interrupt Enable Register$/;"	m	struct:_AT91S_ADC
ADC_IER	include/at91sam7s512.h	/^#define ADC_IER /;"	d
ADC_IMR	include/at91sam7s512.h	/^	AT91_REG	 ADC_IMR; 	\/\/ ADC Interrupt Mask Register$/;"	m	struct:_AT91S_ADC
ADC_IMR	include/at91sam7s512.h	/^#define ADC_IMR /;"	d
ADC_LCDR	include/at91sam7s512.h	/^	AT91_REG	 ADC_LCDR; 	\/\/ ADC Last Converted Data Register$/;"	m	struct:_AT91S_ADC
ADC_LCDR	include/at91sam7s512.h	/^#define ADC_LCDR /;"	d
ADC_MODE_PRESCALE	include/proxmark3.h	/^#define ADC_MODE_PRESCALE(/;"	d
ADC_MODE_SAMPLE_HOLD_TIME	include/proxmark3.h	/^#define ADC_MODE_SAMPLE_HOLD_TIME(/;"	d
ADC_MODE_STARTUP_TIME	include/proxmark3.h	/^#define ADC_MODE_STARTUP_TIME(/;"	d
ADC_MR	include/at91sam7s512.h	/^	AT91_REG	 ADC_MR; 	\/\/ ADC Mode Register$/;"	m	struct:_AT91S_ADC
ADC_MR	include/at91sam7s512.h	/^#define ADC_MR /;"	d
ADC_PTCR	include/at91sam7s512.h	/^	AT91_REG	 ADC_PTCR; 	\/\/ PDC Transfer Control Register$/;"	m	struct:_AT91S_ADC
ADC_PTSR	include/at91sam7s512.h	/^	AT91_REG	 ADC_PTSR; 	\/\/ PDC Transfer Status Register$/;"	m	struct:_AT91S_ADC
ADC_RCR	include/at91sam7s512.h	/^	AT91_REG	 ADC_RCR; 	\/\/ Receive Counter Register$/;"	m	struct:_AT91S_ADC
ADC_RNCR	include/at91sam7s512.h	/^	AT91_REG	 ADC_RNCR; 	\/\/ Receive Next Counter Register$/;"	m	struct:_AT91S_ADC
ADC_RNPR	include/at91sam7s512.h	/^	AT91_REG	 ADC_RNPR; 	\/\/ Receive Next Pointer Register$/;"	m	struct:_AT91S_ADC
ADC_RPR	include/at91sam7s512.h	/^	AT91_REG	 ADC_RPR; 	\/\/ Receive Pointer Register$/;"	m	struct:_AT91S_ADC
ADC_SR	include/at91sam7s512.h	/^	AT91_REG	 ADC_SR; 	\/\/ ADC Status Register$/;"	m	struct:_AT91S_ADC
ADC_SR	include/at91sam7s512.h	/^#define ADC_SR /;"	d
ADC_TCR	include/at91sam7s512.h	/^	AT91_REG	 ADC_TCR; 	\/\/ Transmit Counter Register$/;"	m	struct:_AT91S_ADC
ADC_TNCR	include/at91sam7s512.h	/^	AT91_REG	 ADC_TNCR; 	\/\/ Transmit Next Counter Register$/;"	m	struct:_AT91S_ADC
ADC_TNPR	include/at91sam7s512.h	/^	AT91_REG	 ADC_TNPR; 	\/\/ Transmit Next Pointer Register$/;"	m	struct:_AT91S_ADC
ADC_TPR	include/at91sam7s512.h	/^	AT91_REG	 ADC_TPR; 	\/\/ Transmit Pointer Register$/;"	m	struct:_AT91S_ADC
AES_DECRYPT	client/aes.h	/^#define AES_DECRYPT /;"	d
AES_ENCRYPT	client/aes.h	/^#define AES_ENCRYPT /;"	d
AES_FROUND	client/aes.c	/^#define AES_FROUND(/;"	d	file:
AES_RROUND	client/aes.c	/^#define AES_RROUND(/;"	d	file:
AIC_CISR	include/at91sam7s512.h	/^	AT91_REG	 AIC_CISR; 	\/\/ Core Interrupt Status Register$/;"	m	struct:_AT91S_AIC
AIC_CISR	include/at91sam7s512.h	/^	AT91_REG	 AIC_CISR; 	\/\/ Core Interrupt Status Register$/;"	m	struct:_AT91S_SYS
AIC_CISR	include/at91sam7s512.h	/^#define AIC_CISR /;"	d
AIC_DCR	include/at91sam7s512.h	/^	AT91_REG	 AIC_DCR; 	\/\/ Debug Control Register (Protect)$/;"	m	struct:_AT91S_AIC
AIC_DCR	include/at91sam7s512.h	/^	AT91_REG	 AIC_DCR; 	\/\/ Debug Control Register (Protect)$/;"	m	struct:_AT91S_SYS
AIC_DCR	include/at91sam7s512.h	/^#define AIC_DCR /;"	d
AIC_EOICR	include/at91sam7s512.h	/^	AT91_REG	 AIC_EOICR; 	\/\/ End of Interrupt Command Register$/;"	m	struct:_AT91S_AIC
AIC_EOICR	include/at91sam7s512.h	/^	AT91_REG	 AIC_EOICR; 	\/\/ End of Interrupt Command Register$/;"	m	struct:_AT91S_SYS
AIC_EOICR	include/at91sam7s512.h	/^#define AIC_EOICR /;"	d
AIC_FFDR	include/at91sam7s512.h	/^	AT91_REG	 AIC_FFDR; 	\/\/ Fast Forcing Disable Register$/;"	m	struct:_AT91S_AIC
AIC_FFDR	include/at91sam7s512.h	/^	AT91_REG	 AIC_FFDR; 	\/\/ Fast Forcing Disable Register$/;"	m	struct:_AT91S_SYS
AIC_FFDR	include/at91sam7s512.h	/^#define AIC_FFDR /;"	d
AIC_FFER	include/at91sam7s512.h	/^	AT91_REG	 AIC_FFER; 	\/\/ Fast Forcing Enable Register$/;"	m	struct:_AT91S_AIC
AIC_FFER	include/at91sam7s512.h	/^	AT91_REG	 AIC_FFER; 	\/\/ Fast Forcing Enable Register$/;"	m	struct:_AT91S_SYS
AIC_FFER	include/at91sam7s512.h	/^#define AIC_FFER /;"	d
AIC_FFSR	include/at91sam7s512.h	/^	AT91_REG	 AIC_FFSR; 	\/\/ Fast Forcing Status Register$/;"	m	struct:_AT91S_AIC
AIC_FFSR	include/at91sam7s512.h	/^	AT91_REG	 AIC_FFSR; 	\/\/ Fast Forcing Status Register$/;"	m	struct:_AT91S_SYS
AIC_FFSR	include/at91sam7s512.h	/^#define AIC_FFSR /;"	d
AIC_FVR	include/at91sam7s512.h	/^	AT91_REG	 AIC_FVR; 	\/\/ FIQ Vector Register$/;"	m	struct:_AT91S_AIC
AIC_FVR	include/at91sam7s512.h	/^	AT91_REG	 AIC_FVR; 	\/\/ FIQ Vector Register$/;"	m	struct:_AT91S_SYS
AIC_FVR	include/at91sam7s512.h	/^#define AIC_FVR /;"	d
AIC_ICCR	include/at91sam7s512.h	/^	AT91_REG	 AIC_ICCR; 	\/\/ Interrupt Clear Command Register$/;"	m	struct:_AT91S_AIC
AIC_ICCR	include/at91sam7s512.h	/^	AT91_REG	 AIC_ICCR; 	\/\/ Interrupt Clear Command Register$/;"	m	struct:_AT91S_SYS
AIC_ICCR	include/at91sam7s512.h	/^#define AIC_ICCR /;"	d
AIC_IDCR	include/at91sam7s512.h	/^	AT91_REG	 AIC_IDCR; 	\/\/ Interrupt Disable Command Register$/;"	m	struct:_AT91S_AIC
AIC_IDCR	include/at91sam7s512.h	/^	AT91_REG	 AIC_IDCR; 	\/\/ Interrupt Disable Command Register$/;"	m	struct:_AT91S_SYS
AIC_IDCR	include/at91sam7s512.h	/^#define AIC_IDCR /;"	d
AIC_IECR	include/at91sam7s512.h	/^	AT91_REG	 AIC_IECR; 	\/\/ Interrupt Enable Command Register$/;"	m	struct:_AT91S_AIC
AIC_IECR	include/at91sam7s512.h	/^	AT91_REG	 AIC_IECR; 	\/\/ Interrupt Enable Command Register$/;"	m	struct:_AT91S_SYS
AIC_IECR	include/at91sam7s512.h	/^#define AIC_IECR /;"	d
AIC_IMR	include/at91sam7s512.h	/^	AT91_REG	 AIC_IMR; 	\/\/ Interrupt Mask Register$/;"	m	struct:_AT91S_AIC
AIC_IMR	include/at91sam7s512.h	/^	AT91_REG	 AIC_IMR; 	\/\/ Interrupt Mask Register$/;"	m	struct:_AT91S_SYS
AIC_IMR	include/at91sam7s512.h	/^#define AIC_IMR /;"	d
AIC_IPR	include/at91sam7s512.h	/^	AT91_REG	 AIC_IPR; 	\/\/ Interrupt Pending Register$/;"	m	struct:_AT91S_AIC
AIC_IPR	include/at91sam7s512.h	/^	AT91_REG	 AIC_IPR; 	\/\/ Interrupt Pending Register$/;"	m	struct:_AT91S_SYS
AIC_IPR	include/at91sam7s512.h	/^#define AIC_IPR /;"	d
AIC_ISCR	include/at91sam7s512.h	/^	AT91_REG	 AIC_ISCR; 	\/\/ Interrupt Set Command Register$/;"	m	struct:_AT91S_AIC
AIC_ISCR	include/at91sam7s512.h	/^	AT91_REG	 AIC_ISCR; 	\/\/ Interrupt Set Command Register$/;"	m	struct:_AT91S_SYS
AIC_ISCR	include/at91sam7s512.h	/^#define AIC_ISCR /;"	d
AIC_ISR	include/at91sam7s512.h	/^	AT91_REG	 AIC_ISR; 	\/\/ Interrupt Status Register$/;"	m	struct:_AT91S_AIC
AIC_ISR	include/at91sam7s512.h	/^	AT91_REG	 AIC_ISR; 	\/\/ Interrupt Status Register$/;"	m	struct:_AT91S_SYS
AIC_ISR	include/at91sam7s512.h	/^#define AIC_ISR /;"	d
AIC_IVR	include/at91sam7s512.h	/^	AT91_REG	 AIC_IVR; 	\/\/ IRQ Vector Register$/;"	m	struct:_AT91S_AIC
AIC_IVR	include/at91sam7s512.h	/^	AT91_REG	 AIC_IVR; 	\/\/ IRQ Vector Register$/;"	m	struct:_AT91S_SYS
AIC_IVR	include/at91sam7s512.h	/^#define AIC_IVR /;"	d
AIC_SMR	include/at91sam7s512.h	/^	AT91_REG	 AIC_SMR[32]; 	\/\/ Source Mode Register$/;"	m	struct:_AT91S_AIC
AIC_SMR	include/at91sam7s512.h	/^	AT91_REG	 AIC_SMR[32]; 	\/\/ Source Mode Register$/;"	m	struct:_AT91S_SYS
AIC_SMR	include/at91sam7s512.h	/^#define AIC_SMR /;"	d
AIC_SPU	include/at91sam7s512.h	/^	AT91_REG	 AIC_SPU; 	\/\/ Spurious Vector Register$/;"	m	struct:_AT91S_AIC
AIC_SPU	include/at91sam7s512.h	/^	AT91_REG	 AIC_SPU; 	\/\/ Spurious Vector Register$/;"	m	struct:_AT91S_SYS
AIC_SPU	include/at91sam7s512.h	/^#define AIC_SPU /;"	d
AIC_SVR	include/at91sam7s512.h	/^	AT91_REG	 AIC_SVR[32]; 	\/\/ Source Vector Register$/;"	m	struct:_AT91S_AIC
AIC_SVR	include/at91sam7s512.h	/^	AT91_REG	 AIC_SVR[32]; 	\/\/ Source Vector Register$/;"	m	struct:_AT91S_SYS
AIC_SVR	include/at91sam7s512.h	/^#define AIC_SVR /;"	d
AID_ALIAS	armsrc/emvdataels.c	/^const uint8_t AID_ALIAS[]     = {0xa0,0x00,0x00,0x00,0x29,0x10,0x10};$/;"	v
AID_AMEX	armsrc/emvdataels.c	/^const uint8_t AID_AMEX[]      = {0xa0,0x00,0x00,0x00,0x25};$/;"	v
AID_EXPRESSPAY	armsrc/emvdataels.c	/^const uint8_t AID_EXPRESSPAY[]= {0xa0,0x00,0x00,0x00,0x25,0x01,0x07,0x01};$/;"	v
AID_LINK	armsrc/emvdataels.c	/^const uint8_t AID_LINK[]      = {0xa0,0x00,0x00,0x00,0x29,0x10,0x10};$/;"	v
AID_MAESTRO	armsrc/emvdataels.c	/^const uint8_t AID_MAESTRO[] =   {0xa0,0x00,0x00,0x00,0x04,0x30,0x60};$/;"	v
AID_MAESTRO_TEST	armsrc/emvdataels.c	/^const uint8_t AID_MAESTRO_TEST[]={0xb0,0x12,0x34,0x56,0x78};$/;"	v
AID_MAESTRO_UK	armsrc/emvdataels.c	/^const uint8_t AID_MAESTRO_UK[]= {0xa0,0x00,0x00,0x00,0x05,0x00,0x01};$/;"	v
AID_MASTERCARD	armsrc/emvdataels.c	/^const uint8_t AID_MASTERCARD[]= {0xa0,0x00,0x00,0x00,0x04,0x10,0x10};$/;"	v
AID_SELF_SERVICE	armsrc/emvdataels.c	/^const uint8_t AID_SELF_SERVICE[]={0xa0,0x00,0x00,0x00,0x24,0x01};$/;"	v
AID_VISA	armsrc/emvdataels.c	/^const uint8_t AID_VISA[]    =   {0xa0,0x00,0x00,0x00,0x03};$/;"	v
AID_VISA_ATM	armsrc/emvdataels.c	/^const uint8_t AID_VISA_ATM[]=   {0xa0,0x00,0x00,0x00,0x03,0x99,0x99,0x10};$/;"	v
AID_VISA_C	armsrc/emvdataels.c	/^const uint8_t AID_VISA_C[]  =   {0xa0,0x00,0x00,0x00,0x03,0x10,0x10,0x01};$/;"	v
AID_VISA_D	armsrc/emvdataels.c	/^const uint8_t AID_VISA_D[]  =   {0xa0,0x00,0x00,0x00,0x03,0x10,0x10,0x02};$/;"	v
AID_VISA_DB	armsrc/emvdataels.c	/^const uint8_t AID_VISA_DB[] =   {0xa0,0x00,0x00,0x00,0x03,0x10,0x10};$/;"	v
AID_VISA_E	armsrc/emvdataels.c	/^const uint8_t AID_VISA_E[]  =   {0xa0,0x00,0x00,0x00,0x03,0x20,0x10};$/;"	v
AID_VISA_I	armsrc/emvdataels.c	/^const uint8_t AID_VISA_I[]  =   {0xa0,0x00,0x00,0x00,0x03,0x30,0x10};$/;"	v
AID_VISA_P	armsrc/emvdataels.c	/^const uint8_t AID_VISA_P[]  =   {0xa0,0x00,0x00,0x00,0x03,0x80,0x10};$/;"	v
AIP_CARDHOLDER_VERIFICATION	armsrc/emvdataels.c	/^#define AIP_CARDHOLDER_VERIFICATION /;"	d	file:
AIP_CARDHOLDER_VERIFICATION	armsrc/emvdataels.h	/^#define AIP_CARDHOLDER_VERIFICATION /;"	d
AIP_CDA_SUPPORTED	armsrc/emvdataels.c	/^#define AIP_CDA_SUPPORTED /;"	d	file:
AIP_CDA_SUPPORTED	armsrc/emvdataels.h	/^#define AIP_CDA_SUPPORTED /;"	d
AIP_CHIP_SUPPORTED	armsrc/emvdataels.c	/^#define AIP_CHIP_SUPPORTED /;"	d	file:
AIP_CHIP_SUPPORTED	armsrc/emvdataels.h	/^#define AIP_CHIP_SUPPORTED /;"	d
AIP_DDA_SUPPORTED	armsrc/emvdataels.c	/^#define AIP_DDA_SUPPORTED /;"	d	file:
AIP_DDA_SUPPORTED	armsrc/emvdataels.h	/^#define AIP_DDA_SUPPORTED /;"	d
AIP_ISSUER_AUTH	armsrc/emvdataels.c	/^#define AIP_ISSUER_AUTH /;"	d	file:
AIP_ISSUER_AUTH	armsrc/emvdataels.h	/^#define AIP_ISSUER_AUTH /;"	d
AIP_MSR_SUPPORTED	armsrc/emvdataels.c	/^#define AIP_MSR_SUPPORTED /;"	d	file:
AIP_MSR_SUPPORTED	armsrc/emvdataels.h	/^#define AIP_MSR_SUPPORTED /;"	d
AIP_SDA_SUPPORTED	armsrc/emvdataels.c	/^#define AIP_SDA_SUPPORTED /;"	d	file:
AIP_SDA_SUPPORTED	armsrc/emvdataels.h	/^#define AIP_SDA_SUPPORTED /;"	d
AIP_TERMINAL_RISK	armsrc/emvdataels.c	/^#define AIP_TERMINAL_RISK /;"	d	file:
AIP_TERMINAL_RISK	armsrc/emvdataels.h	/^#define AIP_TERMINAL_RISK /;"	d
ALL	liblua/Makefile	/^ALL= all$/;"	m
ALLOC	armsrc/lfops.c	/^#define ALLOC /;"	d	file:
ALLOCATED_TAG_MODULATION_BUFFER_SIZE	armsrc/iso14443a.c	/^#define ALLOCATED_TAG_MODULATION_BUFFER_SIZE /;"	d	file:
ALLONES	liblua/lbitlib.c	/^#define ALLONES	/;"	d	file:
ALL_A	liblua/Makefile	/^ALL_A= $(LUA_A)$/;"	m
ALL_O	liblua/Makefile	/^ALL_O= $(BASE_O) $(LUA_O) $(LUAC_O)$/;"	m
ALL_T	liblua/Makefile	/^ALL_T= $(LUA_A) $(LUA_T) $(LUAC_T)$/;"	m
ALPHABIT	liblua/lctype.h	/^#define ALPHABIT	/;"	d
APP_CFLAGS	armsrc/Makefile	/^APP_CFLAGS	= -DWITH_LF -DWITH_ISO15693 -DWITH_ISO14443a -DWITH_ISO14443b -DWITH_ICLASS -DWITH_LEGICRF -DWITH_HITAG  -DWITH_CRC -fno-strict-aliasing -DWITH_EMV$/;"	m
APP_CFLAGS	bootrom/Makefile	/^APP_CFLAGS = -I.$/;"	m
APP_INCLUDES	armsrc/Makefile	/^APP_INCLUDES = apps.h$/;"	m
AR	liblua/Makefile	/^AR= ar rcu$/;"	m
ARITHMETIC_SHIFT	client/pm3_bitlib.c	/^#define ARITHMETIC_SHIFT(/;"	d	file:
ARMSRC	armsrc/Makefile	/^ARMSRC = fpgaloader.c \\$/;"	m
ARMSRC	bootrom/Makefile	/^ARMSRC = $/;"	m
ASMSRC	bootrom/Makefile	/^ASMSRC = ram-reset.s flash-reset.s$/;"	m
AT91C_ADC_CDR0	include/at91sam7s512.h	/^#define AT91C_ADC_CDR0 /;"	d
AT91C_ADC_CDR1	include/at91sam7s512.h	/^#define AT91C_ADC_CDR1 /;"	d
AT91C_ADC_CDR2	include/at91sam7s512.h	/^#define AT91C_ADC_CDR2 /;"	d
AT91C_ADC_CDR3	include/at91sam7s512.h	/^#define AT91C_ADC_CDR3 /;"	d
AT91C_ADC_CDR4	include/at91sam7s512.h	/^#define AT91C_ADC_CDR4 /;"	d
AT91C_ADC_CDR5	include/at91sam7s512.h	/^#define AT91C_ADC_CDR5 /;"	d
AT91C_ADC_CDR6	include/at91sam7s512.h	/^#define AT91C_ADC_CDR6 /;"	d
AT91C_ADC_CDR7	include/at91sam7s512.h	/^#define AT91C_ADC_CDR7 /;"	d
AT91C_ADC_CH0	include/at91sam7s512.h	/^#define AT91C_ADC_CH0 /;"	d
AT91C_ADC_CH1	include/at91sam7s512.h	/^#define AT91C_ADC_CH1 /;"	d
AT91C_ADC_CH2	include/at91sam7s512.h	/^#define AT91C_ADC_CH2 /;"	d
AT91C_ADC_CH3	include/at91sam7s512.h	/^#define AT91C_ADC_CH3 /;"	d
AT91C_ADC_CH4	include/at91sam7s512.h	/^#define AT91C_ADC_CH4 /;"	d
AT91C_ADC_CH5	include/at91sam7s512.h	/^#define AT91C_ADC_CH5 /;"	d
AT91C_ADC_CH6	include/at91sam7s512.h	/^#define AT91C_ADC_CH6 /;"	d
AT91C_ADC_CH7	include/at91sam7s512.h	/^#define AT91C_ADC_CH7 /;"	d
AT91C_ADC_CHDR	include/at91sam7s512.h	/^#define AT91C_ADC_CHDR /;"	d
AT91C_ADC_CHER	include/at91sam7s512.h	/^#define AT91C_ADC_CHER /;"	d
AT91C_ADC_CHSR	include/at91sam7s512.h	/^#define AT91C_ADC_CHSR /;"	d
AT91C_ADC_CR	include/at91sam7s512.h	/^#define AT91C_ADC_CR /;"	d
AT91C_ADC_DATA	include/at91sam7s512.h	/^#define AT91C_ADC_DATA /;"	d
AT91C_ADC_DRDY	include/at91sam7s512.h	/^#define AT91C_ADC_DRDY /;"	d
AT91C_ADC_ENDRX	include/at91sam7s512.h	/^#define AT91C_ADC_ENDRX /;"	d
AT91C_ADC_EOC0	include/at91sam7s512.h	/^#define AT91C_ADC_EOC0 /;"	d
AT91C_ADC_EOC1	include/at91sam7s512.h	/^#define AT91C_ADC_EOC1 /;"	d
AT91C_ADC_EOC2	include/at91sam7s512.h	/^#define AT91C_ADC_EOC2 /;"	d
AT91C_ADC_EOC3	include/at91sam7s512.h	/^#define AT91C_ADC_EOC3 /;"	d
AT91C_ADC_EOC4	include/at91sam7s512.h	/^#define AT91C_ADC_EOC4 /;"	d
AT91C_ADC_EOC5	include/at91sam7s512.h	/^#define AT91C_ADC_EOC5 /;"	d
AT91C_ADC_EOC6	include/at91sam7s512.h	/^#define AT91C_ADC_EOC6 /;"	d
AT91C_ADC_EOC7	include/at91sam7s512.h	/^#define AT91C_ADC_EOC7 /;"	d
AT91C_ADC_GOVRE	include/at91sam7s512.h	/^#define AT91C_ADC_GOVRE /;"	d
AT91C_ADC_IDR	include/at91sam7s512.h	/^#define AT91C_ADC_IDR /;"	d
AT91C_ADC_IER	include/at91sam7s512.h	/^#define AT91C_ADC_IER /;"	d
AT91C_ADC_IMR	include/at91sam7s512.h	/^#define AT91C_ADC_IMR /;"	d
AT91C_ADC_LCDR	include/at91sam7s512.h	/^#define AT91C_ADC_LCDR /;"	d
AT91C_ADC_LDATA	include/at91sam7s512.h	/^#define AT91C_ADC_LDATA /;"	d
AT91C_ADC_LOWRES	include/at91sam7s512.h	/^#define AT91C_ADC_LOWRES /;"	d
AT91C_ADC_LOWRES_10_BIT	include/at91sam7s512.h	/^#define 	AT91C_ADC_LOWRES_10_BIT /;"	d
AT91C_ADC_LOWRES_8_BIT	include/at91sam7s512.h	/^#define 	AT91C_ADC_LOWRES_8_BIT /;"	d
AT91C_ADC_MR	include/at91sam7s512.h	/^#define AT91C_ADC_MR /;"	d
AT91C_ADC_OVRE0	include/at91sam7s512.h	/^#define AT91C_ADC_OVRE0 /;"	d
AT91C_ADC_OVRE1	include/at91sam7s512.h	/^#define AT91C_ADC_OVRE1 /;"	d
AT91C_ADC_OVRE2	include/at91sam7s512.h	/^#define AT91C_ADC_OVRE2 /;"	d
AT91C_ADC_OVRE3	include/at91sam7s512.h	/^#define AT91C_ADC_OVRE3 /;"	d
AT91C_ADC_OVRE4	include/at91sam7s512.h	/^#define AT91C_ADC_OVRE4 /;"	d
AT91C_ADC_OVRE5	include/at91sam7s512.h	/^#define AT91C_ADC_OVRE5 /;"	d
AT91C_ADC_OVRE6	include/at91sam7s512.h	/^#define AT91C_ADC_OVRE6 /;"	d
AT91C_ADC_OVRE7	include/at91sam7s512.h	/^#define AT91C_ADC_OVRE7 /;"	d
AT91C_ADC_PRESCAL	include/at91sam7s512.h	/^#define AT91C_ADC_PRESCAL /;"	d
AT91C_ADC_PTCR	include/at91sam7s512.h	/^#define AT91C_ADC_PTCR /;"	d
AT91C_ADC_PTSR	include/at91sam7s512.h	/^#define AT91C_ADC_PTSR /;"	d
AT91C_ADC_RCR	include/at91sam7s512.h	/^#define AT91C_ADC_RCR /;"	d
AT91C_ADC_RNCR	include/at91sam7s512.h	/^#define AT91C_ADC_RNCR /;"	d
AT91C_ADC_RNPR	include/at91sam7s512.h	/^#define AT91C_ADC_RNPR /;"	d
AT91C_ADC_RPR	include/at91sam7s512.h	/^#define AT91C_ADC_RPR /;"	d
AT91C_ADC_RXBUFF	include/at91sam7s512.h	/^#define AT91C_ADC_RXBUFF /;"	d
AT91C_ADC_SHTIM	include/at91sam7s512.h	/^#define AT91C_ADC_SHTIM /;"	d
AT91C_ADC_SLEEP	include/at91sam7s512.h	/^#define AT91C_ADC_SLEEP /;"	d
AT91C_ADC_SLEEP_MODE	include/at91sam7s512.h	/^#define 	AT91C_ADC_SLEEP_MODE /;"	d
AT91C_ADC_SLEEP_NORMAL_MODE	include/at91sam7s512.h	/^#define 	AT91C_ADC_SLEEP_NORMAL_MODE /;"	d
AT91C_ADC_SR	include/at91sam7s512.h	/^#define AT91C_ADC_SR /;"	d
AT91C_ADC_START	include/at91sam7s512.h	/^#define AT91C_ADC_START /;"	d
AT91C_ADC_STARTUP	include/at91sam7s512.h	/^#define AT91C_ADC_STARTUP /;"	d
AT91C_ADC_SWRST	include/at91sam7s512.h	/^#define AT91C_ADC_SWRST /;"	d
AT91C_ADC_TCR	include/at91sam7s512.h	/^#define AT91C_ADC_TCR /;"	d
AT91C_ADC_TNCR	include/at91sam7s512.h	/^#define AT91C_ADC_TNCR /;"	d
AT91C_ADC_TNPR	include/at91sam7s512.h	/^#define AT91C_ADC_TNPR /;"	d
AT91C_ADC_TPR	include/at91sam7s512.h	/^#define AT91C_ADC_TPR /;"	d
AT91C_ADC_TRGEN	include/at91sam7s512.h	/^#define AT91C_ADC_TRGEN /;"	d
AT91C_ADC_TRGEN_DIS	include/at91sam7s512.h	/^#define 	AT91C_ADC_TRGEN_DIS /;"	d
AT91C_ADC_TRGEN_EN	include/at91sam7s512.h	/^#define 	AT91C_ADC_TRGEN_EN /;"	d
AT91C_ADC_TRGSEL	include/at91sam7s512.h	/^#define AT91C_ADC_TRGSEL /;"	d
AT91C_ADC_TRGSEL_EXT	include/at91sam7s512.h	/^#define 	AT91C_ADC_TRGSEL_EXT /;"	d
AT91C_ADC_TRGSEL_TIOA0	include/at91sam7s512.h	/^#define 	AT91C_ADC_TRGSEL_TIOA0 /;"	d
AT91C_ADC_TRGSEL_TIOA1	include/at91sam7s512.h	/^#define 	AT91C_ADC_TRGSEL_TIOA1 /;"	d
AT91C_ADC_TRGSEL_TIOA2	include/at91sam7s512.h	/^#define 	AT91C_ADC_TRGSEL_TIOA2 /;"	d
AT91C_ADC_TRGSEL_TIOA3	include/at91sam7s512.h	/^#define 	AT91C_ADC_TRGSEL_TIOA3 /;"	d
AT91C_ADC_TRGSEL_TIOA4	include/at91sam7s512.h	/^#define 	AT91C_ADC_TRGSEL_TIOA4 /;"	d
AT91C_ADC_TRGSEL_TIOA5	include/at91sam7s512.h	/^#define 	AT91C_ADC_TRGSEL_TIOA5 /;"	d
AT91C_AIC_CISR	include/at91sam7s512.h	/^#define AT91C_AIC_CISR /;"	d
AT91C_AIC_DCR	include/at91sam7s512.h	/^#define AT91C_AIC_DCR /;"	d
AT91C_AIC_DCR_GMSK	include/at91sam7s512.h	/^#define AT91C_AIC_DCR_GMSK /;"	d
AT91C_AIC_DCR_PROT	include/at91sam7s512.h	/^#define AT91C_AIC_DCR_PROT /;"	d
AT91C_AIC_EOICR	include/at91sam7s512.h	/^#define AT91C_AIC_EOICR /;"	d
AT91C_AIC_FFDR	include/at91sam7s512.h	/^#define AT91C_AIC_FFDR /;"	d
AT91C_AIC_FFER	include/at91sam7s512.h	/^#define AT91C_AIC_FFER /;"	d
AT91C_AIC_FFSR	include/at91sam7s512.h	/^#define AT91C_AIC_FFSR /;"	d
AT91C_AIC_FVR	include/at91sam7s512.h	/^#define AT91C_AIC_FVR /;"	d
AT91C_AIC_ICCR	include/at91sam7s512.h	/^#define AT91C_AIC_ICCR /;"	d
AT91C_AIC_IDCR	include/at91sam7s512.h	/^#define AT91C_AIC_IDCR /;"	d
AT91C_AIC_IECR	include/at91sam7s512.h	/^#define AT91C_AIC_IECR /;"	d
AT91C_AIC_IMR	include/at91sam7s512.h	/^#define AT91C_AIC_IMR /;"	d
AT91C_AIC_IPR	include/at91sam7s512.h	/^#define AT91C_AIC_IPR /;"	d
AT91C_AIC_ISCR	include/at91sam7s512.h	/^#define AT91C_AIC_ISCR /;"	d
AT91C_AIC_ISR	include/at91sam7s512.h	/^#define AT91C_AIC_ISR /;"	d
AT91C_AIC_IVR	include/at91sam7s512.h	/^#define AT91C_AIC_IVR /;"	d
AT91C_AIC_NFIQ	include/at91sam7s512.h	/^#define AT91C_AIC_NFIQ /;"	d
AT91C_AIC_NIRQ	include/at91sam7s512.h	/^#define AT91C_AIC_NIRQ /;"	d
AT91C_AIC_PRIOR	include/at91sam7s512.h	/^#define AT91C_AIC_PRIOR /;"	d
AT91C_AIC_PRIOR_HIGHEST	include/at91sam7s512.h	/^#define 	AT91C_AIC_PRIOR_HIGHEST /;"	d
AT91C_AIC_PRIOR_LOWEST	include/at91sam7s512.h	/^#define 	AT91C_AIC_PRIOR_LOWEST /;"	d
AT91C_AIC_SMR	include/at91sam7s512.h	/^#define AT91C_AIC_SMR /;"	d
AT91C_AIC_SPU	include/at91sam7s512.h	/^#define AT91C_AIC_SPU /;"	d
AT91C_AIC_SRCTYPE	include/at91sam7s512.h	/^#define AT91C_AIC_SRCTYPE /;"	d
AT91C_AIC_SRCTYPE_EXT_LOW_LEVEL	include/at91sam7s512.h	/^#define 	AT91C_AIC_SRCTYPE_EXT_LOW_LEVEL /;"	d
AT91C_AIC_SRCTYPE_EXT_NEGATIVE_EDGE	include/at91sam7s512.h	/^#define 	AT91C_AIC_SRCTYPE_EXT_NEGATIVE_EDGE /;"	d
AT91C_AIC_SRCTYPE_HIGH_LEVEL	include/at91sam7s512.h	/^#define 	AT91C_AIC_SRCTYPE_HIGH_LEVEL /;"	d
AT91C_AIC_SRCTYPE_INT_HIGH_LEVEL	include/at91sam7s512.h	/^#define 	AT91C_AIC_SRCTYPE_INT_HIGH_LEVEL /;"	d
AT91C_AIC_SRCTYPE_INT_POSITIVE_EDGE	include/at91sam7s512.h	/^#define 	AT91C_AIC_SRCTYPE_INT_POSITIVE_EDGE /;"	d
AT91C_AIC_SRCTYPE_POSITIVE_EDGE	include/at91sam7s512.h	/^#define 	AT91C_AIC_SRCTYPE_POSITIVE_EDGE /;"	d
AT91C_AIC_SVR	include/at91sam7s512.h	/^#define AT91C_AIC_SVR /;"	d
AT91C_ALL_INT	include/at91sam7s512.h	/^#define AT91C_ALL_INT /;"	d
AT91C_BASE_ADC	include/at91sam7s512.h	/^#define AT91C_BASE_ADC /;"	d
AT91C_BASE_AIC	include/at91sam7s512.h	/^#define AT91C_BASE_AIC /;"	d
AT91C_BASE_CKGR	include/at91sam7s512.h	/^#define AT91C_BASE_CKGR /;"	d
AT91C_BASE_DBGU	include/at91sam7s512.h	/^#define AT91C_BASE_DBGU /;"	d
AT91C_BASE_EFC0	include/at91sam7s512.h	/^#define AT91C_BASE_EFC0 /;"	d
AT91C_BASE_EFC1	include/at91sam7s512.h	/^#define AT91C_BASE_EFC1 /;"	d
AT91C_BASE_MC	include/at91sam7s512.h	/^#define AT91C_BASE_MC /;"	d
AT91C_BASE_PDC_ADC	include/at91sam7s512.h	/^#define AT91C_BASE_PDC_ADC /;"	d
AT91C_BASE_PDC_DBGU	include/at91sam7s512.h	/^#define AT91C_BASE_PDC_DBGU /;"	d
AT91C_BASE_PDC_SPI	include/at91sam7s512.h	/^#define AT91C_BASE_PDC_SPI /;"	d
AT91C_BASE_PDC_SSC	include/at91sam7s512.h	/^#define AT91C_BASE_PDC_SSC /;"	d
AT91C_BASE_PDC_US0	include/at91sam7s512.h	/^#define AT91C_BASE_PDC_US0 /;"	d
AT91C_BASE_PDC_US1	include/at91sam7s512.h	/^#define AT91C_BASE_PDC_US1 /;"	d
AT91C_BASE_PIOA	include/at91sam7s512.h	/^#define AT91C_BASE_PIOA /;"	d
AT91C_BASE_PITC	include/at91sam7s512.h	/^#define AT91C_BASE_PITC /;"	d
AT91C_BASE_PMC	include/at91sam7s512.h	/^#define AT91C_BASE_PMC /;"	d
AT91C_BASE_PWMC	include/at91sam7s512.h	/^#define AT91C_BASE_PWMC /;"	d
AT91C_BASE_PWMC_CH0	include/at91sam7s512.h	/^#define AT91C_BASE_PWMC_CH0 /;"	d
AT91C_BASE_PWMC_CH1	include/at91sam7s512.h	/^#define AT91C_BASE_PWMC_CH1 /;"	d
AT91C_BASE_PWMC_CH2	include/at91sam7s512.h	/^#define AT91C_BASE_PWMC_CH2 /;"	d
AT91C_BASE_PWMC_CH3	include/at91sam7s512.h	/^#define AT91C_BASE_PWMC_CH3 /;"	d
AT91C_BASE_RSTC	include/at91sam7s512.h	/^#define AT91C_BASE_RSTC /;"	d
AT91C_BASE_RTTC	include/at91sam7s512.h	/^#define AT91C_BASE_RTTC /;"	d
AT91C_BASE_SPI	include/at91sam7s512.h	/^#define AT91C_BASE_SPI /;"	d
AT91C_BASE_SSC	include/at91sam7s512.h	/^#define AT91C_BASE_SSC /;"	d
AT91C_BASE_SYS	include/at91sam7s512.h	/^#define AT91C_BASE_SYS /;"	d
AT91C_BASE_TC0	include/at91sam7s512.h	/^#define AT91C_BASE_TC0 /;"	d
AT91C_BASE_TC1	include/at91sam7s512.h	/^#define AT91C_BASE_TC1 /;"	d
AT91C_BASE_TC2	include/at91sam7s512.h	/^#define AT91C_BASE_TC2 /;"	d
AT91C_BASE_TCB	include/at91sam7s512.h	/^#define AT91C_BASE_TCB /;"	d
AT91C_BASE_TWI	include/at91sam7s512.h	/^#define AT91C_BASE_TWI /;"	d
AT91C_BASE_UDP	include/at91sam7s512.h	/^#define AT91C_BASE_UDP /;"	d
AT91C_BASE_US0	include/at91sam7s512.h	/^#define AT91C_BASE_US0 /;"	d
AT91C_BASE_US1	include/at91sam7s512.h	/^#define AT91C_BASE_US1 /;"	d
AT91C_BASE_VREG	include/at91sam7s512.h	/^#define AT91C_BASE_VREG /;"	d
AT91C_BASE_WDTC	include/at91sam7s512.h	/^#define AT91C_BASE_WDTC /;"	d
AT91C_CKGR_DIV	include/at91sam7s512.h	/^#define AT91C_CKGR_DIV /;"	d
AT91C_CKGR_DIV_0	include/at91sam7s512.h	/^#define 	AT91C_CKGR_DIV_0 /;"	d
AT91C_CKGR_DIV_BYPASS	include/at91sam7s512.h	/^#define 	AT91C_CKGR_DIV_BYPASS /;"	d
AT91C_CKGR_MAINF	include/at91sam7s512.h	/^#define AT91C_CKGR_MAINF /;"	d
AT91C_CKGR_MAINRDY	include/at91sam7s512.h	/^#define AT91C_CKGR_MAINRDY /;"	d
AT91C_CKGR_MCFR	include/at91sam7s512.h	/^#define AT91C_CKGR_MCFR /;"	d
AT91C_CKGR_MOR	include/at91sam7s512.h	/^#define AT91C_CKGR_MOR /;"	d
AT91C_CKGR_MOSCEN	include/at91sam7s512.h	/^#define AT91C_CKGR_MOSCEN /;"	d
AT91C_CKGR_MUL	include/at91sam7s512.h	/^#define AT91C_CKGR_MUL /;"	d
AT91C_CKGR_OSCBYPASS	include/at91sam7s512.h	/^#define AT91C_CKGR_OSCBYPASS /;"	d
AT91C_CKGR_OSCOUNT	include/at91sam7s512.h	/^#define AT91C_CKGR_OSCOUNT /;"	d
AT91C_CKGR_OUT	include/at91sam7s512.h	/^#define AT91C_CKGR_OUT /;"	d
AT91C_CKGR_OUT_0	include/at91sam7s512.h	/^#define 	AT91C_CKGR_OUT_0 /;"	d
AT91C_CKGR_OUT_1	include/at91sam7s512.h	/^#define 	AT91C_CKGR_OUT_1 /;"	d
AT91C_CKGR_OUT_2	include/at91sam7s512.h	/^#define 	AT91C_CKGR_OUT_2 /;"	d
AT91C_CKGR_OUT_3	include/at91sam7s512.h	/^#define 	AT91C_CKGR_OUT_3 /;"	d
AT91C_CKGR_PLLCOUNT	include/at91sam7s512.h	/^#define AT91C_CKGR_PLLCOUNT /;"	d
AT91C_CKGR_PLLR	include/at91sam7s512.h	/^#define AT91C_CKGR_PLLR /;"	d
AT91C_CKGR_USBDIV	include/at91sam7s512.h	/^#define AT91C_CKGR_USBDIV /;"	d
AT91C_CKGR_USBDIV_0	include/at91sam7s512.h	/^#define 	AT91C_CKGR_USBDIV_0 /;"	d
AT91C_CKGR_USBDIV_1	include/at91sam7s512.h	/^#define 	AT91C_CKGR_USBDIV_1 /;"	d
AT91C_CKGR_USBDIV_2	include/at91sam7s512.h	/^#define 	AT91C_CKGR_USBDIV_2 /;"	d
AT91C_DBGU_BRGR	include/at91sam7s512.h	/^#define AT91C_DBGU_BRGR /;"	d
AT91C_DBGU_CIDR	include/at91sam7s512.h	/^#define AT91C_DBGU_CIDR /;"	d
AT91C_DBGU_CR	include/at91sam7s512.h	/^#define AT91C_DBGU_CR /;"	d
AT91C_DBGU_CSR	include/at91sam7s512.h	/^#define AT91C_DBGU_CSR /;"	d
AT91C_DBGU_EXID	include/at91sam7s512.h	/^#define AT91C_DBGU_EXID /;"	d
AT91C_DBGU_FNTR	include/at91sam7s512.h	/^#define AT91C_DBGU_FNTR /;"	d
AT91C_DBGU_IDR	include/at91sam7s512.h	/^#define AT91C_DBGU_IDR /;"	d
AT91C_DBGU_IER	include/at91sam7s512.h	/^#define AT91C_DBGU_IER /;"	d
AT91C_DBGU_IMR	include/at91sam7s512.h	/^#define AT91C_DBGU_IMR /;"	d
AT91C_DBGU_MR	include/at91sam7s512.h	/^#define AT91C_DBGU_MR /;"	d
AT91C_DBGU_PTCR	include/at91sam7s512.h	/^#define AT91C_DBGU_PTCR /;"	d
AT91C_DBGU_PTSR	include/at91sam7s512.h	/^#define AT91C_DBGU_PTSR /;"	d
AT91C_DBGU_RCR	include/at91sam7s512.h	/^#define AT91C_DBGU_RCR /;"	d
AT91C_DBGU_RHR	include/at91sam7s512.h	/^#define AT91C_DBGU_RHR /;"	d
AT91C_DBGU_RNCR	include/at91sam7s512.h	/^#define AT91C_DBGU_RNCR /;"	d
AT91C_DBGU_RNPR	include/at91sam7s512.h	/^#define AT91C_DBGU_RNPR /;"	d
AT91C_DBGU_RPR	include/at91sam7s512.h	/^#define AT91C_DBGU_RPR /;"	d
AT91C_DBGU_TCR	include/at91sam7s512.h	/^#define AT91C_DBGU_TCR /;"	d
AT91C_DBGU_THR	include/at91sam7s512.h	/^#define AT91C_DBGU_THR /;"	d
AT91C_DBGU_TNCR	include/at91sam7s512.h	/^#define AT91C_DBGU_TNCR /;"	d
AT91C_DBGU_TNPR	include/at91sam7s512.h	/^#define AT91C_DBGU_TNPR /;"	d
AT91C_DBGU_TPR	include/at91sam7s512.h	/^#define AT91C_DBGU_TPR /;"	d
AT91C_EFC0_FCR	include/at91sam7s512.h	/^#define AT91C_EFC0_FCR /;"	d
AT91C_EFC0_FMR	include/at91sam7s512.h	/^#define AT91C_EFC0_FMR /;"	d
AT91C_EFC0_FSR	include/at91sam7s512.h	/^#define AT91C_EFC0_FSR /;"	d
AT91C_EFC0_VR	include/at91sam7s512.h	/^#define AT91C_EFC0_VR /;"	d
AT91C_EFC1_FCR	include/at91sam7s512.h	/^#define AT91C_EFC1_FCR /;"	d
AT91C_EFC1_FMR	include/at91sam7s512.h	/^#define AT91C_EFC1_FMR /;"	d
AT91C_EFC1_FSR	include/at91sam7s512.h	/^#define AT91C_EFC1_FSR /;"	d
AT91C_EFC1_VR	include/at91sam7s512.h	/^#define AT91C_EFC1_VR /;"	d
AT91C_EFC_MFN	include/at91sam7s512.h	/^#define AT91C_EFC_MFN /;"	d
AT91C_EFC_VERSION	include/at91sam7s512.h	/^#define AT91C_EFC_VERSION /;"	d
AT91C_EP_IN	common/usb_cdc.c	/^#define AT91C_EP_IN /;"	d	file:
AT91C_EP_IN_SIZE	common/usb_cdc.c	/^#define AT91C_EP_IN_SIZE /;"	d	file:
AT91C_EP_OUT	common/usb_cdc.c	/^#define AT91C_EP_OUT /;"	d	file:
AT91C_EP_OUT_SIZE	common/usb_cdc.c	/^#define AT91C_EP_OUT_SIZE /;"	d	file:
AT91C_ID_15_Reserved	include/at91sam7s512.h	/^#define AT91C_ID_15_Reserved /;"	d
AT91C_ID_16_Reserved	include/at91sam7s512.h	/^#define AT91C_ID_16_Reserved /;"	d
AT91C_ID_17_Reserved	include/at91sam7s512.h	/^#define AT91C_ID_17_Reserved /;"	d
AT91C_ID_18_Reserved	include/at91sam7s512.h	/^#define AT91C_ID_18_Reserved /;"	d
AT91C_ID_19_Reserved	include/at91sam7s512.h	/^#define AT91C_ID_19_Reserved /;"	d
AT91C_ID_20_Reserved	include/at91sam7s512.h	/^#define AT91C_ID_20_Reserved /;"	d
AT91C_ID_21_Reserved	include/at91sam7s512.h	/^#define AT91C_ID_21_Reserved /;"	d
AT91C_ID_22_Reserved	include/at91sam7s512.h	/^#define AT91C_ID_22_Reserved /;"	d
AT91C_ID_23_Reserved	include/at91sam7s512.h	/^#define AT91C_ID_23_Reserved /;"	d
AT91C_ID_24_Reserved	include/at91sam7s512.h	/^#define AT91C_ID_24_Reserved /;"	d
AT91C_ID_25_Reserved	include/at91sam7s512.h	/^#define AT91C_ID_25_Reserved /;"	d
AT91C_ID_26_Reserved	include/at91sam7s512.h	/^#define AT91C_ID_26_Reserved /;"	d
AT91C_ID_27_Reserved	include/at91sam7s512.h	/^#define AT91C_ID_27_Reserved /;"	d
AT91C_ID_28_Reserved	include/at91sam7s512.h	/^#define AT91C_ID_28_Reserved /;"	d
AT91C_ID_29_Reserved	include/at91sam7s512.h	/^#define AT91C_ID_29_Reserved /;"	d
AT91C_ID_3_Reserved	include/at91sam7s512.h	/^#define AT91C_ID_3_Reserved /;"	d
AT91C_ID_ADC	include/at91sam7s512.h	/^#define AT91C_ID_ADC /;"	d
AT91C_ID_FIQ	include/at91sam7s512.h	/^#define AT91C_ID_FIQ /;"	d
AT91C_ID_IRQ0	include/at91sam7s512.h	/^#define AT91C_ID_IRQ0 /;"	d
AT91C_ID_IRQ1	include/at91sam7s512.h	/^#define AT91C_ID_IRQ1 /;"	d
AT91C_ID_PIOA	include/at91sam7s512.h	/^#define AT91C_ID_PIOA /;"	d
AT91C_ID_PWMC	include/at91sam7s512.h	/^#define AT91C_ID_PWMC /;"	d
AT91C_ID_SPI	include/at91sam7s512.h	/^#define AT91C_ID_SPI /;"	d
AT91C_ID_SSC	include/at91sam7s512.h	/^#define AT91C_ID_SSC /;"	d
AT91C_ID_SYS	include/at91sam7s512.h	/^#define AT91C_ID_SYS /;"	d
AT91C_ID_TC0	include/at91sam7s512.h	/^#define AT91C_ID_TC0 /;"	d
AT91C_ID_TC1	include/at91sam7s512.h	/^#define AT91C_ID_TC1 /;"	d
AT91C_ID_TC2	include/at91sam7s512.h	/^#define AT91C_ID_TC2 /;"	d
AT91C_ID_TWI	include/at91sam7s512.h	/^#define AT91C_ID_TWI /;"	d
AT91C_ID_UDP	include/at91sam7s512.h	/^#define AT91C_ID_UDP /;"	d
AT91C_ID_US0	include/at91sam7s512.h	/^#define AT91C_ID_US0 /;"	d
AT91C_ID_US1	include/at91sam7s512.h	/^#define AT91C_ID_US1 /;"	d
AT91C_IFLASH	include/at91sam7s512.h	/^#define AT91C_IFLASH	/;"	d
AT91C_IFLASH_LOCK_REGION_SIZE	include/at91sam7s512.h	/^#define AT91C_IFLASH_LOCK_REGION_SIZE	/;"	d
AT91C_IFLASH_NB_OF_LOCK_BITS	include/at91sam7s512.h	/^#define AT91C_IFLASH_NB_OF_LOCK_BITS	/;"	d
AT91C_IFLASH_NB_OF_PAGES	include/at91sam7s512.h	/^#define AT91C_IFLASH_NB_OF_PAGES	/;"	d
AT91C_IFLASH_PAGE_SIZE	include/at91sam7s512.h	/^#define AT91C_IFLASH_PAGE_SIZE	/;"	d
AT91C_IFLASH_SIZE	include/at91sam7s512.h	/^#define AT91C_IFLASH_SIZE	/;"	d
AT91C_ISRAM	include/at91sam7s512.h	/^#define AT91C_ISRAM	/;"	d
AT91C_ISRAM_SIZE	include/at91sam7s512.h	/^#define AT91C_ISRAM_SIZE	/;"	d
AT91C_MC_AASR	include/at91sam7s512.h	/^#define AT91C_MC_AASR /;"	d
AT91C_MC_ABTSZ	include/at91sam7s512.h	/^#define AT91C_MC_ABTSZ /;"	d
AT91C_MC_ABTSZ_BYTE	include/at91sam7s512.h	/^#define 	AT91C_MC_ABTSZ_BYTE /;"	d
AT91C_MC_ABTSZ_HWORD	include/at91sam7s512.h	/^#define 	AT91C_MC_ABTSZ_HWORD /;"	d
AT91C_MC_ABTSZ_WORD	include/at91sam7s512.h	/^#define 	AT91C_MC_ABTSZ_WORD /;"	d
AT91C_MC_ABTTYP	include/at91sam7s512.h	/^#define AT91C_MC_ABTTYP /;"	d
AT91C_MC_ABTTYP_DATAR	include/at91sam7s512.h	/^#define 	AT91C_MC_ABTTYP_DATAR /;"	d
AT91C_MC_ABTTYP_DATAW	include/at91sam7s512.h	/^#define 	AT91C_MC_ABTTYP_DATAW /;"	d
AT91C_MC_ABTTYP_FETCH	include/at91sam7s512.h	/^#define 	AT91C_MC_ABTTYP_FETCH /;"	d
AT91C_MC_ASR	include/at91sam7s512.h	/^#define AT91C_MC_ASR /;"	d
AT91C_MC_BA	include/at91sam7s512.h	/^#define AT91C_MC_BA /;"	d
AT91C_MC_FCMD	include/at91sam7s512.h	/^#define AT91C_MC_FCMD /;"	d
AT91C_MC_FCMD_CLR_GP_NVM	include/at91sam7s512.h	/^#define 	AT91C_MC_FCMD_CLR_GP_NVM /;"	d
AT91C_MC_FCMD_ERASE_ALL	include/at91sam7s512.h	/^#define 	AT91C_MC_FCMD_ERASE_ALL /;"	d
AT91C_MC_FCMD_LOCK	include/at91sam7s512.h	/^#define 	AT91C_MC_FCMD_LOCK /;"	d
AT91C_MC_FCMD_PROG_AND_LOCK	include/at91sam7s512.h	/^#define 	AT91C_MC_FCMD_PROG_AND_LOCK /;"	d
AT91C_MC_FCMD_SET_GP_NVM	include/at91sam7s512.h	/^#define 	AT91C_MC_FCMD_SET_GP_NVM /;"	d
AT91C_MC_FCMD_SET_SECURITY	include/at91sam7s512.h	/^#define 	AT91C_MC_FCMD_SET_SECURITY /;"	d
AT91C_MC_FCMD_START_PROG	include/at91sam7s512.h	/^#define 	AT91C_MC_FCMD_START_PROG /;"	d
AT91C_MC_FCMD_UNLOCK	include/at91sam7s512.h	/^#define 	AT91C_MC_FCMD_UNLOCK /;"	d
AT91C_MC_FMCN	include/at91sam7s512.h	/^#define AT91C_MC_FMCN /;"	d
AT91C_MC_FRDY	include/at91sam7s512.h	/^#define AT91C_MC_FRDY /;"	d
AT91C_MC_FWS	include/at91sam7s512.h	/^#define AT91C_MC_FWS /;"	d
AT91C_MC_FWS_0FWS	include/at91sam7s512.h	/^#define 	AT91C_MC_FWS_0FWS /;"	d
AT91C_MC_FWS_1FWS	include/at91sam7s512.h	/^#define 	AT91C_MC_FWS_1FWS /;"	d
AT91C_MC_FWS_2FWS	include/at91sam7s512.h	/^#define 	AT91C_MC_FWS_2FWS /;"	d
AT91C_MC_FWS_3FWS	include/at91sam7s512.h	/^#define 	AT91C_MC_FWS_3FWS /;"	d
AT91C_MC_GPNVM0	include/at91sam7s512.h	/^#define AT91C_MC_GPNVM0 /;"	d
AT91C_MC_GPNVM1	include/at91sam7s512.h	/^#define AT91C_MC_GPNVM1 /;"	d
AT91C_MC_GPNVM2	include/at91sam7s512.h	/^#define AT91C_MC_GPNVM2 /;"	d
AT91C_MC_GPNVM3	include/at91sam7s512.h	/^#define AT91C_MC_GPNVM3 /;"	d
AT91C_MC_GPNVM4	include/at91sam7s512.h	/^#define AT91C_MC_GPNVM4 /;"	d
AT91C_MC_GPNVM5	include/at91sam7s512.h	/^#define AT91C_MC_GPNVM5 /;"	d
AT91C_MC_GPNVM6	include/at91sam7s512.h	/^#define AT91C_MC_GPNVM6 /;"	d
AT91C_MC_GPNVM7	include/at91sam7s512.h	/^#define AT91C_MC_GPNVM7 /;"	d
AT91C_MC_KEY	include/at91sam7s512.h	/^#define AT91C_MC_KEY /;"	d
AT91C_MC_LOCKE	include/at91sam7s512.h	/^#define AT91C_MC_LOCKE /;"	d
AT91C_MC_LOCKS0	include/at91sam7s512.h	/^#define AT91C_MC_LOCKS0 /;"	d
AT91C_MC_LOCKS1	include/at91sam7s512.h	/^#define AT91C_MC_LOCKS1 /;"	d
AT91C_MC_LOCKS10	include/at91sam7s512.h	/^#define AT91C_MC_LOCKS10 /;"	d
AT91C_MC_LOCKS11	include/at91sam7s512.h	/^#define AT91C_MC_LOCKS11 /;"	d
AT91C_MC_LOCKS12	include/at91sam7s512.h	/^#define AT91C_MC_LOCKS12 /;"	d
AT91C_MC_LOCKS13	include/at91sam7s512.h	/^#define AT91C_MC_LOCKS13 /;"	d
AT91C_MC_LOCKS14	include/at91sam7s512.h	/^#define AT91C_MC_LOCKS14 /;"	d
AT91C_MC_LOCKS15	include/at91sam7s512.h	/^#define AT91C_MC_LOCKS15 /;"	d
AT91C_MC_LOCKS2	include/at91sam7s512.h	/^#define AT91C_MC_LOCKS2 /;"	d
AT91C_MC_LOCKS3	include/at91sam7s512.h	/^#define AT91C_MC_LOCKS3 /;"	d
AT91C_MC_LOCKS4	include/at91sam7s512.h	/^#define AT91C_MC_LOCKS4 /;"	d
AT91C_MC_LOCKS5	include/at91sam7s512.h	/^#define AT91C_MC_LOCKS5 /;"	d
AT91C_MC_LOCKS6	include/at91sam7s512.h	/^#define AT91C_MC_LOCKS6 /;"	d
AT91C_MC_LOCKS7	include/at91sam7s512.h	/^#define AT91C_MC_LOCKS7 /;"	d
AT91C_MC_LOCKS8	include/at91sam7s512.h	/^#define AT91C_MC_LOCKS8 /;"	d
AT91C_MC_LOCKS9	include/at91sam7s512.h	/^#define AT91C_MC_LOCKS9 /;"	d
AT91C_MC_MISADD	include/at91sam7s512.h	/^#define AT91C_MC_MISADD /;"	d
AT91C_MC_MPU	include/at91sam7s512.h	/^#define AT91C_MC_MPU /;"	d
AT91C_MC_MST0	include/at91sam7s512.h	/^#define AT91C_MC_MST0 /;"	d
AT91C_MC_MST1	include/at91sam7s512.h	/^#define AT91C_MC_MST1 /;"	d
AT91C_MC_NEBP	include/at91sam7s512.h	/^#define AT91C_MC_NEBP /;"	d
AT91C_MC_PAGEN	include/at91sam7s512.h	/^#define AT91C_MC_PAGEN /;"	d
AT91C_MC_PROGE	include/at91sam7s512.h	/^#define AT91C_MC_PROGE /;"	d
AT91C_MC_PROT	include/at91sam7s512.h	/^#define AT91C_MC_PROT /;"	d
AT91C_MC_PROT_PNAUNA	include/at91sam7s512.h	/^#define 	AT91C_MC_PROT_PNAUNA /;"	d
AT91C_MC_PROT_PRWUNA	include/at91sam7s512.h	/^#define 	AT91C_MC_PROT_PRWUNA /;"	d
AT91C_MC_PROT_PRWURO	include/at91sam7s512.h	/^#define 	AT91C_MC_PROT_PRWURO /;"	d
AT91C_MC_PROT_PRWURW	include/at91sam7s512.h	/^#define 	AT91C_MC_PROT_PRWURW /;"	d
AT91C_MC_PUEB	include/at91sam7s512.h	/^#define AT91C_MC_PUEB /;"	d
AT91C_MC_PUER	include/at91sam7s512.h	/^#define AT91C_MC_PUER /;"	d
AT91C_MC_PUIA	include/at91sam7s512.h	/^#define AT91C_MC_PUIA /;"	d
AT91C_MC_PUP	include/at91sam7s512.h	/^#define AT91C_MC_PUP /;"	d
AT91C_MC_RCB	include/at91sam7s512.h	/^#define AT91C_MC_RCB /;"	d
AT91C_MC_RCR	include/at91sam7s512.h	/^#define AT91C_MC_RCR /;"	d
AT91C_MC_SECURITY	include/at91sam7s512.h	/^#define AT91C_MC_SECURITY /;"	d
AT91C_MC_SIZE	include/at91sam7s512.h	/^#define AT91C_MC_SIZE /;"	d
AT91C_MC_SIZE_128KB	include/at91sam7s512.h	/^#define 	AT91C_MC_SIZE_128KB /;"	d
AT91C_MC_SIZE_16KB	include/at91sam7s512.h	/^#define 	AT91C_MC_SIZE_16KB /;"	d
AT91C_MC_SIZE_16MB	include/at91sam7s512.h	/^#define 	AT91C_MC_SIZE_16MB /;"	d
AT91C_MC_SIZE_1KB	include/at91sam7s512.h	/^#define 	AT91C_MC_SIZE_1KB /;"	d
AT91C_MC_SIZE_1MB	include/at91sam7s512.h	/^#define 	AT91C_MC_SIZE_1MB /;"	d
AT91C_MC_SIZE_256KB	include/at91sam7s512.h	/^#define 	AT91C_MC_SIZE_256KB /;"	d
AT91C_MC_SIZE_2KB	include/at91sam7s512.h	/^#define 	AT91C_MC_SIZE_2KB /;"	d
AT91C_MC_SIZE_2MB	include/at91sam7s512.h	/^#define 	AT91C_MC_SIZE_2MB /;"	d
AT91C_MC_SIZE_32KB	include/at91sam7s512.h	/^#define 	AT91C_MC_SIZE_32KB /;"	d
AT91C_MC_SIZE_4KB	include/at91sam7s512.h	/^#define 	AT91C_MC_SIZE_4KB /;"	d
AT91C_MC_SIZE_4MB	include/at91sam7s512.h	/^#define 	AT91C_MC_SIZE_4MB /;"	d
AT91C_MC_SIZE_512KB	include/at91sam7s512.h	/^#define 	AT91C_MC_SIZE_512KB /;"	d
AT91C_MC_SIZE_64KB	include/at91sam7s512.h	/^#define 	AT91C_MC_SIZE_64KB /;"	d
AT91C_MC_SIZE_64MB	include/at91sam7s512.h	/^#define 	AT91C_MC_SIZE_64MB /;"	d
AT91C_MC_SIZE_8KB	include/at91sam7s512.h	/^#define 	AT91C_MC_SIZE_8KB /;"	d
AT91C_MC_SIZE_8MB	include/at91sam7s512.h	/^#define 	AT91C_MC_SIZE_8MB /;"	d
AT91C_MC_SVMST0	include/at91sam7s512.h	/^#define AT91C_MC_SVMST0 /;"	d
AT91C_MC_SVMST1	include/at91sam7s512.h	/^#define AT91C_MC_SVMST1 /;"	d
AT91C_MC_UNDADD	include/at91sam7s512.h	/^#define AT91C_MC_UNDADD /;"	d
AT91C_PA0_PWM0	include/at91sam7s512.h	/^#define AT91C_PA0_PWM0 /;"	d
AT91C_PA0_TIOA0	include/at91sam7s512.h	/^#define AT91C_PA0_TIOA0 /;"	d
AT91C_PA10_DTXD	include/at91sam7s512.h	/^#define AT91C_PA10_DTXD /;"	d
AT91C_PA10_NPCS2	include/at91sam7s512.h	/^#define AT91C_PA10_NPCS2 /;"	d
AT91C_PA11_NPCS0	include/at91sam7s512.h	/^#define AT91C_PA11_NPCS0 /;"	d
AT91C_PA11_PWM0	include/at91sam7s512.h	/^#define AT91C_PA11_PWM0 /;"	d
AT91C_PA12_MISO	include/at91sam7s512.h	/^#define AT91C_PA12_MISO /;"	d
AT91C_PA12_PWM1	include/at91sam7s512.h	/^#define AT91C_PA12_PWM1 /;"	d
AT91C_PA13_MOSI	include/at91sam7s512.h	/^#define AT91C_PA13_MOSI /;"	d
AT91C_PA13_PWM2	include/at91sam7s512.h	/^#define AT91C_PA13_PWM2 /;"	d
AT91C_PA14_PWM3	include/at91sam7s512.h	/^#define AT91C_PA14_PWM3 /;"	d
AT91C_PA14_SPCK	include/at91sam7s512.h	/^#define AT91C_PA14_SPCK /;"	d
AT91C_PA15_TF	include/at91sam7s512.h	/^#define AT91C_PA15_TF /;"	d
AT91C_PA15_TIOA1	include/at91sam7s512.h	/^#define AT91C_PA15_TIOA1 /;"	d
AT91C_PA16_TIOB1	include/at91sam7s512.h	/^#define AT91C_PA16_TIOB1 /;"	d
AT91C_PA16_TK	include/at91sam7s512.h	/^#define AT91C_PA16_TK /;"	d
AT91C_PA17_PCK1	include/at91sam7s512.h	/^#define AT91C_PA17_PCK1 /;"	d
AT91C_PA17_TD	include/at91sam7s512.h	/^#define AT91C_PA17_TD /;"	d
AT91C_PA18_PCK2	include/at91sam7s512.h	/^#define AT91C_PA18_PCK2 /;"	d
AT91C_PA18_RD	include/at91sam7s512.h	/^#define AT91C_PA18_RD /;"	d
AT91C_PA19_FIQ	include/at91sam7s512.h	/^#define AT91C_PA19_FIQ /;"	d
AT91C_PA19_RK	include/at91sam7s512.h	/^#define AT91C_PA19_RK /;"	d
AT91C_PA1_PWM1	include/at91sam7s512.h	/^#define AT91C_PA1_PWM1 /;"	d
AT91C_PA1_TIOB0	include/at91sam7s512.h	/^#define AT91C_PA1_TIOB0 /;"	d
AT91C_PA20_IRQ0	include/at91sam7s512.h	/^#define AT91C_PA20_IRQ0 /;"	d
AT91C_PA20_RF	include/at91sam7s512.h	/^#define AT91C_PA20_RF /;"	d
AT91C_PA21_PCK1	include/at91sam7s512.h	/^#define AT91C_PA21_PCK1 /;"	d
AT91C_PA21_RXD1	include/at91sam7s512.h	/^#define AT91C_PA21_RXD1 /;"	d
AT91C_PA22_NPCS3	include/at91sam7s512.h	/^#define AT91C_PA22_NPCS3 /;"	d
AT91C_PA22_TXD1	include/at91sam7s512.h	/^#define AT91C_PA22_TXD1 /;"	d
AT91C_PA23_PWM0	include/at91sam7s512.h	/^#define AT91C_PA23_PWM0 /;"	d
AT91C_PA23_SCK1	include/at91sam7s512.h	/^#define AT91C_PA23_SCK1 /;"	d
AT91C_PA24_PWM1	include/at91sam7s512.h	/^#define AT91C_PA24_PWM1 /;"	d
AT91C_PA24_RTS1	include/at91sam7s512.h	/^#define AT91C_PA24_RTS1 /;"	d
AT91C_PA25_CTS1	include/at91sam7s512.h	/^#define AT91C_PA25_CTS1 /;"	d
AT91C_PA25_PWM2	include/at91sam7s512.h	/^#define AT91C_PA25_PWM2 /;"	d
AT91C_PA26_DCD1	include/at91sam7s512.h	/^#define AT91C_PA26_DCD1 /;"	d
AT91C_PA26_TIOA2	include/at91sam7s512.h	/^#define AT91C_PA26_TIOA2 /;"	d
AT91C_PA27_DTR1	include/at91sam7s512.h	/^#define AT91C_PA27_DTR1 /;"	d
AT91C_PA27_TIOB2	include/at91sam7s512.h	/^#define AT91C_PA27_TIOB2 /;"	d
AT91C_PA28_DSR1	include/at91sam7s512.h	/^#define AT91C_PA28_DSR1 /;"	d
AT91C_PA28_TCLK1	include/at91sam7s512.h	/^#define AT91C_PA28_TCLK1 /;"	d
AT91C_PA29_RI1	include/at91sam7s512.h	/^#define AT91C_PA29_RI1 /;"	d
AT91C_PA29_TCLK2	include/at91sam7s512.h	/^#define AT91C_PA29_TCLK2 /;"	d
AT91C_PA2_PWM2	include/at91sam7s512.h	/^#define AT91C_PA2_PWM2 /;"	d
AT91C_PA2_SCK0	include/at91sam7s512.h	/^#define AT91C_PA2_SCK0 /;"	d
AT91C_PA30_IRQ1	include/at91sam7s512.h	/^#define AT91C_PA30_IRQ1 /;"	d
AT91C_PA30_NPCS2	include/at91sam7s512.h	/^#define AT91C_PA30_NPCS2 /;"	d
AT91C_PA31_NPCS1	include/at91sam7s512.h	/^#define AT91C_PA31_NPCS1 /;"	d
AT91C_PA31_PCK2	include/at91sam7s512.h	/^#define AT91C_PA31_PCK2 /;"	d
AT91C_PA3_NPCS3	include/at91sam7s512.h	/^#define AT91C_PA3_NPCS3 /;"	d
AT91C_PA3_TWD	include/at91sam7s512.h	/^#define AT91C_PA3_TWD /;"	d
AT91C_PA4_TCLK0	include/at91sam7s512.h	/^#define AT91C_PA4_TCLK0 /;"	d
AT91C_PA4_TWCK	include/at91sam7s512.h	/^#define AT91C_PA4_TWCK /;"	d
AT91C_PA5_NPCS3	include/at91sam7s512.h	/^#define AT91C_PA5_NPCS3 /;"	d
AT91C_PA5_RXD0	include/at91sam7s512.h	/^#define AT91C_PA5_RXD0 /;"	d
AT91C_PA6_PCK0	include/at91sam7s512.h	/^#define AT91C_PA6_PCK0 /;"	d
AT91C_PA6_TXD0	include/at91sam7s512.h	/^#define AT91C_PA6_TXD0 /;"	d
AT91C_PA7_PWM3	include/at91sam7s512.h	/^#define AT91C_PA7_PWM3 /;"	d
AT91C_PA7_RTS0	include/at91sam7s512.h	/^#define AT91C_PA7_RTS0 /;"	d
AT91C_PA8_ADTRG	include/at91sam7s512.h	/^#define AT91C_PA8_ADTRG /;"	d
AT91C_PA8_CTS0	include/at91sam7s512.h	/^#define AT91C_PA8_CTS0 /;"	d
AT91C_PA9_DRXD	include/at91sam7s512.h	/^#define AT91C_PA9_DRXD /;"	d
AT91C_PA9_NPCS1	include/at91sam7s512.h	/^#define AT91C_PA9_NPCS1 /;"	d
AT91C_PDC_RXTDIS	include/at91sam7s512.h	/^#define AT91C_PDC_RXTDIS /;"	d
AT91C_PDC_RXTEN	include/at91sam7s512.h	/^#define AT91C_PDC_RXTEN /;"	d
AT91C_PDC_TXTDIS	include/at91sam7s512.h	/^#define AT91C_PDC_TXTDIS /;"	d
AT91C_PDC_TXTEN	include/at91sam7s512.h	/^#define AT91C_PDC_TXTEN /;"	d
AT91C_PIOA_ABSR	include/at91sam7s512.h	/^#define AT91C_PIOA_ABSR /;"	d
AT91C_PIOA_ASR	include/at91sam7s512.h	/^#define AT91C_PIOA_ASR /;"	d
AT91C_PIOA_BSR	include/at91sam7s512.h	/^#define AT91C_PIOA_BSR /;"	d
AT91C_PIOA_CODR	include/at91sam7s512.h	/^#define AT91C_PIOA_CODR /;"	d
AT91C_PIOA_IDR	include/at91sam7s512.h	/^#define AT91C_PIOA_IDR /;"	d
AT91C_PIOA_IER	include/at91sam7s512.h	/^#define AT91C_PIOA_IER /;"	d
AT91C_PIOA_IFDR	include/at91sam7s512.h	/^#define AT91C_PIOA_IFDR /;"	d
AT91C_PIOA_IFER	include/at91sam7s512.h	/^#define AT91C_PIOA_IFER /;"	d
AT91C_PIOA_IFSR	include/at91sam7s512.h	/^#define AT91C_PIOA_IFSR /;"	d
AT91C_PIOA_IMR	include/at91sam7s512.h	/^#define AT91C_PIOA_IMR /;"	d
AT91C_PIOA_ISR	include/at91sam7s512.h	/^#define AT91C_PIOA_ISR /;"	d
AT91C_PIOA_MDDR	include/at91sam7s512.h	/^#define AT91C_PIOA_MDDR /;"	d
AT91C_PIOA_MDER	include/at91sam7s512.h	/^#define AT91C_PIOA_MDER /;"	d
AT91C_PIOA_MDSR	include/at91sam7s512.h	/^#define AT91C_PIOA_MDSR /;"	d
AT91C_PIOA_ODR	include/at91sam7s512.h	/^#define AT91C_PIOA_ODR /;"	d
AT91C_PIOA_ODSR	include/at91sam7s512.h	/^#define AT91C_PIOA_ODSR /;"	d
AT91C_PIOA_OER	include/at91sam7s512.h	/^#define AT91C_PIOA_OER /;"	d
AT91C_PIOA_OSR	include/at91sam7s512.h	/^#define AT91C_PIOA_OSR /;"	d
AT91C_PIOA_OWDR	include/at91sam7s512.h	/^#define AT91C_PIOA_OWDR /;"	d
AT91C_PIOA_OWER	include/at91sam7s512.h	/^#define AT91C_PIOA_OWER /;"	d
AT91C_PIOA_OWSR	include/at91sam7s512.h	/^#define AT91C_PIOA_OWSR /;"	d
AT91C_PIOA_PDR	include/at91sam7s512.h	/^#define AT91C_PIOA_PDR /;"	d
AT91C_PIOA_PDSR	include/at91sam7s512.h	/^#define AT91C_PIOA_PDSR /;"	d
AT91C_PIOA_PER	include/at91sam7s512.h	/^#define AT91C_PIOA_PER /;"	d
AT91C_PIOA_PPUDR	include/at91sam7s512.h	/^#define AT91C_PIOA_PPUDR /;"	d
AT91C_PIOA_PPUER	include/at91sam7s512.h	/^#define AT91C_PIOA_PPUER /;"	d
AT91C_PIOA_PPUSR	include/at91sam7s512.h	/^#define AT91C_PIOA_PPUSR /;"	d
AT91C_PIOA_PSR	include/at91sam7s512.h	/^#define AT91C_PIOA_PSR /;"	d
AT91C_PIOA_SODR	include/at91sam7s512.h	/^#define AT91C_PIOA_SODR /;"	d
AT91C_PIO_PA0	include/at91sam7s512.h	/^#define AT91C_PIO_PA0 /;"	d
AT91C_PIO_PA1	include/at91sam7s512.h	/^#define AT91C_PIO_PA1 /;"	d
AT91C_PIO_PA10	include/at91sam7s512.h	/^#define AT91C_PIO_PA10 /;"	d
AT91C_PIO_PA11	include/at91sam7s512.h	/^#define AT91C_PIO_PA11 /;"	d
AT91C_PIO_PA12	include/at91sam7s512.h	/^#define AT91C_PIO_PA12 /;"	d
AT91C_PIO_PA13	include/at91sam7s512.h	/^#define AT91C_PIO_PA13 /;"	d
AT91C_PIO_PA14	include/at91sam7s512.h	/^#define AT91C_PIO_PA14 /;"	d
AT91C_PIO_PA15	include/at91sam7s512.h	/^#define AT91C_PIO_PA15 /;"	d
AT91C_PIO_PA16	include/at91sam7s512.h	/^#define AT91C_PIO_PA16 /;"	d
AT91C_PIO_PA17	include/at91sam7s512.h	/^#define AT91C_PIO_PA17 /;"	d
AT91C_PIO_PA18	include/at91sam7s512.h	/^#define AT91C_PIO_PA18 /;"	d
AT91C_PIO_PA19	include/at91sam7s512.h	/^#define AT91C_PIO_PA19 /;"	d
AT91C_PIO_PA2	include/at91sam7s512.h	/^#define AT91C_PIO_PA2 /;"	d
AT91C_PIO_PA20	include/at91sam7s512.h	/^#define AT91C_PIO_PA20 /;"	d
AT91C_PIO_PA21	include/at91sam7s512.h	/^#define AT91C_PIO_PA21 /;"	d
AT91C_PIO_PA22	include/at91sam7s512.h	/^#define AT91C_PIO_PA22 /;"	d
AT91C_PIO_PA23	include/at91sam7s512.h	/^#define AT91C_PIO_PA23 /;"	d
AT91C_PIO_PA24	include/at91sam7s512.h	/^#define AT91C_PIO_PA24 /;"	d
AT91C_PIO_PA25	include/at91sam7s512.h	/^#define AT91C_PIO_PA25 /;"	d
AT91C_PIO_PA26	include/at91sam7s512.h	/^#define AT91C_PIO_PA26 /;"	d
AT91C_PIO_PA27	include/at91sam7s512.h	/^#define AT91C_PIO_PA27 /;"	d
AT91C_PIO_PA28	include/at91sam7s512.h	/^#define AT91C_PIO_PA28 /;"	d
AT91C_PIO_PA29	include/at91sam7s512.h	/^#define AT91C_PIO_PA29 /;"	d
AT91C_PIO_PA3	include/at91sam7s512.h	/^#define AT91C_PIO_PA3 /;"	d
AT91C_PIO_PA30	include/at91sam7s512.h	/^#define AT91C_PIO_PA30 /;"	d
AT91C_PIO_PA31	include/at91sam7s512.h	/^#define AT91C_PIO_PA31 /;"	d
AT91C_PIO_PA4	include/at91sam7s512.h	/^#define AT91C_PIO_PA4 /;"	d
AT91C_PIO_PA5	include/at91sam7s512.h	/^#define AT91C_PIO_PA5 /;"	d
AT91C_PIO_PA6	include/at91sam7s512.h	/^#define AT91C_PIO_PA6 /;"	d
AT91C_PIO_PA7	include/at91sam7s512.h	/^#define AT91C_PIO_PA7 /;"	d
AT91C_PIO_PA8	include/at91sam7s512.h	/^#define AT91C_PIO_PA8 /;"	d
AT91C_PIO_PA9	include/at91sam7s512.h	/^#define AT91C_PIO_PA9 /;"	d
AT91C_PITC_CPIV	include/at91sam7s512.h	/^#define AT91C_PITC_CPIV /;"	d
AT91C_PITC_PICNT	include/at91sam7s512.h	/^#define AT91C_PITC_PICNT /;"	d
AT91C_PITC_PIIR	include/at91sam7s512.h	/^#define AT91C_PITC_PIIR /;"	d
AT91C_PITC_PIMR	include/at91sam7s512.h	/^#define AT91C_PITC_PIMR /;"	d
AT91C_PITC_PISR	include/at91sam7s512.h	/^#define AT91C_PITC_PISR /;"	d
AT91C_PITC_PITEN	include/at91sam7s512.h	/^#define AT91C_PITC_PITEN /;"	d
AT91C_PITC_PITIEN	include/at91sam7s512.h	/^#define AT91C_PITC_PITIEN /;"	d
AT91C_PITC_PITS	include/at91sam7s512.h	/^#define AT91C_PITC_PITS /;"	d
AT91C_PITC_PIV	include/at91sam7s512.h	/^#define AT91C_PITC_PIV /;"	d
AT91C_PITC_PIVR	include/at91sam7s512.h	/^#define AT91C_PITC_PIVR /;"	d
AT91C_PMC_CSS	include/at91sam7s512.h	/^#define AT91C_PMC_CSS /;"	d
AT91C_PMC_CSS_MAIN_CLK	include/at91sam7s512.h	/^#define 	AT91C_PMC_CSS_MAIN_CLK /;"	d
AT91C_PMC_CSS_PLL_CLK	include/at91sam7s512.h	/^#define 	AT91C_PMC_CSS_PLL_CLK /;"	d
AT91C_PMC_CSS_SLOW_CLK	include/at91sam7s512.h	/^#define 	AT91C_PMC_CSS_SLOW_CLK /;"	d
AT91C_PMC_IDR	include/at91sam7s512.h	/^#define AT91C_PMC_IDR /;"	d
AT91C_PMC_IER	include/at91sam7s512.h	/^#define AT91C_PMC_IER /;"	d
AT91C_PMC_IMR	include/at91sam7s512.h	/^#define AT91C_PMC_IMR /;"	d
AT91C_PMC_LOCK	include/at91sam7s512.h	/^#define AT91C_PMC_LOCK /;"	d
AT91C_PMC_MCFR	include/at91sam7s512.h	/^#define AT91C_PMC_MCFR /;"	d
AT91C_PMC_MCKR	include/at91sam7s512.h	/^#define AT91C_PMC_MCKR /;"	d
AT91C_PMC_MCKRDY	include/at91sam7s512.h	/^#define AT91C_PMC_MCKRDY /;"	d
AT91C_PMC_MOR	include/at91sam7s512.h	/^#define AT91C_PMC_MOR /;"	d
AT91C_PMC_MOSCS	include/at91sam7s512.h	/^#define AT91C_PMC_MOSCS /;"	d
AT91C_PMC_PCDR	include/at91sam7s512.h	/^#define AT91C_PMC_PCDR /;"	d
AT91C_PMC_PCER	include/at91sam7s512.h	/^#define AT91C_PMC_PCER /;"	d
AT91C_PMC_PCK	include/at91sam7s512.h	/^#define AT91C_PMC_PCK /;"	d
AT91C_PMC_PCK0	include/at91sam7s512.h	/^#define AT91C_PMC_PCK0 /;"	d
AT91C_PMC_PCK0RDY	include/at91sam7s512.h	/^#define AT91C_PMC_PCK0RDY /;"	d
AT91C_PMC_PCK1	include/at91sam7s512.h	/^#define AT91C_PMC_PCK1 /;"	d
AT91C_PMC_PCK1RDY	include/at91sam7s512.h	/^#define AT91C_PMC_PCK1RDY /;"	d
AT91C_PMC_PCK2	include/at91sam7s512.h	/^#define AT91C_PMC_PCK2 /;"	d
AT91C_PMC_PCK2RDY	include/at91sam7s512.h	/^#define AT91C_PMC_PCK2RDY /;"	d
AT91C_PMC_PCKR	include/at91sam7s512.h	/^#define AT91C_PMC_PCKR /;"	d
AT91C_PMC_PCSR	include/at91sam7s512.h	/^#define AT91C_PMC_PCSR /;"	d
AT91C_PMC_PLLR	include/at91sam7s512.h	/^#define AT91C_PMC_PLLR /;"	d
AT91C_PMC_PRES	include/at91sam7s512.h	/^#define AT91C_PMC_PRES /;"	d
AT91C_PMC_PRES_CLK	include/at91sam7s512.h	/^#define 	AT91C_PMC_PRES_CLK /;"	d
AT91C_PMC_PRES_CLK_16	include/at91sam7s512.h	/^#define 	AT91C_PMC_PRES_CLK_16 /;"	d
AT91C_PMC_PRES_CLK_2	include/at91sam7s512.h	/^#define 	AT91C_PMC_PRES_CLK_2 /;"	d
AT91C_PMC_PRES_CLK_32	include/at91sam7s512.h	/^#define 	AT91C_PMC_PRES_CLK_32 /;"	d
AT91C_PMC_PRES_CLK_4	include/at91sam7s512.h	/^#define 	AT91C_PMC_PRES_CLK_4 /;"	d
AT91C_PMC_PRES_CLK_64	include/at91sam7s512.h	/^#define 	AT91C_PMC_PRES_CLK_64 /;"	d
AT91C_PMC_PRES_CLK_8	include/at91sam7s512.h	/^#define 	AT91C_PMC_PRES_CLK_8 /;"	d
AT91C_PMC_SCDR	include/at91sam7s512.h	/^#define AT91C_PMC_SCDR /;"	d
AT91C_PMC_SCER	include/at91sam7s512.h	/^#define AT91C_PMC_SCER /;"	d
AT91C_PMC_SCSR	include/at91sam7s512.h	/^#define AT91C_PMC_SCSR /;"	d
AT91C_PMC_SR	include/at91sam7s512.h	/^#define AT91C_PMC_SR /;"	d
AT91C_PMC_UDP	include/at91sam7s512.h	/^#define AT91C_PMC_UDP /;"	d
AT91C_PWMC_CALG	include/at91sam7s512.h	/^#define AT91C_PWMC_CALG /;"	d
AT91C_PWMC_CCNT	include/at91sam7s512.h	/^#define AT91C_PWMC_CCNT /;"	d
AT91C_PWMC_CDTY	include/at91sam7s512.h	/^#define AT91C_PWMC_CDTY /;"	d
AT91C_PWMC_CH0_CCNTR	include/at91sam7s512.h	/^#define AT91C_PWMC_CH0_CCNTR /;"	d
AT91C_PWMC_CH0_CDTYR	include/at91sam7s512.h	/^#define AT91C_PWMC_CH0_CDTYR /;"	d
AT91C_PWMC_CH0_CMR	include/at91sam7s512.h	/^#define AT91C_PWMC_CH0_CMR /;"	d
AT91C_PWMC_CH0_CPRDR	include/at91sam7s512.h	/^#define AT91C_PWMC_CH0_CPRDR /;"	d
AT91C_PWMC_CH0_CUPDR	include/at91sam7s512.h	/^#define AT91C_PWMC_CH0_CUPDR /;"	d
AT91C_PWMC_CH0_Reserved	include/at91sam7s512.h	/^#define AT91C_PWMC_CH0_Reserved /;"	d
AT91C_PWMC_CH1_CCNTR	include/at91sam7s512.h	/^#define AT91C_PWMC_CH1_CCNTR /;"	d
AT91C_PWMC_CH1_CDTYR	include/at91sam7s512.h	/^#define AT91C_PWMC_CH1_CDTYR /;"	d
AT91C_PWMC_CH1_CMR	include/at91sam7s512.h	/^#define AT91C_PWMC_CH1_CMR /;"	d
AT91C_PWMC_CH1_CPRDR	include/at91sam7s512.h	/^#define AT91C_PWMC_CH1_CPRDR /;"	d
AT91C_PWMC_CH1_CUPDR	include/at91sam7s512.h	/^#define AT91C_PWMC_CH1_CUPDR /;"	d
AT91C_PWMC_CH1_Reserved	include/at91sam7s512.h	/^#define AT91C_PWMC_CH1_Reserved /;"	d
AT91C_PWMC_CH2_CCNTR	include/at91sam7s512.h	/^#define AT91C_PWMC_CH2_CCNTR /;"	d
AT91C_PWMC_CH2_CDTYR	include/at91sam7s512.h	/^#define AT91C_PWMC_CH2_CDTYR /;"	d
AT91C_PWMC_CH2_CMR	include/at91sam7s512.h	/^#define AT91C_PWMC_CH2_CMR /;"	d
AT91C_PWMC_CH2_CPRDR	include/at91sam7s512.h	/^#define AT91C_PWMC_CH2_CPRDR /;"	d
AT91C_PWMC_CH2_CUPDR	include/at91sam7s512.h	/^#define AT91C_PWMC_CH2_CUPDR /;"	d
AT91C_PWMC_CH2_Reserved	include/at91sam7s512.h	/^#define AT91C_PWMC_CH2_Reserved /;"	d
AT91C_PWMC_CH3_CCNTR	include/at91sam7s512.h	/^#define AT91C_PWMC_CH3_CCNTR /;"	d
AT91C_PWMC_CH3_CDTYR	include/at91sam7s512.h	/^#define AT91C_PWMC_CH3_CDTYR /;"	d
AT91C_PWMC_CH3_CMR	include/at91sam7s512.h	/^#define AT91C_PWMC_CH3_CMR /;"	d
AT91C_PWMC_CH3_CPRDR	include/at91sam7s512.h	/^#define AT91C_PWMC_CH3_CPRDR /;"	d
AT91C_PWMC_CH3_CUPDR	include/at91sam7s512.h	/^#define AT91C_PWMC_CH3_CUPDR /;"	d
AT91C_PWMC_CH3_Reserved	include/at91sam7s512.h	/^#define AT91C_PWMC_CH3_Reserved /;"	d
AT91C_PWMC_CHID0	include/at91sam7s512.h	/^#define AT91C_PWMC_CHID0 /;"	d
AT91C_PWMC_CHID1	include/at91sam7s512.h	/^#define AT91C_PWMC_CHID1 /;"	d
AT91C_PWMC_CHID2	include/at91sam7s512.h	/^#define AT91C_PWMC_CHID2 /;"	d
AT91C_PWMC_CHID3	include/at91sam7s512.h	/^#define AT91C_PWMC_CHID3 /;"	d
AT91C_PWMC_CPD	include/at91sam7s512.h	/^#define AT91C_PWMC_CPD /;"	d
AT91C_PWMC_CPOL	include/at91sam7s512.h	/^#define AT91C_PWMC_CPOL /;"	d
AT91C_PWMC_CPRD	include/at91sam7s512.h	/^#define AT91C_PWMC_CPRD /;"	d
AT91C_PWMC_CPRE	include/at91sam7s512.h	/^#define AT91C_PWMC_CPRE /;"	d
AT91C_PWMC_CPRE_MCK	include/at91sam7s512.h	/^#define 	AT91C_PWMC_CPRE_MCK /;"	d
AT91C_PWMC_CPRE_MCKA	include/at91sam7s512.h	/^#define 	AT91C_PWMC_CPRE_MCKA /;"	d
AT91C_PWMC_CPRE_MCKB	include/at91sam7s512.h	/^#define 	AT91C_PWMC_CPRE_MCKB /;"	d
AT91C_PWMC_CUPD	include/at91sam7s512.h	/^#define AT91C_PWMC_CUPD /;"	d
AT91C_PWMC_DIS	include/at91sam7s512.h	/^#define AT91C_PWMC_DIS /;"	d
AT91C_PWMC_DIVA	include/at91sam7s512.h	/^#define AT91C_PWMC_DIVA /;"	d
AT91C_PWMC_DIVB	include/at91sam7s512.h	/^#define AT91C_PWMC_DIVB /;"	d
AT91C_PWMC_ENA	include/at91sam7s512.h	/^#define AT91C_PWMC_ENA /;"	d
AT91C_PWMC_IDR	include/at91sam7s512.h	/^#define AT91C_PWMC_IDR /;"	d
AT91C_PWMC_IER	include/at91sam7s512.h	/^#define AT91C_PWMC_IER /;"	d
AT91C_PWMC_IMR	include/at91sam7s512.h	/^#define AT91C_PWMC_IMR /;"	d
AT91C_PWMC_ISR	include/at91sam7s512.h	/^#define AT91C_PWMC_ISR /;"	d
AT91C_PWMC_MR	include/at91sam7s512.h	/^#define AT91C_PWMC_MR /;"	d
AT91C_PWMC_PREA	include/at91sam7s512.h	/^#define AT91C_PWMC_PREA /;"	d
AT91C_PWMC_PREA_MCK	include/at91sam7s512.h	/^#define 	AT91C_PWMC_PREA_MCK /;"	d
AT91C_PWMC_PREB	include/at91sam7s512.h	/^#define AT91C_PWMC_PREB /;"	d
AT91C_PWMC_PREB_MCK	include/at91sam7s512.h	/^#define 	AT91C_PWMC_PREB_MCK /;"	d
AT91C_PWMC_SR	include/at91sam7s512.h	/^#define AT91C_PWMC_SR /;"	d
AT91C_PWMC_VR	include/at91sam7s512.h	/^#define AT91C_PWMC_VR /;"	d
AT91C_RSTC_BODIEN	include/at91sam7s512.h	/^#define AT91C_RSTC_BODIEN /;"	d
AT91C_RSTC_BODSTS	include/at91sam7s512.h	/^#define AT91C_RSTC_BODSTS /;"	d
AT91C_RSTC_ERSTL	include/at91sam7s512.h	/^#define AT91C_RSTC_ERSTL /;"	d
AT91C_RSTC_EXTRST	include/at91sam7s512.h	/^#define AT91C_RSTC_EXTRST /;"	d
AT91C_RSTC_KEY	include/at91sam7s512.h	/^#define AT91C_RSTC_KEY /;"	d
AT91C_RSTC_NRSTL	include/at91sam7s512.h	/^#define AT91C_RSTC_NRSTL /;"	d
AT91C_RSTC_PERRST	include/at91sam7s512.h	/^#define AT91C_RSTC_PERRST /;"	d
AT91C_RSTC_PROCRST	include/at91sam7s512.h	/^#define AT91C_RSTC_PROCRST /;"	d
AT91C_RSTC_RCR	include/at91sam7s512.h	/^#define AT91C_RSTC_RCR /;"	d
AT91C_RSTC_RMR	include/at91sam7s512.h	/^#define AT91C_RSTC_RMR /;"	d
AT91C_RSTC_RSR	include/at91sam7s512.h	/^#define AT91C_RSTC_RSR /;"	d
AT91C_RSTC_RSTTYP	include/at91sam7s512.h	/^#define AT91C_RSTC_RSTTYP /;"	d
AT91C_RSTC_RSTTYP_BROWNOUT	include/at91sam7s512.h	/^#define 	AT91C_RSTC_RSTTYP_BROWNOUT /;"	d
AT91C_RSTC_RSTTYP_POWERUP	include/at91sam7s512.h	/^#define 	AT91C_RSTC_RSTTYP_POWERUP /;"	d
AT91C_RSTC_RSTTYP_SOFTWARE	include/at91sam7s512.h	/^#define 	AT91C_RSTC_RSTTYP_SOFTWARE /;"	d
AT91C_RSTC_RSTTYP_USER	include/at91sam7s512.h	/^#define 	AT91C_RSTC_RSTTYP_USER /;"	d
AT91C_RSTC_RSTTYP_WAKEUP	include/at91sam7s512.h	/^#define 	AT91C_RSTC_RSTTYP_WAKEUP /;"	d
AT91C_RSTC_RSTTYP_WATCHDOG	include/at91sam7s512.h	/^#define 	AT91C_RSTC_RSTTYP_WATCHDOG /;"	d
AT91C_RSTC_SRCMP	include/at91sam7s512.h	/^#define AT91C_RSTC_SRCMP /;"	d
AT91C_RSTC_URSTEN	include/at91sam7s512.h	/^#define AT91C_RSTC_URSTEN /;"	d
AT91C_RSTC_URSTIEN	include/at91sam7s512.h	/^#define AT91C_RSTC_URSTIEN /;"	d
AT91C_RSTC_URSTS	include/at91sam7s512.h	/^#define AT91C_RSTC_URSTS /;"	d
AT91C_RTTC_ALMIEN	include/at91sam7s512.h	/^#define AT91C_RTTC_ALMIEN /;"	d
AT91C_RTTC_ALMS	include/at91sam7s512.h	/^#define AT91C_RTTC_ALMS /;"	d
AT91C_RTTC_ALMV	include/at91sam7s512.h	/^#define AT91C_RTTC_ALMV /;"	d
AT91C_RTTC_CRTV	include/at91sam7s512.h	/^#define AT91C_RTTC_CRTV /;"	d
AT91C_RTTC_RTAR	include/at91sam7s512.h	/^#define AT91C_RTTC_RTAR /;"	d
AT91C_RTTC_RTMR	include/at91sam7s512.h	/^#define AT91C_RTTC_RTMR /;"	d
AT91C_RTTC_RTPRES	include/at91sam7s512.h	/^#define AT91C_RTTC_RTPRES /;"	d
AT91C_RTTC_RTSR	include/at91sam7s512.h	/^#define AT91C_RTTC_RTSR /;"	d
AT91C_RTTC_RTTINC	include/at91sam7s512.h	/^#define AT91C_RTTC_RTTINC /;"	d
AT91C_RTTC_RTTINCIEN	include/at91sam7s512.h	/^#define AT91C_RTTC_RTTINCIEN /;"	d
AT91C_RTTC_RTTRST	include/at91sam7s512.h	/^#define AT91C_RTTC_RTTRST /;"	d
AT91C_RTTC_RTVR	include/at91sam7s512.h	/^#define AT91C_RTTC_RTVR /;"	d
AT91C_SPI_BITS	include/at91sam7s512.h	/^#define AT91C_SPI_BITS /;"	d
AT91C_SPI_BITS_10	include/at91sam7s512.h	/^#define 	AT91C_SPI_BITS_10 /;"	d
AT91C_SPI_BITS_11	include/at91sam7s512.h	/^#define 	AT91C_SPI_BITS_11 /;"	d
AT91C_SPI_BITS_12	include/at91sam7s512.h	/^#define 	AT91C_SPI_BITS_12 /;"	d
AT91C_SPI_BITS_13	include/at91sam7s512.h	/^#define 	AT91C_SPI_BITS_13 /;"	d
AT91C_SPI_BITS_14	include/at91sam7s512.h	/^#define 	AT91C_SPI_BITS_14 /;"	d
AT91C_SPI_BITS_15	include/at91sam7s512.h	/^#define 	AT91C_SPI_BITS_15 /;"	d
AT91C_SPI_BITS_16	include/at91sam7s512.h	/^#define 	AT91C_SPI_BITS_16 /;"	d
AT91C_SPI_BITS_8	include/at91sam7s512.h	/^#define 	AT91C_SPI_BITS_8 /;"	d
AT91C_SPI_BITS_9	include/at91sam7s512.h	/^#define 	AT91C_SPI_BITS_9 /;"	d
AT91C_SPI_CPOL	include/at91sam7s512.h	/^#define AT91C_SPI_CPOL /;"	d
AT91C_SPI_CR	include/at91sam7s512.h	/^#define AT91C_SPI_CR /;"	d
AT91C_SPI_CSAAT	include/at91sam7s512.h	/^#define AT91C_SPI_CSAAT /;"	d
AT91C_SPI_CSR	include/at91sam7s512.h	/^#define AT91C_SPI_CSR /;"	d
AT91C_SPI_DLYBCS	include/at91sam7s512.h	/^#define AT91C_SPI_DLYBCS /;"	d
AT91C_SPI_DLYBCT	include/at91sam7s512.h	/^#define AT91C_SPI_DLYBCT /;"	d
AT91C_SPI_DLYBS	include/at91sam7s512.h	/^#define AT91C_SPI_DLYBS /;"	d
AT91C_SPI_ENDRX	include/at91sam7s512.h	/^#define AT91C_SPI_ENDRX /;"	d
AT91C_SPI_ENDTX	include/at91sam7s512.h	/^#define AT91C_SPI_ENDTX /;"	d
AT91C_SPI_FDIV	include/at91sam7s512.h	/^#define AT91C_SPI_FDIV /;"	d
AT91C_SPI_IDR	include/at91sam7s512.h	/^#define AT91C_SPI_IDR /;"	d
AT91C_SPI_IER	include/at91sam7s512.h	/^#define AT91C_SPI_IER /;"	d
AT91C_SPI_IMR	include/at91sam7s512.h	/^#define AT91C_SPI_IMR /;"	d
AT91C_SPI_LASTXFER	include/at91sam7s512.h	/^#define AT91C_SPI_LASTXFER /;"	d
AT91C_SPI_LLB	include/at91sam7s512.h	/^#define AT91C_SPI_LLB /;"	d
AT91C_SPI_MODF	include/at91sam7s512.h	/^#define AT91C_SPI_MODF /;"	d
AT91C_SPI_MODFDIS	include/at91sam7s512.h	/^#define AT91C_SPI_MODFDIS /;"	d
AT91C_SPI_MR	include/at91sam7s512.h	/^#define AT91C_SPI_MR /;"	d
AT91C_SPI_MSTR	include/at91sam7s512.h	/^#define AT91C_SPI_MSTR /;"	d
AT91C_SPI_NCPHA	include/at91sam7s512.h	/^#define AT91C_SPI_NCPHA /;"	d
AT91C_SPI_NSSR	include/at91sam7s512.h	/^#define AT91C_SPI_NSSR /;"	d
AT91C_SPI_OVRES	include/at91sam7s512.h	/^#define AT91C_SPI_OVRES /;"	d
AT91C_SPI_PCS	include/at91sam7s512.h	/^#define AT91C_SPI_PCS /;"	d
AT91C_SPI_PCSDEC	include/at91sam7s512.h	/^#define AT91C_SPI_PCSDEC /;"	d
AT91C_SPI_PS	include/at91sam7s512.h	/^#define AT91C_SPI_PS /;"	d
AT91C_SPI_PS_FIXED	include/at91sam7s512.h	/^#define 	AT91C_SPI_PS_FIXED /;"	d
AT91C_SPI_PS_VARIABLE	include/at91sam7s512.h	/^#define 	AT91C_SPI_PS_VARIABLE /;"	d
AT91C_SPI_PTCR	include/at91sam7s512.h	/^#define AT91C_SPI_PTCR /;"	d
AT91C_SPI_PTSR	include/at91sam7s512.h	/^#define AT91C_SPI_PTSR /;"	d
AT91C_SPI_RCR	include/at91sam7s512.h	/^#define AT91C_SPI_RCR /;"	d
AT91C_SPI_RD	include/at91sam7s512.h	/^#define AT91C_SPI_RD /;"	d
AT91C_SPI_RDR	include/at91sam7s512.h	/^#define AT91C_SPI_RDR /;"	d
AT91C_SPI_RDRF	include/at91sam7s512.h	/^#define AT91C_SPI_RDRF /;"	d
AT91C_SPI_RNCR	include/at91sam7s512.h	/^#define AT91C_SPI_RNCR /;"	d
AT91C_SPI_RNPR	include/at91sam7s512.h	/^#define AT91C_SPI_RNPR /;"	d
AT91C_SPI_RPCS	include/at91sam7s512.h	/^#define AT91C_SPI_RPCS /;"	d
AT91C_SPI_RPR	include/at91sam7s512.h	/^#define AT91C_SPI_RPR /;"	d
AT91C_SPI_RXBUFF	include/at91sam7s512.h	/^#define AT91C_SPI_RXBUFF /;"	d
AT91C_SPI_SCBR	include/at91sam7s512.h	/^#define AT91C_SPI_SCBR /;"	d
AT91C_SPI_SPIDIS	include/at91sam7s512.h	/^#define AT91C_SPI_SPIDIS /;"	d
AT91C_SPI_SPIEN	include/at91sam7s512.h	/^#define AT91C_SPI_SPIEN /;"	d
AT91C_SPI_SPIENS	include/at91sam7s512.h	/^#define AT91C_SPI_SPIENS /;"	d
AT91C_SPI_SR	include/at91sam7s512.h	/^#define AT91C_SPI_SR /;"	d
AT91C_SPI_SWRST	include/at91sam7s512.h	/^#define AT91C_SPI_SWRST /;"	d
AT91C_SPI_TCR	include/at91sam7s512.h	/^#define AT91C_SPI_TCR /;"	d
AT91C_SPI_TD	include/at91sam7s512.h	/^#define AT91C_SPI_TD /;"	d
AT91C_SPI_TDR	include/at91sam7s512.h	/^#define AT91C_SPI_TDR /;"	d
AT91C_SPI_TDRE	include/at91sam7s512.h	/^#define AT91C_SPI_TDRE /;"	d
AT91C_SPI_TNCR	include/at91sam7s512.h	/^#define AT91C_SPI_TNCR /;"	d
AT91C_SPI_TNPR	include/at91sam7s512.h	/^#define AT91C_SPI_TNPR /;"	d
AT91C_SPI_TPCS	include/at91sam7s512.h	/^#define AT91C_SPI_TPCS /;"	d
AT91C_SPI_TPR	include/at91sam7s512.h	/^#define AT91C_SPI_TPR /;"	d
AT91C_SPI_TXBUFE	include/at91sam7s512.h	/^#define AT91C_SPI_TXBUFE /;"	d
AT91C_SPI_TXEMPTY	include/at91sam7s512.h	/^#define AT91C_SPI_TXEMPTY /;"	d
AT91C_SSC_CKI	include/at91sam7s512.h	/^#define AT91C_SSC_CKI /;"	d
AT91C_SSC_CKO	include/at91sam7s512.h	/^#define AT91C_SSC_CKO /;"	d
AT91C_SSC_CKO_CONTINOUS	include/at91sam7s512.h	/^#define 	AT91C_SSC_CKO_CONTINOUS /;"	d
AT91C_SSC_CKO_DATA_TX	include/at91sam7s512.h	/^#define 	AT91C_SSC_CKO_DATA_TX /;"	d
AT91C_SSC_CKO_NONE	include/at91sam7s512.h	/^#define 	AT91C_SSC_CKO_NONE /;"	d
AT91C_SSC_CKS	include/at91sam7s512.h	/^#define AT91C_SSC_CKS /;"	d
AT91C_SSC_CKS_DIV	include/at91sam7s512.h	/^#define 	AT91C_SSC_CKS_DIV /;"	d
AT91C_SSC_CKS_RK	include/at91sam7s512.h	/^#define 	AT91C_SSC_CKS_RK /;"	d
AT91C_SSC_CKS_TK	include/at91sam7s512.h	/^#define 	AT91C_SSC_CKS_TK /;"	d
AT91C_SSC_CMR	include/at91sam7s512.h	/^#define AT91C_SSC_CMR /;"	d
AT91C_SSC_CR	include/at91sam7s512.h	/^#define AT91C_SSC_CR /;"	d
AT91C_SSC_DATDEF	include/at91sam7s512.h	/^#define AT91C_SSC_DATDEF /;"	d
AT91C_SSC_DATLEN	include/at91sam7s512.h	/^#define AT91C_SSC_DATLEN /;"	d
AT91C_SSC_DATNB	include/at91sam7s512.h	/^#define AT91C_SSC_DATNB /;"	d
AT91C_SSC_ENDRX	include/at91sam7s512.h	/^#define AT91C_SSC_ENDRX /;"	d
AT91C_SSC_ENDTX	include/at91sam7s512.h	/^#define AT91C_SSC_ENDTX /;"	d
AT91C_SSC_FSDEN	include/at91sam7s512.h	/^#define AT91C_SSC_FSDEN /;"	d
AT91C_SSC_FSEDGE	include/at91sam7s512.h	/^#define AT91C_SSC_FSEDGE /;"	d
AT91C_SSC_FSLEN	include/at91sam7s512.h	/^#define AT91C_SSC_FSLEN /;"	d
AT91C_SSC_FSOS	include/at91sam7s512.h	/^#define AT91C_SSC_FSOS /;"	d
AT91C_SSC_FSOS_HIGH	include/at91sam7s512.h	/^#define 	AT91C_SSC_FSOS_HIGH /;"	d
AT91C_SSC_FSOS_LOW	include/at91sam7s512.h	/^#define 	AT91C_SSC_FSOS_LOW /;"	d
AT91C_SSC_FSOS_NEGATIVE	include/at91sam7s512.h	/^#define 	AT91C_SSC_FSOS_NEGATIVE /;"	d
AT91C_SSC_FSOS_NONE	include/at91sam7s512.h	/^#define 	AT91C_SSC_FSOS_NONE /;"	d
AT91C_SSC_FSOS_POSITIVE	include/at91sam7s512.h	/^#define 	AT91C_SSC_FSOS_POSITIVE /;"	d
AT91C_SSC_FSOS_TOGGLE	include/at91sam7s512.h	/^#define 	AT91C_SSC_FSOS_TOGGLE /;"	d
AT91C_SSC_IDR	include/at91sam7s512.h	/^#define AT91C_SSC_IDR /;"	d
AT91C_SSC_IER	include/at91sam7s512.h	/^#define AT91C_SSC_IER /;"	d
AT91C_SSC_IMR	include/at91sam7s512.h	/^#define AT91C_SSC_IMR /;"	d
AT91C_SSC_LOOP	include/at91sam7s512.h	/^#define AT91C_SSC_LOOP /;"	d
AT91C_SSC_MSBF	include/at91sam7s512.h	/^#define AT91C_SSC_MSBF /;"	d
AT91C_SSC_OVRUN	include/at91sam7s512.h	/^#define AT91C_SSC_OVRUN /;"	d
AT91C_SSC_PERIOD	include/at91sam7s512.h	/^#define AT91C_SSC_PERIOD /;"	d
AT91C_SSC_PTCR	include/at91sam7s512.h	/^#define AT91C_SSC_PTCR /;"	d
AT91C_SSC_PTSR	include/at91sam7s512.h	/^#define AT91C_SSC_PTSR /;"	d
AT91C_SSC_RCMR	include/at91sam7s512.h	/^#define AT91C_SSC_RCMR /;"	d
AT91C_SSC_RCR	include/at91sam7s512.h	/^#define AT91C_SSC_RCR /;"	d
AT91C_SSC_RFMR	include/at91sam7s512.h	/^#define AT91C_SSC_RFMR /;"	d
AT91C_SSC_RHR	include/at91sam7s512.h	/^#define AT91C_SSC_RHR /;"	d
AT91C_SSC_RNCR	include/at91sam7s512.h	/^#define AT91C_SSC_RNCR /;"	d
AT91C_SSC_RNPR	include/at91sam7s512.h	/^#define AT91C_SSC_RNPR /;"	d
AT91C_SSC_RPR	include/at91sam7s512.h	/^#define AT91C_SSC_RPR /;"	d
AT91C_SSC_RSHR	include/at91sam7s512.h	/^#define AT91C_SSC_RSHR /;"	d
AT91C_SSC_RXBUFF	include/at91sam7s512.h	/^#define AT91C_SSC_RXBUFF /;"	d
AT91C_SSC_RXDIS	include/at91sam7s512.h	/^#define AT91C_SSC_RXDIS /;"	d
AT91C_SSC_RXEN	include/at91sam7s512.h	/^#define AT91C_SSC_RXEN /;"	d
AT91C_SSC_RXENA	include/at91sam7s512.h	/^#define AT91C_SSC_RXENA /;"	d
AT91C_SSC_RXRDY	include/at91sam7s512.h	/^#define AT91C_SSC_RXRDY /;"	d
AT91C_SSC_RXSYN	include/at91sam7s512.h	/^#define AT91C_SSC_RXSYN /;"	d
AT91C_SSC_SR	include/at91sam7s512.h	/^#define AT91C_SSC_SR /;"	d
AT91C_SSC_START	include/at91sam7s512.h	/^#define AT91C_SSC_START /;"	d
AT91C_SSC_START_0	include/at91sam7s512.h	/^#define 	AT91C_SSC_START_0 /;"	d
AT91C_SSC_START_CONTINOUS	include/at91sam7s512.h	/^#define 	AT91C_SSC_START_CONTINOUS /;"	d
AT91C_SSC_START_EDGE_RF	include/at91sam7s512.h	/^#define 	AT91C_SSC_START_EDGE_RF /;"	d
AT91C_SSC_START_FALL_RF	include/at91sam7s512.h	/^#define 	AT91C_SSC_START_FALL_RF /;"	d
AT91C_SSC_START_HIGH_RF	include/at91sam7s512.h	/^#define 	AT91C_SSC_START_HIGH_RF /;"	d
AT91C_SSC_START_LEVEL_RF	include/at91sam7s512.h	/^#define 	AT91C_SSC_START_LEVEL_RF /;"	d
AT91C_SSC_START_LOW_RF	include/at91sam7s512.h	/^#define 	AT91C_SSC_START_LOW_RF /;"	d
AT91C_SSC_START_RISE_RF	include/at91sam7s512.h	/^#define 	AT91C_SSC_START_RISE_RF /;"	d
AT91C_SSC_START_TX	include/at91sam7s512.h	/^#define 	AT91C_SSC_START_TX /;"	d
AT91C_SSC_STTDLY	include/at91sam7s512.h	/^#define AT91C_SSC_STTDLY /;"	d
AT91C_SSC_SWRST	include/at91sam7s512.h	/^#define AT91C_SSC_SWRST /;"	d
AT91C_SSC_TCMR	include/at91sam7s512.h	/^#define AT91C_SSC_TCMR /;"	d
AT91C_SSC_TCR	include/at91sam7s512.h	/^#define AT91C_SSC_TCR /;"	d
AT91C_SSC_TFMR	include/at91sam7s512.h	/^#define AT91C_SSC_TFMR /;"	d
AT91C_SSC_THR	include/at91sam7s512.h	/^#define AT91C_SSC_THR /;"	d
AT91C_SSC_TNCR	include/at91sam7s512.h	/^#define AT91C_SSC_TNCR /;"	d
AT91C_SSC_TNPR	include/at91sam7s512.h	/^#define AT91C_SSC_TNPR /;"	d
AT91C_SSC_TPR	include/at91sam7s512.h	/^#define AT91C_SSC_TPR /;"	d
AT91C_SSC_TSHR	include/at91sam7s512.h	/^#define AT91C_SSC_TSHR /;"	d
AT91C_SSC_TXBUFE	include/at91sam7s512.h	/^#define AT91C_SSC_TXBUFE /;"	d
AT91C_SSC_TXDIS	include/at91sam7s512.h	/^#define AT91C_SSC_TXDIS /;"	d
AT91C_SSC_TXEMPTY	include/at91sam7s512.h	/^#define AT91C_SSC_TXEMPTY /;"	d
AT91C_SSC_TXEN	include/at91sam7s512.h	/^#define AT91C_SSC_TXEN /;"	d
AT91C_SSC_TXENA	include/at91sam7s512.h	/^#define AT91C_SSC_TXENA /;"	d
AT91C_SSC_TXRDY	include/at91sam7s512.h	/^#define AT91C_SSC_TXRDY /;"	d
AT91C_SSC_TXSYN	include/at91sam7s512.h	/^#define AT91C_SSC_TXSYN /;"	d
AT91C_TC0_CCR	include/at91sam7s512.h	/^#define AT91C_TC0_CCR /;"	d
AT91C_TC0_CMR	include/at91sam7s512.h	/^#define AT91C_TC0_CMR /;"	d
AT91C_TC0_CV	include/at91sam7s512.h	/^#define AT91C_TC0_CV /;"	d
AT91C_TC0_IDR	include/at91sam7s512.h	/^#define AT91C_TC0_IDR /;"	d
AT91C_TC0_IER	include/at91sam7s512.h	/^#define AT91C_TC0_IER /;"	d
AT91C_TC0_IMR	include/at91sam7s512.h	/^#define AT91C_TC0_IMR /;"	d
AT91C_TC0_RA	include/at91sam7s512.h	/^#define AT91C_TC0_RA /;"	d
AT91C_TC0_RB	include/at91sam7s512.h	/^#define AT91C_TC0_RB /;"	d
AT91C_TC0_RC	include/at91sam7s512.h	/^#define AT91C_TC0_RC /;"	d
AT91C_TC0_SR	include/at91sam7s512.h	/^#define AT91C_TC0_SR /;"	d
AT91C_TC1_CCR	include/at91sam7s512.h	/^#define AT91C_TC1_CCR /;"	d
AT91C_TC1_CMR	include/at91sam7s512.h	/^#define AT91C_TC1_CMR /;"	d
AT91C_TC1_CV	include/at91sam7s512.h	/^#define AT91C_TC1_CV /;"	d
AT91C_TC1_IDR	include/at91sam7s512.h	/^#define AT91C_TC1_IDR /;"	d
AT91C_TC1_IER	include/at91sam7s512.h	/^#define AT91C_TC1_IER /;"	d
AT91C_TC1_IMR	include/at91sam7s512.h	/^#define AT91C_TC1_IMR /;"	d
AT91C_TC1_RA	include/at91sam7s512.h	/^#define AT91C_TC1_RA /;"	d
AT91C_TC1_RB	include/at91sam7s512.h	/^#define AT91C_TC1_RB /;"	d
AT91C_TC1_RC	include/at91sam7s512.h	/^#define AT91C_TC1_RC /;"	d
AT91C_TC1_SR	include/at91sam7s512.h	/^#define AT91C_TC1_SR /;"	d
AT91C_TC2_CCR	include/at91sam7s512.h	/^#define AT91C_TC2_CCR /;"	d
AT91C_TC2_CMR	include/at91sam7s512.h	/^#define AT91C_TC2_CMR /;"	d
AT91C_TC2_CV	include/at91sam7s512.h	/^#define AT91C_TC2_CV /;"	d
AT91C_TC2_IDR	include/at91sam7s512.h	/^#define AT91C_TC2_IDR /;"	d
AT91C_TC2_IER	include/at91sam7s512.h	/^#define AT91C_TC2_IER /;"	d
AT91C_TC2_IMR	include/at91sam7s512.h	/^#define AT91C_TC2_IMR /;"	d
AT91C_TC2_RA	include/at91sam7s512.h	/^#define AT91C_TC2_RA /;"	d
AT91C_TC2_RB	include/at91sam7s512.h	/^#define AT91C_TC2_RB /;"	d
AT91C_TC2_RC	include/at91sam7s512.h	/^#define AT91C_TC2_RC /;"	d
AT91C_TC2_SR	include/at91sam7s512.h	/^#define AT91C_TC2_SR /;"	d
AT91C_TCB_BCR	include/at91sam7s512.h	/^#define AT91C_TCB_BCR /;"	d
AT91C_TCB_BMR	include/at91sam7s512.h	/^#define AT91C_TCB_BMR /;"	d
AT91C_TCB_SYNC	include/at91sam7s512.h	/^#define AT91C_TCB_SYNC /;"	d
AT91C_TCB_TC0XC0S	include/at91sam7s512.h	/^#define AT91C_TCB_TC0XC0S /;"	d
AT91C_TCB_TC0XC0S_NONE	include/at91sam7s512.h	/^#define 	AT91C_TCB_TC0XC0S_NONE /;"	d
AT91C_TCB_TC0XC0S_TCLK0	include/at91sam7s512.h	/^#define 	AT91C_TCB_TC0XC0S_TCLK0 /;"	d
AT91C_TCB_TC0XC0S_TIOA1	include/at91sam7s512.h	/^#define 	AT91C_TCB_TC0XC0S_TIOA1 /;"	d
AT91C_TCB_TC0XC0S_TIOA2	include/at91sam7s512.h	/^#define 	AT91C_TCB_TC0XC0S_TIOA2 /;"	d
AT91C_TCB_TC1XC1S	include/at91sam7s512.h	/^#define AT91C_TCB_TC1XC1S /;"	d
AT91C_TCB_TC1XC1S_NONE	include/at91sam7s512.h	/^#define 	AT91C_TCB_TC1XC1S_NONE /;"	d
AT91C_TCB_TC1XC1S_TCLK1	include/at91sam7s512.h	/^#define 	AT91C_TCB_TC1XC1S_TCLK1 /;"	d
AT91C_TCB_TC1XC1S_TIOA0	include/at91sam7s512.h	/^#define 	AT91C_TCB_TC1XC1S_TIOA0 /;"	d
AT91C_TCB_TC1XC1S_TIOA2	include/at91sam7s512.h	/^#define 	AT91C_TCB_TC1XC1S_TIOA2 /;"	d
AT91C_TCB_TC2XC2S	include/at91sam7s512.h	/^#define AT91C_TCB_TC2XC2S /;"	d
AT91C_TCB_TC2XC2S_NONE	include/at91sam7s512.h	/^#define 	AT91C_TCB_TC2XC2S_NONE /;"	d
AT91C_TCB_TC2XC2S_TCLK2	include/at91sam7s512.h	/^#define 	AT91C_TCB_TC2XC2S_TCLK2 /;"	d
AT91C_TCB_TC2XC2S_TIOA0	include/at91sam7s512.h	/^#define 	AT91C_TCB_TC2XC2S_TIOA0 /;"	d
AT91C_TCB_TC2XC2S_TIOA1	include/at91sam7s512.h	/^#define 	AT91C_TCB_TC2XC2S_TIOA1 /;"	d
AT91C_TC_ABETRG	include/at91sam7s512.h	/^#define AT91C_TC_ABETRG /;"	d
AT91C_TC_ACPA	include/at91sam7s512.h	/^#define AT91C_TC_ACPA /;"	d
AT91C_TC_ACPA_CLEAR	include/at91sam7s512.h	/^#define AT91C_TC_ACPA_CLEAR /;"	d
AT91C_TC_ACPA_SET	include/at91sam7s512.h	/^#define AT91C_TC_ACPA_SET /;"	d
AT91C_TC_ACPA_TOGGLE	include/at91sam7s512.h	/^#define AT91C_TC_ACPA_TOGGLE /;"	d
AT91C_TC_ACPC	include/at91sam7s512.h	/^#define AT91C_TC_ACPC /;"	d
AT91C_TC_ACPC_CLEAR	include/at91sam7s512.h	/^#define AT91C_TC_ACPC_CLEAR /;"	d
AT91C_TC_ACPC_NONE	include/at91sam7s512.h	/^#define AT91C_TC_ACPC_NONE /;"	d
AT91C_TC_ACPC_SET	include/at91sam7s512.h	/^#define AT91C_TC_ACPC_SET /;"	d
AT91C_TC_ACPC_TOGGLE	include/at91sam7s512.h	/^#define AT91C_TC_ACPC_TOGGLE /;"	d
AT91C_TC_AEEVT	include/at91sam7s512.h	/^#define AT91C_TC_AEEVT /;"	d
AT91C_TC_AEEVT_CLEAR	include/at91sam7s512.h	/^#define AT91C_TC_AEEVT_CLEAR /;"	d
AT91C_TC_AEEVT_NONE	include/at91sam7s512.h	/^#define AT91C_TC_AEEVT_NONE /;"	d
AT91C_TC_AEEVT_SET	include/at91sam7s512.h	/^#define AT91C_TC_AEEVT_SET /;"	d
AT91C_TC_AEEVT_TOGGLE	include/at91sam7s512.h	/^#define AT91C_TC_AEEVT_TOGGLE /;"	d
AT91C_TC_ASWTRG	include/at91sam7s512.h	/^#define AT91C_TC_ASWTRG /;"	d
AT91C_TC_ASWTRG_CLEAR	include/at91sam7s512.h	/^#define AT91C_TC_ASWTRG_CLEAR /;"	d
AT91C_TC_ASWTRG_NONE	include/at91sam7s512.h	/^#define AT91C_TC_ASWTRG_NONE /;"	d
AT91C_TC_ASWTRG_SET	include/at91sam7s512.h	/^#define AT91C_TC_ASWTRG_SET /;"	d
AT91C_TC_ASWTRG_TOGGLE	include/at91sam7s512.h	/^#define AT91C_TC_ASWTRG_TOGGLE /;"	d
AT91C_TC_BCPB	include/at91sam7s512.h	/^#define AT91C_TC_BCPB /;"	d
AT91C_TC_BCPB_CLEAR	include/at91sam7s512.h	/^#define AT91C_TC_BCPB_CLEAR /;"	d
AT91C_TC_BCPB_NONE	include/at91sam7s512.h	/^#define AT91C_TC_BCPB_NONE /;"	d
AT91C_TC_BCPB_SET	include/at91sam7s512.h	/^#define AT91C_TC_BCPB_SET /;"	d
AT91C_TC_BCPB_TOGGLE	include/at91sam7s512.h	/^#define AT91C_TC_BCPB_TOGGLE /;"	d
AT91C_TC_BCPC	include/at91sam7s512.h	/^#define AT91C_TC_BCPC /;"	d
AT91C_TC_BCPC_CLEAR	include/at91sam7s512.h	/^#define AT91C_TC_BCPC_CLEAR /;"	d
AT91C_TC_BCPC_NONE	include/at91sam7s512.h	/^#define AT91C_TC_BCPC_NONE /;"	d
AT91C_TC_BCPC_SET	include/at91sam7s512.h	/^#define AT91C_TC_BCPC_SET /;"	d
AT91C_TC_BCPC_TOGGLE	include/at91sam7s512.h	/^#define AT91C_TC_BCPC_TOGGLE /;"	d
AT91C_TC_BEEVT	include/at91sam7s512.h	/^#define AT91C_TC_BEEVT /;"	d
AT91C_TC_BEEVT_CLEAR	include/at91sam7s512.h	/^#define AT91C_TC_BEEVT_CLEAR /;"	d
AT91C_TC_BEEVT_NONE	include/at91sam7s512.h	/^#define AT91C_TC_BEEVT_NONE /;"	d
AT91C_TC_BEEVT_SET	include/at91sam7s512.h	/^#define AT91C_TC_BEEVT_SET /;"	d
AT91C_TC_BEEVT_TOGGLE	include/at91sam7s512.h	/^#define AT91C_TC_BEEVT_TOGGLE /;"	d
AT91C_TC_BSWTRG	include/at91sam7s512.h	/^#define AT91C_TC_BSWTRG /;"	d
AT91C_TC_BSWTRG_CLEAR	include/at91sam7s512.h	/^#define AT91C_TC_BSWTRG_CLEAR /;"	d
AT91C_TC_BSWTRG_NONE	include/at91sam7s512.h	/^#define AT91C_TC_BSWTRG_NONE /;"	d
AT91C_TC_BSWTRG_SET	include/at91sam7s512.h	/^#define AT91C_TC_BSWTRG_SET /;"	d
AT91C_TC_BSWTRG_TOGGLE	include/at91sam7s512.h	/^#define AT91C_TC_BSWTRG_TOGGLE /;"	d
AT91C_TC_BURST	include/at91sam7s512.h	/^#define AT91C_TC_BURST /;"	d
AT91C_TC_BURST_NONE	include/at91sam7s512.h	/^#define AT91C_TC_BURST_NONE /;"	d
AT91C_TC_BURST_XC0	include/at91sam7s512.h	/^#define AT91C_TC_BURST_XC0 /;"	d
AT91C_TC_BURST_XC1	include/at91sam7s512.h	/^#define AT91C_TC_BURST_XC1 /;"	d
AT91C_TC_BURST_XC2	include/at91sam7s512.h	/^#define AT91C_TC_BURST_XC2 /;"	d
AT91C_TC_CLKDIS	include/at91sam7s512.h	/^#define AT91C_TC_CLKDIS /;"	d
AT91C_TC_CLKEN	include/at91sam7s512.h	/^#define AT91C_TC_CLKEN /;"	d
AT91C_TC_CLKI	include/at91sam7s512.h	/^#define AT91C_TC_CLKI /;"	d
AT91C_TC_CLKS	include/at91sam7s512.h	/^#define AT91C_TC_CLKS /;"	d
AT91C_TC_CLKSTA	include/at91sam7s512.h	/^#define AT91C_TC_CLKSTA /;"	d
AT91C_TC_CLKS_TIMER_DIV1_CLOCK	include/at91sam7s512.h	/^#define AT91C_TC_CLKS_TIMER_DIV1_CLOCK /;"	d
AT91C_TC_CLKS_TIMER_DIV2_CLOCK	include/at91sam7s512.h	/^#define AT91C_TC_CLKS_TIMER_DIV2_CLOCK /;"	d
AT91C_TC_CLKS_TIMER_DIV3_CLOCK	include/at91sam7s512.h	/^#define AT91C_TC_CLKS_TIMER_DIV3_CLOCK /;"	d
AT91C_TC_CLKS_TIMER_DIV4_CLOCK	include/at91sam7s512.h	/^#define AT91C_TC_CLKS_TIMER_DIV4_CLOCK /;"	d
AT91C_TC_CLKS_TIMER_DIV5_CLOCK	include/at91sam7s512.h	/^#define AT91C_TC_CLKS_TIMER_DIV5_CLOCK /;"	d
AT91C_TC_CLKS_XC0	include/at91sam7s512.h	/^#define AT91C_TC_CLKS_XC0 /;"	d
AT91C_TC_CLKS_XC1	include/at91sam7s512.h	/^#define AT91C_TC_CLKS_XC1 /;"	d
AT91C_TC_CLKS_XC2	include/at91sam7s512.h	/^#define AT91C_TC_CLKS_XC2 /;"	d
AT91C_TC_COVFS	include/at91sam7s512.h	/^#define AT91C_TC_COVFS /;"	d
AT91C_TC_CPAS	include/at91sam7s512.h	/^#define AT91C_TC_CPAS /;"	d
AT91C_TC_CPBS	include/at91sam7s512.h	/^#define AT91C_TC_CPBS /;"	d
AT91C_TC_CPCDIS	include/at91sam7s512.h	/^#define AT91C_TC_CPCDIS /;"	d
AT91C_TC_CPCS	include/at91sam7s512.h	/^#define AT91C_TC_CPCS /;"	d
AT91C_TC_CPCSTOP	include/at91sam7s512.h	/^#define AT91C_TC_CPCSTOP /;"	d
AT91C_TC_CPCTRG	include/at91sam7s512.h	/^#define AT91C_TC_CPCTRG /;"	d
AT91C_TC_EEVT	include/at91sam7s512.h	/^#define AT91C_TC_EEVT /;"	d
AT91C_TC_EEVTEDG	include/at91sam7s512.h	/^#define AT91C_TC_EEVTEDG /;"	d
AT91C_TC_EEVTEDG_BOTH	include/at91sam7s512.h	/^#define AT91C_TC_EEVTEDG_BOTH /;"	d
AT91C_TC_EEVTEDG_FALLING	include/at91sam7s512.h	/^#define AT91C_TC_EEVTEDG_FALLING /;"	d
AT91C_TC_EEVTEDG_NONE	include/at91sam7s512.h	/^#define AT91C_TC_EEVTEDG_NONE /;"	d
AT91C_TC_EEVTEDG_RISING	include/at91sam7s512.h	/^#define AT91C_TC_EEVTEDG_RISING /;"	d
AT91C_TC_EEVT_TIOB	include/at91sam7s512.h	/^#define AT91C_TC_EEVT_TIOB /;"	d
AT91C_TC_EEVT_XC0	include/at91sam7s512.h	/^#define AT91C_TC_EEVT_XC0 /;"	d
AT91C_TC_EEVT_XC1	include/at91sam7s512.h	/^#define AT91C_TC_EEVT_XC1 /;"	d
AT91C_TC_EEVT_XC2	include/at91sam7s512.h	/^#define AT91C_TC_EEVT_XC2 /;"	d
AT91C_TC_ENETRG	include/at91sam7s512.h	/^#define AT91C_TC_ENETRG /;"	d
AT91C_TC_ETRGEDG	include/at91sam7s512.h	/^#define AT91C_TC_ETRGEDG /;"	d
AT91C_TC_ETRGEDG_BOTH	include/at91sam7s512.h	/^#define AT91C_TC_ETRGEDG_BOTH /;"	d
AT91C_TC_ETRGEDG_FALLING	include/at91sam7s512.h	/^#define AT91C_TC_ETRGEDG_FALLING /;"	d
AT91C_TC_ETRGEDG_NONE	include/at91sam7s512.h	/^#define AT91C_TC_ETRGEDG_NONE /;"	d
AT91C_TC_ETRGEDG_RISING	include/at91sam7s512.h	/^#define AT91C_TC_ETRGEDG_RISING /;"	d
AT91C_TC_ETRGS	include/at91sam7s512.h	/^#define AT91C_TC_ETRGS /;"	d
AT91C_TC_LDBDIS	include/at91sam7s512.h	/^#define AT91C_TC_LDBDIS /;"	d
AT91C_TC_LDBSTOP	include/at91sam7s512.h	/^#define AT91C_TC_LDBSTOP /;"	d
AT91C_TC_LDRA	include/at91sam7s512.h	/^#define AT91C_TC_LDRA /;"	d
AT91C_TC_LDRAS	include/at91sam7s512.h	/^#define AT91C_TC_LDRAS /;"	d
AT91C_TC_LDRA_BOTH	include/at91sam7s512.h	/^#define AT91C_TC_LDRA_BOTH /;"	d
AT91C_TC_LDRA_FALLING	include/at91sam7s512.h	/^#define AT91C_TC_LDRA_FALLING /;"	d
AT91C_TC_LDRA_RISING	include/at91sam7s512.h	/^#define AT91C_TC_LDRA_RISING /;"	d
AT91C_TC_LDRB	include/at91sam7s512.h	/^#define AT91C_TC_LDRB /;"	d
AT91C_TC_LDRBS	include/at91sam7s512.h	/^#define AT91C_TC_LDRBS /;"	d
AT91C_TC_LDRB_BOTH	include/at91sam7s512.h	/^#define AT91C_TC_LDRB_BOTH /;"	d
AT91C_TC_LDRB_FALLING	include/at91sam7s512.h	/^#define AT91C_TC_LDRB_FALLING /;"	d
AT91C_TC_LDRB_NONE	include/at91sam7s512.h	/^#define AT91C_TC_LDRB_NONE /;"	d
AT91C_TC_LDRB_RISING	include/at91sam7s512.h	/^#define AT91C_TC_LDRB_RISING /;"	d
AT91C_TC_LOVRS	include/at91sam7s512.h	/^#define AT91C_TC_LOVRS /;"	d
AT91C_TC_MTIOA	include/at91sam7s512.h	/^#define AT91C_TC_MTIOA /;"	d
AT91C_TC_MTIOB	include/at91sam7s512.h	/^#define AT91C_TC_MTIOB /;"	d
AT91C_TC_SWTRG	include/at91sam7s512.h	/^#define AT91C_TC_SWTRG /;"	d
AT91C_TC_WAVE	include/at91sam7s512.h	/^#define AT91C_TC_WAVE /;"	d
AT91C_TC_WAVESEL	include/at91sam7s512.h	/^#define AT91C_TC_WAVESEL /;"	d
AT91C_TC_WAVESEL_UP	include/at91sam7s512.h	/^#define AT91C_TC_WAVESEL_UP /;"	d
AT91C_TC_WAVESEL_UPDOWN	include/at91sam7s512.h	/^#define AT91C_TC_WAVESEL_UPDOWN /;"	d
AT91C_TC_WAVESEL_UPDOWN_AUTO	include/at91sam7s512.h	/^#define AT91C_TC_WAVESEL_UPDOWN_AUTO /;"	d
AT91C_TC_WAVESEL_UP_AUTO	include/at91sam7s512.h	/^#define AT91C_TC_WAVESEL_UP_AUTO /;"	d
AT91C_TWI_CHDIV	include/at91sam7s512.h	/^#define AT91C_TWI_CHDIV /;"	d
AT91C_TWI_CKDIV	include/at91sam7s512.h	/^#define AT91C_TWI_CKDIV /;"	d
AT91C_TWI_CLDIV	include/at91sam7s512.h	/^#define AT91C_TWI_CLDIV /;"	d
AT91C_TWI_CR	include/at91sam7s512.h	/^#define AT91C_TWI_CR /;"	d
AT91C_TWI_CWGR	include/at91sam7s512.h	/^#define AT91C_TWI_CWGR /;"	d
AT91C_TWI_DADR	include/at91sam7s512.h	/^#define AT91C_TWI_DADR /;"	d
AT91C_TWI_ENDRX	include/at91sam7s512.h	/^#define AT91C_TWI_ENDRX /;"	d
AT91C_TWI_ENDTX	include/at91sam7s512.h	/^#define AT91C_TWI_ENDTX /;"	d
AT91C_TWI_IADR	include/at91sam7s512.h	/^#define AT91C_TWI_IADR /;"	d
AT91C_TWI_IADRSZ	include/at91sam7s512.h	/^#define AT91C_TWI_IADRSZ /;"	d
AT91C_TWI_IADRSZ_1_BYTE	include/at91sam7s512.h	/^#define 	AT91C_TWI_IADRSZ_1_BYTE /;"	d
AT91C_TWI_IADRSZ_2_BYTE	include/at91sam7s512.h	/^#define 	AT91C_TWI_IADRSZ_2_BYTE /;"	d
AT91C_TWI_IADRSZ_3_BYTE	include/at91sam7s512.h	/^#define 	AT91C_TWI_IADRSZ_3_BYTE /;"	d
AT91C_TWI_IADRSZ_NO	include/at91sam7s512.h	/^#define 	AT91C_TWI_IADRSZ_NO /;"	d
AT91C_TWI_IDR	include/at91sam7s512.h	/^#define AT91C_TWI_IDR /;"	d
AT91C_TWI_IER	include/at91sam7s512.h	/^#define AT91C_TWI_IER /;"	d
AT91C_TWI_IMR	include/at91sam7s512.h	/^#define AT91C_TWI_IMR /;"	d
AT91C_TWI_MMR	include/at91sam7s512.h	/^#define AT91C_TWI_MMR /;"	d
AT91C_TWI_MREAD	include/at91sam7s512.h	/^#define AT91C_TWI_MREAD /;"	d
AT91C_TWI_MSDIS	include/at91sam7s512.h	/^#define AT91C_TWI_MSDIS /;"	d
AT91C_TWI_MSEN	include/at91sam7s512.h	/^#define AT91C_TWI_MSEN /;"	d
AT91C_TWI_NACK	include/at91sam7s512.h	/^#define AT91C_TWI_NACK /;"	d
AT91C_TWI_OVRE	include/at91sam7s512.h	/^#define AT91C_TWI_OVRE /;"	d
AT91C_TWI_RHR	include/at91sam7s512.h	/^#define AT91C_TWI_RHR /;"	d
AT91C_TWI_RXBUFF	include/at91sam7s512.h	/^#define AT91C_TWI_RXBUFF /;"	d
AT91C_TWI_RXRDY	include/at91sam7s512.h	/^#define AT91C_TWI_RXRDY /;"	d
AT91C_TWI_SR	include/at91sam7s512.h	/^#define AT91C_TWI_SR /;"	d
AT91C_TWI_START	include/at91sam7s512.h	/^#define AT91C_TWI_START /;"	d
AT91C_TWI_STOP	include/at91sam7s512.h	/^#define AT91C_TWI_STOP /;"	d
AT91C_TWI_SWRST	include/at91sam7s512.h	/^#define AT91C_TWI_SWRST /;"	d
AT91C_TWI_THR	include/at91sam7s512.h	/^#define AT91C_TWI_THR /;"	d
AT91C_TWI_TXBUFE	include/at91sam7s512.h	/^#define AT91C_TWI_TXBUFE /;"	d
AT91C_TWI_TXCOMP	include/at91sam7s512.h	/^#define AT91C_TWI_TXCOMP /;"	d
AT91C_TWI_TXRDY	include/at91sam7s512.h	/^#define AT91C_TWI_TXRDY /;"	d
AT91C_TWI_UNRE	include/at91sam7s512.h	/^#define AT91C_TWI_UNRE /;"	d
AT91C_UDP_CONFG	include/at91sam7s512.h	/^#define AT91C_UDP_CONFG /;"	d
AT91C_UDP_CSR	include/at91sam7s512.h	/^#define AT91C_UDP_CSR /;"	d
AT91C_UDP_DIR	include/at91sam7s512.h	/^#define AT91C_UDP_DIR /;"	d
AT91C_UDP_DTGLE	include/at91sam7s512.h	/^#define AT91C_UDP_DTGLE /;"	d
AT91C_UDP_ENDBUSRES	include/at91sam7s512.h	/^#define AT91C_UDP_ENDBUSRES /;"	d
AT91C_UDP_EP0	include/at91sam7s512.h	/^#define AT91C_UDP_EP0 /;"	d
AT91C_UDP_EP1	include/at91sam7s512.h	/^#define AT91C_UDP_EP1 /;"	d
AT91C_UDP_EP2	include/at91sam7s512.h	/^#define AT91C_UDP_EP2 /;"	d
AT91C_UDP_EP3	include/at91sam7s512.h	/^#define AT91C_UDP_EP3 /;"	d
AT91C_UDP_EPEDS	include/at91sam7s512.h	/^#define AT91C_UDP_EPEDS /;"	d
AT91C_UDP_EPINT0	include/at91sam7s512.h	/^#define AT91C_UDP_EPINT0 /;"	d
AT91C_UDP_EPINT1	include/at91sam7s512.h	/^#define AT91C_UDP_EPINT1 /;"	d
AT91C_UDP_EPINT2	include/at91sam7s512.h	/^#define AT91C_UDP_EPINT2 /;"	d
AT91C_UDP_EPINT3	include/at91sam7s512.h	/^#define AT91C_UDP_EPINT3 /;"	d
AT91C_UDP_EPTYPE	include/at91sam7s512.h	/^#define AT91C_UDP_EPTYPE /;"	d
AT91C_UDP_EPTYPE_BULK_IN	include/at91sam7s512.h	/^#define AT91C_UDP_EPTYPE_BULK_IN /;"	d
AT91C_UDP_EPTYPE_BULK_OUT	include/at91sam7s512.h	/^#define AT91C_UDP_EPTYPE_BULK_OUT /;"	d
AT91C_UDP_EPTYPE_CTRL	include/at91sam7s512.h	/^#define AT91C_UDP_EPTYPE_CTRL /;"	d
AT91C_UDP_EPTYPE_INT_IN	include/at91sam7s512.h	/^#define AT91C_UDP_EPTYPE_INT_IN /;"	d
AT91C_UDP_EPTYPE_INT_OUT	include/at91sam7s512.h	/^#define AT91C_UDP_EPTYPE_INT_OUT /;"	d
AT91C_UDP_EPTYPE_ISO_IN	include/at91sam7s512.h	/^#define AT91C_UDP_EPTYPE_ISO_IN /;"	d
AT91C_UDP_EPTYPE_ISO_OUT	include/at91sam7s512.h	/^#define AT91C_UDP_EPTYPE_ISO_OUT /;"	d
AT91C_UDP_ESR	include/at91sam7s512.h	/^#define AT91C_UDP_ESR /;"	d
AT91C_UDP_EXTRSM	include/at91sam7s512.h	/^#define AT91C_UDP_EXTRSM /;"	d
AT91C_UDP_FADD	include/at91sam7s512.h	/^#define AT91C_UDP_FADD /;"	d
AT91C_UDP_FADDEN	include/at91sam7s512.h	/^#define AT91C_UDP_FADDEN /;"	d
AT91C_UDP_FADDR	include/at91sam7s512.h	/^#define AT91C_UDP_FADDR /;"	d
AT91C_UDP_FDR	include/at91sam7s512.h	/^#define AT91C_UDP_FDR /;"	d
AT91C_UDP_FEN	include/at91sam7s512.h	/^#define AT91C_UDP_FEN /;"	d
AT91C_UDP_FORCESTALL	include/at91sam7s512.h	/^#define AT91C_UDP_FORCESTALL /;"	d
AT91C_UDP_FRM_ERR	include/at91sam7s512.h	/^#define AT91C_UDP_FRM_ERR /;"	d
AT91C_UDP_FRM_NUM	include/at91sam7s512.h	/^#define AT91C_UDP_FRM_NUM /;"	d
AT91C_UDP_FRM_OK	include/at91sam7s512.h	/^#define AT91C_UDP_FRM_OK /;"	d
AT91C_UDP_GLBSTATE	include/at91sam7s512.h	/^#define AT91C_UDP_GLBSTATE /;"	d
AT91C_UDP_ICR	include/at91sam7s512.h	/^#define AT91C_UDP_ICR /;"	d
AT91C_UDP_IDR	include/at91sam7s512.h	/^#define AT91C_UDP_IDR /;"	d
AT91C_UDP_IER	include/at91sam7s512.h	/^#define AT91C_UDP_IER /;"	d
AT91C_UDP_IMR	include/at91sam7s512.h	/^#define AT91C_UDP_IMR /;"	d
AT91C_UDP_ISOERROR	include/at91sam7s512.h	/^#define AT91C_UDP_ISOERROR /;"	d
AT91C_UDP_ISR	include/at91sam7s512.h	/^#define AT91C_UDP_ISR /;"	d
AT91C_UDP_NUM	include/at91sam7s512.h	/^#define AT91C_UDP_NUM /;"	d
AT91C_UDP_RMWUPE	include/at91sam7s512.h	/^#define AT91C_UDP_RMWUPE /;"	d
AT91C_UDP_RSMINPR	include/at91sam7s512.h	/^#define AT91C_UDP_RSMINPR /;"	d
AT91C_UDP_RSTEP	include/at91sam7s512.h	/^#define AT91C_UDP_RSTEP /;"	d
AT91C_UDP_RXBYTECNT	include/at91sam7s512.h	/^#define AT91C_UDP_RXBYTECNT /;"	d
AT91C_UDP_RXRSM	include/at91sam7s512.h	/^#define AT91C_UDP_RXRSM /;"	d
AT91C_UDP_RXSETUP	include/at91sam7s512.h	/^#define AT91C_UDP_RXSETUP /;"	d
AT91C_UDP_RXSUSP	include/at91sam7s512.h	/^#define AT91C_UDP_RXSUSP /;"	d
AT91C_UDP_RX_DATA_BK0	include/at91sam7s512.h	/^#define AT91C_UDP_RX_DATA_BK0 /;"	d
AT91C_UDP_RX_DATA_BK1	include/at91sam7s512.h	/^#define AT91C_UDP_RX_DATA_BK1 /;"	d
AT91C_UDP_SOFINT	include/at91sam7s512.h	/^#define AT91C_UDP_SOFINT /;"	d
AT91C_UDP_STALLSENT	include/at91sam7s512.h	/^#define AT91C_UDP_STALLSENT /;"	d
AT91C_UDP_TXCOMP	include/at91sam7s512.h	/^#define AT91C_UDP_TXCOMP /;"	d
AT91C_UDP_TXPKTRDY	include/at91sam7s512.h	/^#define AT91C_UDP_TXPKTRDY /;"	d
AT91C_UDP_TXVC	include/at91sam7s512.h	/^#define AT91C_UDP_TXVC /;"	d
AT91C_UDP_TXVDIS	include/at91sam7s512.h	/^#define AT91C_UDP_TXVDIS /;"	d
AT91C_UDP_WAKEUP	include/at91sam7s512.h	/^#define AT91C_UDP_WAKEUP /;"	d
AT91C_US0_BRGR	include/at91sam7s512.h	/^#define AT91C_US0_BRGR /;"	d
AT91C_US0_CR	include/at91sam7s512.h	/^#define AT91C_US0_CR /;"	d
AT91C_US0_CSR	include/at91sam7s512.h	/^#define AT91C_US0_CSR /;"	d
AT91C_US0_FIDI	include/at91sam7s512.h	/^#define AT91C_US0_FIDI /;"	d
AT91C_US0_IDR	include/at91sam7s512.h	/^#define AT91C_US0_IDR /;"	d
AT91C_US0_IER	include/at91sam7s512.h	/^#define AT91C_US0_IER /;"	d
AT91C_US0_IF	include/at91sam7s512.h	/^#define AT91C_US0_IF /;"	d
AT91C_US0_IMR	include/at91sam7s512.h	/^#define AT91C_US0_IMR /;"	d
AT91C_US0_MR	include/at91sam7s512.h	/^#define AT91C_US0_MR /;"	d
AT91C_US0_NER	include/at91sam7s512.h	/^#define AT91C_US0_NER /;"	d
AT91C_US0_PTCR	include/at91sam7s512.h	/^#define AT91C_US0_PTCR /;"	d
AT91C_US0_PTSR	include/at91sam7s512.h	/^#define AT91C_US0_PTSR /;"	d
AT91C_US0_RCR	include/at91sam7s512.h	/^#define AT91C_US0_RCR /;"	d
AT91C_US0_RHR	include/at91sam7s512.h	/^#define AT91C_US0_RHR /;"	d
AT91C_US0_RNCR	include/at91sam7s512.h	/^#define AT91C_US0_RNCR /;"	d
AT91C_US0_RNPR	include/at91sam7s512.h	/^#define AT91C_US0_RNPR /;"	d
AT91C_US0_RPR	include/at91sam7s512.h	/^#define AT91C_US0_RPR /;"	d
AT91C_US0_RTOR	include/at91sam7s512.h	/^#define AT91C_US0_RTOR /;"	d
AT91C_US0_TCR	include/at91sam7s512.h	/^#define AT91C_US0_TCR /;"	d
AT91C_US0_THR	include/at91sam7s512.h	/^#define AT91C_US0_THR /;"	d
AT91C_US0_TNCR	include/at91sam7s512.h	/^#define AT91C_US0_TNCR /;"	d
AT91C_US0_TNPR	include/at91sam7s512.h	/^#define AT91C_US0_TNPR /;"	d
AT91C_US0_TPR	include/at91sam7s512.h	/^#define AT91C_US0_TPR /;"	d
AT91C_US0_TTGR	include/at91sam7s512.h	/^#define AT91C_US0_TTGR /;"	d
AT91C_US1_BRGR	include/at91sam7s512.h	/^#define AT91C_US1_BRGR /;"	d
AT91C_US1_CR	include/at91sam7s512.h	/^#define AT91C_US1_CR /;"	d
AT91C_US1_CSR	include/at91sam7s512.h	/^#define AT91C_US1_CSR /;"	d
AT91C_US1_FIDI	include/at91sam7s512.h	/^#define AT91C_US1_FIDI /;"	d
AT91C_US1_IDR	include/at91sam7s512.h	/^#define AT91C_US1_IDR /;"	d
AT91C_US1_IER	include/at91sam7s512.h	/^#define AT91C_US1_IER /;"	d
AT91C_US1_IF	include/at91sam7s512.h	/^#define AT91C_US1_IF /;"	d
AT91C_US1_IMR	include/at91sam7s512.h	/^#define AT91C_US1_IMR /;"	d
AT91C_US1_MR	include/at91sam7s512.h	/^#define AT91C_US1_MR /;"	d
AT91C_US1_NER	include/at91sam7s512.h	/^#define AT91C_US1_NER /;"	d
AT91C_US1_PTCR	include/at91sam7s512.h	/^#define AT91C_US1_PTCR /;"	d
AT91C_US1_PTSR	include/at91sam7s512.h	/^#define AT91C_US1_PTSR /;"	d
AT91C_US1_RCR	include/at91sam7s512.h	/^#define AT91C_US1_RCR /;"	d
AT91C_US1_RHR	include/at91sam7s512.h	/^#define AT91C_US1_RHR /;"	d
AT91C_US1_RNCR	include/at91sam7s512.h	/^#define AT91C_US1_RNCR /;"	d
AT91C_US1_RNPR	include/at91sam7s512.h	/^#define AT91C_US1_RNPR /;"	d
AT91C_US1_RPR	include/at91sam7s512.h	/^#define AT91C_US1_RPR /;"	d
AT91C_US1_RTOR	include/at91sam7s512.h	/^#define AT91C_US1_RTOR /;"	d
AT91C_US1_TCR	include/at91sam7s512.h	/^#define AT91C_US1_TCR /;"	d
AT91C_US1_THR	include/at91sam7s512.h	/^#define AT91C_US1_THR /;"	d
AT91C_US1_TNCR	include/at91sam7s512.h	/^#define AT91C_US1_TNCR /;"	d
AT91C_US1_TNPR	include/at91sam7s512.h	/^#define AT91C_US1_TNPR /;"	d
AT91C_US1_TPR	include/at91sam7s512.h	/^#define AT91C_US1_TPR /;"	d
AT91C_US1_TTGR	include/at91sam7s512.h	/^#define AT91C_US1_TTGR /;"	d
AT91C_US_CHMODE	include/at91sam7s512.h	/^#define AT91C_US_CHMODE /;"	d
AT91C_US_CHMODE_AUTO	include/at91sam7s512.h	/^#define 	AT91C_US_CHMODE_AUTO /;"	d
AT91C_US_CHMODE_LOCAL	include/at91sam7s512.h	/^#define 	AT91C_US_CHMODE_LOCAL /;"	d
AT91C_US_CHMODE_NORMAL	include/at91sam7s512.h	/^#define 	AT91C_US_CHMODE_NORMAL /;"	d
AT91C_US_CHMODE_REMOTE	include/at91sam7s512.h	/^#define 	AT91C_US_CHMODE_REMOTE /;"	d
AT91C_US_CHRL	include/at91sam7s512.h	/^#define AT91C_US_CHRL /;"	d
AT91C_US_CHRL_5_BITS	include/at91sam7s512.h	/^#define 	AT91C_US_CHRL_5_BITS /;"	d
AT91C_US_CHRL_6_BITS	include/at91sam7s512.h	/^#define 	AT91C_US_CHRL_6_BITS /;"	d
AT91C_US_CHRL_7_BITS	include/at91sam7s512.h	/^#define 	AT91C_US_CHRL_7_BITS /;"	d
AT91C_US_CHRL_8_BITS	include/at91sam7s512.h	/^#define 	AT91C_US_CHRL_8_BITS /;"	d
AT91C_US_CKLO	include/at91sam7s512.h	/^#define AT91C_US_CKLO /;"	d
AT91C_US_CLKS	include/at91sam7s512.h	/^#define AT91C_US_CLKS /;"	d
AT91C_US_CLKS_CLOCK	include/at91sam7s512.h	/^#define 	AT91C_US_CLKS_CLOCK /;"	d
AT91C_US_CLKS_EXT	include/at91sam7s512.h	/^#define 	AT91C_US_CLKS_EXT /;"	d
AT91C_US_CLKS_FDIV1	include/at91sam7s512.h	/^#define 	AT91C_US_CLKS_FDIV1 /;"	d
AT91C_US_CLKS_SLOW	include/at91sam7s512.h	/^#define 	AT91C_US_CLKS_SLOW /;"	d
AT91C_US_COMM_RX	include/at91sam7s512.h	/^#define AT91C_US_COMM_RX /;"	d
AT91C_US_COMM_TX	include/at91sam7s512.h	/^#define AT91C_US_COMM_TX /;"	d
AT91C_US_CTS	include/at91sam7s512.h	/^#define AT91C_US_CTS /;"	d
AT91C_US_CTSIC	include/at91sam7s512.h	/^#define AT91C_US_CTSIC /;"	d
AT91C_US_DCD	include/at91sam7s512.h	/^#define AT91C_US_DCD /;"	d
AT91C_US_DCDIC	include/at91sam7s512.h	/^#define AT91C_US_DCDIC /;"	d
AT91C_US_DSNACK	include/at91sam7s512.h	/^#define AT91C_US_DSNACK /;"	d
AT91C_US_DSR	include/at91sam7s512.h	/^#define AT91C_US_DSR /;"	d
AT91C_US_DSRIC	include/at91sam7s512.h	/^#define AT91C_US_DSRIC /;"	d
AT91C_US_DTRDIS	include/at91sam7s512.h	/^#define AT91C_US_DTRDIS /;"	d
AT91C_US_DTREN	include/at91sam7s512.h	/^#define AT91C_US_DTREN /;"	d
AT91C_US_ENDRX	include/at91sam7s512.h	/^#define AT91C_US_ENDRX /;"	d
AT91C_US_ENDTX	include/at91sam7s512.h	/^#define AT91C_US_ENDTX /;"	d
AT91C_US_FILTER	include/at91sam7s512.h	/^#define AT91C_US_FILTER /;"	d
AT91C_US_FORCE_NTRST	include/at91sam7s512.h	/^#define AT91C_US_FORCE_NTRST /;"	d
AT91C_US_FRAME	include/at91sam7s512.h	/^#define AT91C_US_FRAME /;"	d
AT91C_US_INACK	include/at91sam7s512.h	/^#define AT91C_US_INACK /;"	d
AT91C_US_ITERATION	include/at91sam7s512.h	/^#define AT91C_US_ITERATION /;"	d
AT91C_US_MAX_ITER	include/at91sam7s512.h	/^#define AT91C_US_MAX_ITER /;"	d
AT91C_US_MODE9	include/at91sam7s512.h	/^#define AT91C_US_MODE9 /;"	d
AT91C_US_MSBF	include/at91sam7s512.h	/^#define AT91C_US_MSBF /;"	d
AT91C_US_NACK	include/at91sam7s512.h	/^#define AT91C_US_NACK /;"	d
AT91C_US_NBSTOP	include/at91sam7s512.h	/^#define AT91C_US_NBSTOP /;"	d
AT91C_US_NBSTOP_15_BIT	include/at91sam7s512.h	/^#define 	AT91C_US_NBSTOP_15_BIT /;"	d
AT91C_US_NBSTOP_1_BIT	include/at91sam7s512.h	/^#define 	AT91C_US_NBSTOP_1_BIT /;"	d
AT91C_US_NBSTOP_2_BIT	include/at91sam7s512.h	/^#define 	AT91C_US_NBSTOP_2_BIT /;"	d
AT91C_US_OVER	include/at91sam7s512.h	/^#define AT91C_US_OVER /;"	d
AT91C_US_OVRE	include/at91sam7s512.h	/^#define AT91C_US_OVRE /;"	d
AT91C_US_PAR	include/at91sam7s512.h	/^#define AT91C_US_PAR /;"	d
AT91C_US_PARE	include/at91sam7s512.h	/^#define AT91C_US_PARE /;"	d
AT91C_US_PAR_EVEN	include/at91sam7s512.h	/^#define 	AT91C_US_PAR_EVEN /;"	d
AT91C_US_PAR_MARK	include/at91sam7s512.h	/^#define 	AT91C_US_PAR_MARK /;"	d
AT91C_US_PAR_MULTI_DROP	include/at91sam7s512.h	/^#define 	AT91C_US_PAR_MULTI_DROP /;"	d
AT91C_US_PAR_NONE	include/at91sam7s512.h	/^#define 	AT91C_US_PAR_NONE /;"	d
AT91C_US_PAR_ODD	include/at91sam7s512.h	/^#define 	AT91C_US_PAR_ODD /;"	d
AT91C_US_PAR_SPACE	include/at91sam7s512.h	/^#define 	AT91C_US_PAR_SPACE /;"	d
AT91C_US_RETTO	include/at91sam7s512.h	/^#define AT91C_US_RETTO /;"	d
AT91C_US_RI	include/at91sam7s512.h	/^#define AT91C_US_RI /;"	d
AT91C_US_RIIC	include/at91sam7s512.h	/^#define AT91C_US_RIIC /;"	d
AT91C_US_RSTIT	include/at91sam7s512.h	/^#define AT91C_US_RSTIT /;"	d
AT91C_US_RSTNACK	include/at91sam7s512.h	/^#define AT91C_US_RSTNACK /;"	d
AT91C_US_RSTRX	include/at91sam7s512.h	/^#define AT91C_US_RSTRX /;"	d
AT91C_US_RSTSTA	include/at91sam7s512.h	/^#define AT91C_US_RSTSTA /;"	d
AT91C_US_RSTTX	include/at91sam7s512.h	/^#define AT91C_US_RSTTX /;"	d
AT91C_US_RTSDIS	include/at91sam7s512.h	/^#define AT91C_US_RTSDIS /;"	d
AT91C_US_RTSEN	include/at91sam7s512.h	/^#define AT91C_US_RTSEN /;"	d
AT91C_US_RXBRK	include/at91sam7s512.h	/^#define AT91C_US_RXBRK /;"	d
AT91C_US_RXBUFF	include/at91sam7s512.h	/^#define AT91C_US_RXBUFF /;"	d
AT91C_US_RXDIS	include/at91sam7s512.h	/^#define AT91C_US_RXDIS /;"	d
AT91C_US_RXEN	include/at91sam7s512.h	/^#define AT91C_US_RXEN /;"	d
AT91C_US_RXRDY	include/at91sam7s512.h	/^#define AT91C_US_RXRDY /;"	d
AT91C_US_SENDA	include/at91sam7s512.h	/^#define AT91C_US_SENDA /;"	d
AT91C_US_STPBRK	include/at91sam7s512.h	/^#define AT91C_US_STPBRK /;"	d
AT91C_US_STTBRK	include/at91sam7s512.h	/^#define AT91C_US_STTBRK /;"	d
AT91C_US_STTTO	include/at91sam7s512.h	/^#define AT91C_US_STTTO /;"	d
AT91C_US_SYNC	include/at91sam7s512.h	/^#define AT91C_US_SYNC /;"	d
AT91C_US_TIMEOUT	include/at91sam7s512.h	/^#define AT91C_US_TIMEOUT /;"	d
AT91C_US_TXBUFE	include/at91sam7s512.h	/^#define AT91C_US_TXBUFE /;"	d
AT91C_US_TXDIS	include/at91sam7s512.h	/^#define AT91C_US_TXDIS /;"	d
AT91C_US_TXEMPTY	include/at91sam7s512.h	/^#define AT91C_US_TXEMPTY /;"	d
AT91C_US_TXEN	include/at91sam7s512.h	/^#define AT91C_US_TXEN /;"	d
AT91C_US_TXRDY	include/at91sam7s512.h	/^#define AT91C_US_TXRDY /;"	d
AT91C_US_USMODE	include/at91sam7s512.h	/^#define AT91C_US_USMODE /;"	d
AT91C_US_USMODE_HWHSH	include/at91sam7s512.h	/^#define 	AT91C_US_USMODE_HWHSH /;"	d
AT91C_US_USMODE_IRDA	include/at91sam7s512.h	/^#define 	AT91C_US_USMODE_IRDA /;"	d
AT91C_US_USMODE_ISO7816_0	include/at91sam7s512.h	/^#define 	AT91C_US_USMODE_ISO7816_0 /;"	d
AT91C_US_USMODE_ISO7816_1	include/at91sam7s512.h	/^#define 	AT91C_US_USMODE_ISO7816_1 /;"	d
AT91C_US_USMODE_MODEM	include/at91sam7s512.h	/^#define 	AT91C_US_USMODE_MODEM /;"	d
AT91C_US_USMODE_NORMAL	include/at91sam7s512.h	/^#define 	AT91C_US_USMODE_NORMAL /;"	d
AT91C_US_USMODE_RS485	include/at91sam7s512.h	/^#define 	AT91C_US_USMODE_RS485 /;"	d
AT91C_US_USMODE_SWHSH	include/at91sam7s512.h	/^#define 	AT91C_US_USMODE_SWHSH /;"	d
AT91C_VREG_MR	include/at91sam7s512.h	/^#define AT91C_VREG_MR /;"	d
AT91C_VREG_PSTDBY	include/at91sam7s512.h	/^#define AT91C_VREG_PSTDBY /;"	d
AT91C_WDTC_KEY	include/at91sam7s512.h	/^#define AT91C_WDTC_KEY /;"	d
AT91C_WDTC_WDCR	include/at91sam7s512.h	/^#define AT91C_WDTC_WDCR /;"	d
AT91C_WDTC_WDD	include/at91sam7s512.h	/^#define AT91C_WDTC_WDD /;"	d
AT91C_WDTC_WDDBGHLT	include/at91sam7s512.h	/^#define AT91C_WDTC_WDDBGHLT /;"	d
AT91C_WDTC_WDDIS	include/at91sam7s512.h	/^#define AT91C_WDTC_WDDIS /;"	d
AT91C_WDTC_WDERR	include/at91sam7s512.h	/^#define AT91C_WDTC_WDERR /;"	d
AT91C_WDTC_WDFIEN	include/at91sam7s512.h	/^#define AT91C_WDTC_WDFIEN /;"	d
AT91C_WDTC_WDIDLEHLT	include/at91sam7s512.h	/^#define AT91C_WDTC_WDIDLEHLT /;"	d
AT91C_WDTC_WDMR	include/at91sam7s512.h	/^#define AT91C_WDTC_WDMR /;"	d
AT91C_WDTC_WDRPROC	include/at91sam7s512.h	/^#define AT91C_WDTC_WDRPROC /;"	d
AT91C_WDTC_WDRSTEN	include/at91sam7s512.h	/^#define AT91C_WDTC_WDRSTEN /;"	d
AT91C_WDTC_WDRSTT	include/at91sam7s512.h	/^#define AT91C_WDTC_WDRSTT /;"	d
AT91C_WDTC_WDSR	include/at91sam7s512.h	/^#define AT91C_WDTC_WDSR /;"	d
AT91C_WDTC_WDUNF	include/at91sam7s512.h	/^#define AT91C_WDTC_WDUNF /;"	d
AT91C_WDTC_WDV	include/at91sam7s512.h	/^#define AT91C_WDTC_WDV /;"	d
AT91F_CDC_Enumerate	common/usb_cdc.c	/^void AT91F_CDC_Enumerate() {$/;"	f
AT91F_USB_SendData	common/usb_cdc.c	/^static void AT91F_USB_SendData(AT91PS_UDP pUdp, const char *pData, uint32_t length) {$/;"	f	file:
AT91F_USB_SendStall	common/usb_cdc.c	/^void AT91F_USB_SendStall(AT91PS_UDP pUdp) {$/;"	f
AT91F_USB_SendZlp	common/usb_cdc.c	/^void AT91F_USB_SendZlp(AT91PS_UDP pUdp) {$/;"	f
AT91PS_ADC	include/at91sam7s512.h	/^} AT91S_ADC, *AT91PS_ADC;$/;"	t	typeref:struct:_AT91S_ADC
AT91PS_AIC	include/at91sam7s512.h	/^} AT91S_AIC, *AT91PS_AIC;$/;"	t	typeref:struct:_AT91S_AIC
AT91PS_CDC_LINE_CODING	common/usb_cdc.c	/^} AT91S_CDC_LINE_CODING, *AT91PS_CDC_LINE_CODING;$/;"	t	typeref:struct:__anon55	file:
AT91PS_CKGR	include/at91sam7s512.h	/^} AT91S_CKGR, *AT91PS_CKGR;$/;"	t	typeref:struct:_AT91S_CKGR
AT91PS_DBGU	include/at91sam7s512.h	/^} AT91S_DBGU, *AT91PS_DBGU;$/;"	t	typeref:struct:_AT91S_DBGU
AT91PS_EFC	include/at91sam7s512.h	/^} AT91S_EFC, *AT91PS_EFC;$/;"	t	typeref:struct:_AT91S_EFC
AT91PS_MC	include/at91sam7s512.h	/^} AT91S_MC, *AT91PS_MC;$/;"	t	typeref:struct:_AT91S_MC
AT91PS_PDC	include/at91sam7s512.h	/^} AT91S_PDC, *AT91PS_PDC;$/;"	t	typeref:struct:_AT91S_PDC
AT91PS_PIO	include/at91sam7s512.h	/^} AT91S_PIO, *AT91PS_PIO;$/;"	t	typeref:struct:_AT91S_PIO
AT91PS_PITC	include/at91sam7s512.h	/^} AT91S_PITC, *AT91PS_PITC;$/;"	t	typeref:struct:_AT91S_PITC
AT91PS_PMC	include/at91sam7s512.h	/^} AT91S_PMC, *AT91PS_PMC;$/;"	t	typeref:struct:_AT91S_PMC
AT91PS_PWMC	include/at91sam7s512.h	/^} AT91S_PWMC, *AT91PS_PWMC;$/;"	t	typeref:struct:_AT91S_PWMC
AT91PS_PWMC_CH	include/at91sam7s512.h	/^} AT91S_PWMC_CH, *AT91PS_PWMC_CH;$/;"	t	typeref:struct:_AT91S_PWMC_CH
AT91PS_RSTC	include/at91sam7s512.h	/^} AT91S_RSTC, *AT91PS_RSTC;$/;"	t	typeref:struct:_AT91S_RSTC
AT91PS_RTTC	include/at91sam7s512.h	/^} AT91S_RTTC, *AT91PS_RTTC;$/;"	t	typeref:struct:_AT91S_RTTC
AT91PS_SPI	include/at91sam7s512.h	/^} AT91S_SPI, *AT91PS_SPI;$/;"	t	typeref:struct:_AT91S_SPI
AT91PS_SSC	include/at91sam7s512.h	/^} AT91S_SSC, *AT91PS_SSC;$/;"	t	typeref:struct:_AT91S_SSC
AT91PS_SYS	include/at91sam7s512.h	/^} AT91S_SYS, *AT91PS_SYS;$/;"	t	typeref:struct:_AT91S_SYS
AT91PS_TC	include/at91sam7s512.h	/^} AT91S_TC, *AT91PS_TC;$/;"	t	typeref:struct:_AT91S_TC
AT91PS_TCB	include/at91sam7s512.h	/^} AT91S_TCB, *AT91PS_TCB;$/;"	t	typeref:struct:_AT91S_TCB
AT91PS_TWI	include/at91sam7s512.h	/^} AT91S_TWI, *AT91PS_TWI;$/;"	t	typeref:struct:_AT91S_TWI
AT91PS_UDP	include/at91sam7s512.h	/^} AT91S_UDP, *AT91PS_UDP;$/;"	t	typeref:struct:_AT91S_UDP
AT91PS_USART	include/at91sam7s512.h	/^} AT91S_USART, *AT91PS_USART;$/;"	t	typeref:struct:_AT91S_USART
AT91PS_VREG	include/at91sam7s512.h	/^} AT91S_VREG, *AT91PS_VREG;$/;"	t	typeref:struct:_AT91S_VREG
AT91PS_WDTC	include/at91sam7s512.h	/^} AT91S_WDTC, *AT91PS_WDTC;$/;"	t	typeref:struct:_AT91S_WDTC
AT91SAM7S512_H	include/at91sam7s512.h	/^#define AT91SAM7S512_H$/;"	d
AT91S_ADC	include/at91sam7s512.h	/^} AT91S_ADC, *AT91PS_ADC;$/;"	t	typeref:struct:_AT91S_ADC
AT91S_AIC	include/at91sam7s512.h	/^} AT91S_AIC, *AT91PS_AIC;$/;"	t	typeref:struct:_AT91S_AIC
AT91S_CDC_LINE_CODING	common/usb_cdc.c	/^} AT91S_CDC_LINE_CODING, *AT91PS_CDC_LINE_CODING;$/;"	t	typeref:struct:__anon55	file:
AT91S_CKGR	include/at91sam7s512.h	/^} AT91S_CKGR, *AT91PS_CKGR;$/;"	t	typeref:struct:_AT91S_CKGR
AT91S_DBGU	include/at91sam7s512.h	/^} AT91S_DBGU, *AT91PS_DBGU;$/;"	t	typeref:struct:_AT91S_DBGU
AT91S_EFC	include/at91sam7s512.h	/^} AT91S_EFC, *AT91PS_EFC;$/;"	t	typeref:struct:_AT91S_EFC
AT91S_MC	include/at91sam7s512.h	/^} AT91S_MC, *AT91PS_MC;$/;"	t	typeref:struct:_AT91S_MC
AT91S_PDC	include/at91sam7s512.h	/^} AT91S_PDC, *AT91PS_PDC;$/;"	t	typeref:struct:_AT91S_PDC
AT91S_PIO	include/at91sam7s512.h	/^} AT91S_PIO, *AT91PS_PIO;$/;"	t	typeref:struct:_AT91S_PIO
AT91S_PITC	include/at91sam7s512.h	/^} AT91S_PITC, *AT91PS_PITC;$/;"	t	typeref:struct:_AT91S_PITC
AT91S_PMC	include/at91sam7s512.h	/^} AT91S_PMC, *AT91PS_PMC;$/;"	t	typeref:struct:_AT91S_PMC
AT91S_PWMC	include/at91sam7s512.h	/^} AT91S_PWMC, *AT91PS_PWMC;$/;"	t	typeref:struct:_AT91S_PWMC
AT91S_PWMC_CH	include/at91sam7s512.h	/^} AT91S_PWMC_CH, *AT91PS_PWMC_CH;$/;"	t	typeref:struct:_AT91S_PWMC_CH
AT91S_RSTC	include/at91sam7s512.h	/^} AT91S_RSTC, *AT91PS_RSTC;$/;"	t	typeref:struct:_AT91S_RSTC
AT91S_RTTC	include/at91sam7s512.h	/^} AT91S_RTTC, *AT91PS_RTTC;$/;"	t	typeref:struct:_AT91S_RTTC
AT91S_SPI	include/at91sam7s512.h	/^} AT91S_SPI, *AT91PS_SPI;$/;"	t	typeref:struct:_AT91S_SPI
AT91S_SSC	include/at91sam7s512.h	/^} AT91S_SSC, *AT91PS_SSC;$/;"	t	typeref:struct:_AT91S_SSC
AT91S_SYS	include/at91sam7s512.h	/^} AT91S_SYS, *AT91PS_SYS;$/;"	t	typeref:struct:_AT91S_SYS
AT91S_TC	include/at91sam7s512.h	/^} AT91S_TC, *AT91PS_TC;$/;"	t	typeref:struct:_AT91S_TC
AT91S_TCB	include/at91sam7s512.h	/^} AT91S_TCB, *AT91PS_TCB;$/;"	t	typeref:struct:_AT91S_TCB
AT91S_TWI	include/at91sam7s512.h	/^} AT91S_TWI, *AT91PS_TWI;$/;"	t	typeref:struct:_AT91S_TWI
AT91S_UDP	include/at91sam7s512.h	/^} AT91S_UDP, *AT91PS_UDP;$/;"	t	typeref:struct:_AT91S_UDP
AT91S_USART	include/at91sam7s512.h	/^} AT91S_USART, *AT91PS_USART;$/;"	t	typeref:struct:_AT91S_USART
AT91S_VREG	include/at91sam7s512.h	/^} AT91S_VREG, *AT91PS_VREG;$/;"	t	typeref:struct:_AT91S_VREG
AT91S_WDTC	include/at91sam7s512.h	/^} AT91S_WDTC, *AT91PS_WDTC;$/;"	t	typeref:struct:_AT91S_WDTC
AT91_CAST	include/at91sam7s512.h	/^#define AT91_CAST(/;"	d
AT91_REG	include/at91sam7s512.h	/^typedef volatile unsigned int AT91_REG;\/\/ Hardware register definition$/;"	t
ATQA	armsrc/emvcard.h	/^    uint8_t ATQA[2]; \/\/Answer to Request $/;"	m	struct:__anon2
ATQA	armsrc/emvcard.h	/^    uint8_t ATQA[2]; \/\/Answer to Request $/;"	m	struct:__anon3
ATS	armsrc/emvcard.h	/^    uint8_t ATS[256]; $/;"	m	struct:__anon2
ATS	armsrc/emvcard.h	/^    uint8_t ATS[256]; $/;"	m	struct:__anon3
ATS_len	armsrc/emvcard.h	/^    uint8_t ATS_len; \/\/Answer to select  $/;"	m	struct:__anon2
ATS_len	armsrc/emvcard.h	/^    uint8_t ATS_len; \/\/Answer to select  $/;"	m	struct:__anon3
AUTH_FIRST	armsrc/mifareutil.h	/^#define AUTH_FIRST /;"	d
AUTH_NESTED	armsrc/mifareutil.h	/^#define AUTH_NESTED /;"	d
AUTH_TABLE_LENGTH	armsrc/hitag2.c	/^#define AUTH_TABLE_LENGTH /;"	d	file:
AUXMARK	liblua/loadlib.c	/^#define AUXMARK	/;"	d	file:
AWIDdemodFSK	common/lfdemod.c	/^int AWIDdemodFSK(uint8_t *dest, size_t *size)$/;"	f
AcquireRawAdcSamplesIso14443	armsrc/iso14443.c	/^void AcquireRawAdcSamplesIso14443(uint32_t parameter)$/;"	f
AcquireRawAdcSamplesIso15693	armsrc/iso15693.c	/^void AcquireRawAdcSamplesIso15693(void)$/;"	f
AcquireTiType	armsrc/lfops.c	/^void AcquireTiType(void)$/;"	f
AddCrc	armsrc/iso15693.c	/^#define AddCrc(/;"	d	file:
AddCrc	client/cmdhf15.c	/^#define AddCrc(/;"	d	file:
AddLogCurrentDT	client/util.c	/^void AddLogCurrentDT(char *fileName) {$/;"	f
AddLogHex	client/util.c	/^void AddLogHex(char *fileName, char *extData, const uint8_t * data, const size_t len){$/;"	f
AddLogLine	client/util.c	/^void AddLogLine(char *file, char *extData, char *c) {$/;"	f
AddLogUint64	client/util.c	/^void AddLogUint64(char *fileName, char *extData, const uint64_t data) {$/;"	f
AesCtx	armsrc/aes.h	/^} AesCtx;$/;"	t	typeref:struct:__anon1
AesCtxIni	armsrc/aes.c	/^int AesCtxIni(AesCtx *pCtx, unsigned char *pIV, unsigned char *pKey, unsigned int KeyLen, unsigned char Mode)$/;"	f
AesDecBlk	armsrc/aes.c	/^void AesDecBlk(AesCtx *pCtx, const unsigned char ct[], unsigned char pt[])$/;"	f
AesDecrypt	armsrc/aes.c	/^int AesDecrypt(AesCtx *pCtx, unsigned char *pCipher, unsigned char *pData, unsigned int CipherLen)$/;"	f
AesEncBlk	armsrc/aes.c	/^void AesEncBlk(AesCtx *pCtx, const unsigned char pt[], unsigned char ct[])$/;"	f
AesEncrypt	armsrc/aes.c	/^int AesEncrypt(AesCtx *pCtx, unsigned char *pData, unsigned char *pCipher, unsigned int DataLen)$/;"	f
AesGenKeySched	armsrc/aes.c	/^int AesGenKeySched(unsigned int rk[], unsigned int rrk[], const unsigned char cipherKey[], int keyBytes)$/;"	f
AppMain	armsrc/appmain.c	/^void  __attribute__((noreturn)) AppMain(void)$/;"	f
AppendCrc14443a	armsrc/iso14443a.c	/^void AppendCrc14443a(uint8_t* data, int len)$/;"	f
AppendGraph	client/graph.c	/^void AppendGraph(int redraw, int clock, int bit)$/;"	f
AvgAdc	armsrc/appmain.c	/^int AvgAdc(int ch) \/\/ was static - merlok$/;"	f
B	client/loclass/cipher.c	/^bool B(State state)$/;"	f
BASENAME	fpga/tests/plot_edgedetect.py	/^BASENAME = sys.argv[1]$/;"	v
BASE_O	liblua/Makefile	/^BASE_O= $(CORE_O) $(LIB_O) $(MYOBJS)$/;"	m
BASIC_STACK_SIZE	liblua/lstate.h	/^#define BASIC_STACK_SIZE /;"	d
BEBIT	armsrc/crapto1.h	/^#define BEBIT(/;"	d
BEBIT	client/nonce2key/crapto1.h	/^#define BEBIT(/;"	d
BEBIT	tools/mfkey/crapto1.h	/^#define BEBIT(/;"	d
BEBIT	tools/nonce2key/crapto1.h	/^#define BEBIT(/;"	d
BEING_CRACKED	client/loclass/elite_crack.h	/^#define BEING_CRACKED	/;"	d
BIGBUF_SIZE	armsrc/BigBuf.h	/^#define BIGBUF_SIZE	/;"	d
BIGBUF_SIZE	client/cmddata.h	/^#define BIGBUF_SIZE /;"	d
BIG_ENDIAN	client/proxendian.h	/^#  define BIG_ENDIAN /;"	d
BINS	client/Makefile	/^BINS = proxmark3 flasher #snooper cli$/;"	m
BINS	client/hid-flasher/Makefile	/^BINS = flasher$/;"	m
BINS	recovery/Makefile	/^BINS = bootrom.bin fullimage.bin proxmark3_recovery.bin$/;"	m
BINSTRING_CASES	tools/findbits_test.py	/^	BINSTRING_CASES = [$/;"	v	class:TestFindBits
BIT	armsrc/crapto1.h	/^#define BIT(/;"	d
BIT	client/nonce2key/crapto1.h	/^#define BIT(/;"	d
BIT	tools/mfkey/crapto1.h	/^#define BIT(/;"	d
BIT	tools/nonce2key/crapto1.h	/^#define BIT(/;"	d
BITLIB_FLOAT_BITS	client/pm3_bit_limits.h	/^#define BITLIB_FLOAT_BITS /;"	d
BITLIB_FLOAT_MAX	client/pm3_bit_limits.h	/^#define BITLIB_FLOAT_MAX /;"	d
BITLIB_FLOAT_MIN	client/pm3_bit_limits.h	/^#define BITLIB_FLOAT_MIN /;"	d
BITLIB_FLOAT_UMAX	client/pm3_bit_limits.h	/^#define BITLIB_FLOAT_UMAX /;"	d
BITRK	liblua/lopcodes.h	/^#define BITRK	/;"	d
BIT_BITS	client/pm3_bitlib.c	/^#define BIT_BITS /;"	d	file:
BIT_ISCOLLECTABLE	liblua/lobject.h	/^#define BIT_ISCOLLECTABLE	/;"	d
BIT_MAX	client/pm3_bitlib.c	/^#define BIT_MAX /;"	d	file:
BIT_MIN	client/pm3_bitlib.c	/^#define BIT_MIN /;"	d	file:
BIT_TRUNCATE	client/pm3_bitlib.c	/^#define BIT_TRUNCATE(/;"	d	file:
BIT_UMAX	client/pm3_bitlib.c	/^#define BIT_UMAX /;"	d	file:
BLACK	armsrc/LCD.h	/^#define BLACK	/;"	d
BLACKBIT	liblua/lgc.h	/^#define BLACKBIT	/;"	d
BLOCKSZ	armsrc/aes.h	/^#define BLOCKSZ /;"	d
BLOCK_SIZE	client/flash.c	/^#define BLOCK_SIZE /;"	d	file:
BLOCK_SIZE	client/hid-flasher/flash.c	/^#define BLOCK_SIZE /;"	d	file:
BLUE	armsrc/LCD.h	/^#define BLUE	/;"	d
BOOTLOADER_END	client/flash.c	/^#define BOOTLOADER_END /;"	d	file:
BOOTLOADER_END	client/hid-flasher/flash.c	/^#define BOOTLOADER_END /;"	d	file:
BOOTLOADER_SIZE	client/flash.c	/^#define BOOTLOADER_SIZE /;"	d	file:
BOOTLOADER_SIZE	client/hid-flasher/flash.c	/^#define BOOTLOADER_SIZE /;"	d	file:
BUTTON_CLICKED	armsrc/util.c	/^int BUTTON_CLICKED(int ms)$/;"	f
BUTTON_DOUBLE_CLICK	armsrc/util.h	/^#define BUTTON_DOUBLE_CLICK /;"	d
BUTTON_ERROR	armsrc/util.h	/^#define BUTTON_ERROR /;"	d
BUTTON_HELD	armsrc/util.c	/^int BUTTON_HELD(int ms)$/;"	f
BUTTON_HOLD	armsrc/util.h	/^#define BUTTON_HOLD /;"	d
BUTTON_NO_CLICK	armsrc/util.h	/^#define BUTTON_NO_CLICK /;"	d
BUTTON_PRESS	include/proxmark3.h	/^#define BUTTON_PRESS(/;"	d
BUTTON_SINGLE_CLICK	armsrc/util.h	/^#define BUTTON_SINGLE_CLICK /;"	d
BYTE_ORDER	client/proxendian.h	/^#  define BYTE_ORDER /;"	d
BYTEx	armsrc/util.h	/^#define BYTEx(/;"	d
BigBuf	armsrc/BigBuf.c	/^static uint32_t BigBuf[BIGBUF_SIZE\/sizeof(uint32_t)];$/;"	v	file:
BigBuf_Clear	armsrc/BigBuf.c	/^void BigBuf_Clear(void)$/;"	f
BigBuf_free	armsrc/BigBuf.c	/^void BigBuf_free(void)$/;"	f
BigBuf_free_keep_EM	armsrc/BigBuf.c	/^void BigBuf_free_keep_EM(void)$/;"	f
BigBuf_get_EM_addr	armsrc/BigBuf.c	/^uint8_t *BigBuf_get_EM_addr(void)$/;"	f
BigBuf_get_addr	armsrc/BigBuf.c	/^uint8_t *BigBuf_get_addr(void)$/;"	f
BigBuf_get_traceLen	armsrc/BigBuf.c	/^uint16_t BigBuf_get_traceLen(void)$/;"	f
BigBuf_hi	armsrc/BigBuf.c	/^static uint16_t BigBuf_hi = BIGBUF_SIZE;$/;"	v	file:
BigBuf_malloc	armsrc/BigBuf.c	/^uint8_t *BigBuf_malloc(uint16_t chunksize)$/;"	f
BigBuf_max_traceLen	armsrc/BigBuf.c	/^uint16_t BigBuf_max_traceLen(void)$/;"	f
BinOpr	liblua/lcode.h	/^typedef enum BinOpr {$/;"	g
BinOpr	liblua/lcode.h	/^} BinOpr;$/;"	t	typeref:enum:BinOpr
BiphaseRawDecode	common/lfdemod.c	/^int BiphaseRawDecode(uint8_t *BitStream, size_t *size, int offset, int invert)$/;"	f
BitstreamIn	client/loclass/cipherutils.h	/^} BitstreamIn;$/;"	t	typeref:struct:__anon41
BitstreamOut	armsrc/lfsampling.c	/^} BitstreamOut;$/;"	t	typeref:struct:__anon24	file:
BitstreamOut	client/cmddata.c	/^}BitstreamOut;$/;"	t	typeref:struct:__anon27	file:
BitstreamOut	client/loclass/cipherutils.h	/^}BitstreamOut;$/;"	t	typeref:struct:__anon42
BlockCnt	liblua/lparser.c	/^typedef struct BlockCnt {$/;"	s	file:
BlockCnt	liblua/lparser.c	/^} BlockCnt;$/;"	t	typeref:struct:BlockCnt	file:
BootROM	bootrom/bootrom.c	/^void BootROM(void)$/;"	f
BruteforceIso15693Afi	armsrc/iso15693.c	/^void BruteforceIso15693Afi(uint32_t speed) $/;"	f
BuildIdentifyRequest	armsrc/iso15693.c	/^static void BuildIdentifyRequest(void)$/;"	f	file:
BuildInventoryResponse	armsrc/iso15693.c	/^ static void BuildInventoryResponse( uint8_t *uid)$/;"	f	file:
BuildReadBlockRequest	armsrc/iso15693.c	/^static void BuildReadBlockRequest(uint8_t *uid, uint8_t blockNumber )$/;"	f	file:
C1	armsrc/crapto1.c	/^static const uint32_t C1[] = { 0x846B5, 0x4235A, 0x211AD};$/;"	v	file:
C1	client/nonce2key/crapto1.c	/^static const uint32_t C1[] = { 0x846B5, 0x4235A, 0x211AD};$/;"	v	file:
C1	tools/mfkey/crapto1.c	/^static const uint32_t C1[] = { 0x846B5, 0x4235A, 0x211AD};$/;"	v	file:
C1	tools/nonce2key/crapto1.c	/^static const uint32_t C1[] = { 0x846B5, 0x4235A, 0x211AD};$/;"	v	file:
C2	armsrc/crapto1.c	/^static const uint32_t C2[] = { 0x1A822E0, 0x21A822E0, 0x21A822E0};$/;"	v	file:
C2	client/nonce2key/crapto1.c	/^static const uint32_t C2[] = { 0x1A822E0, 0x21A822E0, 0x21A822E0};$/;"	v	file:
C2	tools/mfkey/crapto1.c	/^static const uint32_t C2[] = { 0x1A822E0, 0x21A822E0, 0x21A822E0};$/;"	v	file:
C2	tools/nonce2key/crapto1.c	/^static const uint32_t C2[] = { 0x1A822E0, 0x21A822E0, 0x21A822E0};$/;"	v	file:
CAP_POSITION	liblua/lstrlib.c	/^#define CAP_POSITION	/;"	d	file:
CAP_UNFINISHED	liblua/lstrlib.c	/^#define CAP_UNFINISHED	/;"	d	file:
CARD_ACK	armsrc/mifareutil.h	/^#define CARD_ACK /;"	d
CARD_MEMORY_SIZE	armsrc/BigBuf.h	/^#define CARD_MEMORY_SIZE	/;"	d
CARD_NACK_NA	armsrc/mifareutil.h	/^#define CARD_NACK_NA /;"	d
CARD_NACK_TR	armsrc/mifareutil.h	/^#define CARD_NACK_TR /;"	d
CBC	armsrc/aes.h	/^#define CBC /;"	d
CC	client/Makefile	/^CC=gcc$/;"	m
CC	client/hid-flasher/Makefile	/^CC=gcc$/;"	m
CC	liblua/Makefile	/^CC= gcc$/;"	m
CC	tools/mfkey/Makefile	/^CC = gcc$/;"	m
CC	tools/nonce2key/Makefile	/^CC = gcc$/;"	m
CClosure	liblua/lobject.h	/^typedef struct CClosure {$/;"	s
CClosure	liblua/lobject.h	/^} CClosure;$/;"	t	typeref:struct:CClosure
CFLAGS	client/Makefile	/^CFLAGS = -std=c99 -I. -I..\/include -I..\/common -I\/opt\/local\/include -I..\/liblua -Wall $(COMMON_FLAGS) -g -O4$/;"	m
CFLAGS	client/hid-flasher/Makefile	/^CFLAGS = -std=gnu99 -I. -I..\/include -I..\/common -I\/opt\/local\/include -Wall -Wno-unused-function $(COMMON_FLAGS) -g -O3$/;"	m
CFLAGS	liblua/Makefile	/^CFLAGS= -O2 -Wall -DLUA_COMPAT_ALL $(SYSCFLAGS) $(MYCFLAGS)$/;"	m
CFLAGS	tools/mfkey/Makefile	/^CFLAGS = -Wall -Winline -O4$/;"	m
CFLAGS	tools/nonce2key/Makefile	/^CFLAGS = -Wall -O4 -c$/;"	m
CIPHERUTILS_H	client/loclass/cipherutils.h	/^#define CIPHERUTILS_H$/;"	d
CIPHER_H	client/loclass/cipher.h	/^#define CIPHER_H$/;"	d
CIST_HOOKED	liblua/lstate.h	/^#define CIST_HOOKED	/;"	d
CIST_HOOKYIELD	liblua/lstate.h	/^#define CIST_HOOKYIELD	/;"	d
CIST_LUA	liblua/lstate.h	/^#define CIST_LUA	/;"	d
CIST_REENTRY	liblua/lstate.h	/^#define CIST_REENTRY	/;"	d
CIST_STAT	liblua/lstate.h	/^#define CIST_STAT	/;"	d
CIST_TAIL	liblua/lstate.h	/^#define CIST_TAIL	/;"	d
CIST_YIELDED	liblua/lstate.h	/^#define CIST_YIELDED	/;"	d
CIST_YPCALL	liblua/lstate.h	/^#define CIST_YPCALL	/;"	d
CKGR_MCFR	include/at91sam7s512.h	/^	AT91_REG	 CKGR_MCFR; 	\/\/ Main Clock  Frequency Register$/;"	m	struct:_AT91S_CKGR
CKGR_MCFR	include/at91sam7s512.h	/^#define CKGR_MCFR /;"	d
CKGR_MOR	include/at91sam7s512.h	/^	AT91_REG	 CKGR_MOR; 	\/\/ Main Oscillator Register$/;"	m	struct:_AT91S_CKGR
CKGR_MOR	include/at91sam7s512.h	/^#define CKGR_MOR /;"	d
CKGR_PLLR	include/at91sam7s512.h	/^	AT91_REG	 CKGR_PLLR; 	\/\/ PLL Register$/;"	m	struct:_AT91S_CKGR
CKGR_PLLR	include/at91sam7s512.h	/^#define CKGR_PLLR /;"	d
CLAIMED_SERIAL_PORT	client/uart.h	/^#define CLAIMED_SERIAL_PORT /;"	d
CLEAN	client/Makefile	/^CLEAN = cli cli.exe flasher flasher.exe proxmark3 proxmark3.exe snooper snooper.exe $(CMDOBJS) $(OBJDIR)\/*.o *.o *.moc.cpp$/;"	m
CLEAN	client/hid-flasher/Makefile	/^CLEAN = flasher flasher.exe $(OBJDIR)\/*.o *.o$/;"	m
CLIBS	liblua/loadlib.c	/^#define CLIBS	/;"	d	file:
CMDDATA_H__	client/cmddata.h	/^#define CMDDATA_H__$/;"	d
CMDHF14A_H__	client/cmdhf14a.h	/^#define CMDHF14A_H__$/;"	d
CMDHF14B_H__	client/cmdhf14b.h	/^#define CMDHF14B_H__$/;"	d
CMDHF15_H__	client/cmdhf15.h	/^#define CMDHF15_H__$/;"	d
CMDHFEPA_H__	client/cmdhfepa.h	/^#define CMDHFEPA_H__$/;"	d
CMDHFICLASS_H__	client/cmdhficlass.h	/^#define CMDHFICLASS_H__$/;"	d
CMDHFLEGIC_H__	client/cmdhflegic.h	/^#define CMDHFLEGIC_H__$/;"	d
CMDHFMF_H__	client/cmdhfmf.h	/^#define CMDHFMF_H__$/;"	d
CMDHF_H__	client/cmdhf.h	/^#define CMDHF_H__$/;"	d
CMDHW_H__	client/cmdhw.h	/^#define CMDHW_H__$/;"	d
CMDLFEM4X_H__	client/cmdlfem4x.h	/^#define CMDLFEM4X_H__$/;"	d
CMDLFHID_H__	client/cmdlfhid.h	/^#define CMDLFHID_H__$/;"	d
CMDLFHITAG_H__	client/cmdlfhitag.h	/^#define CMDLFHITAG_H__$/;"	d
CMDLFIO_H__	client/cmdlfio.h	/^#define CMDLFIO_H__$/;"	d
CMDLFPCF7931_H__	client/cmdlfpcf7931.h	/^#define CMDLFPCF7931_H__$/;"	d
CMDLFT55XX_H__	client/cmdlft55xx.h	/^#define CMDLFT55XX_H__$/;"	d
CMDLFTI_H__	client/cmdlfti.h	/^#define CMDLFTI_H__$/;"	d
CMDLF_H__	client/cmdlf.h	/^#define CMDLF_H__$/;"	d
CMDMAIN_H__	client/cmdmain.h	/^#define CMDMAIN_H__$/;"	d
CMDOBJS	client/Makefile	/^CMDOBJS = $(CMDSRCS:%.c=$(OBJDIR)\/%.o)$/;"	m
CMDPARSER_H__	client/cmdparser.h	/^#define CMDPARSER_H__ /;"	d
CMDSCRIPT_H__	client/cmdscript.h	/^#define CMDSCRIPT_H__$/;"	d
CMDSRCS	client/Makefile	/^CMDSRCS = 	nonce2key\/crapto1.c\\$/;"	m
CMD_ACK	client/hid-flasher/usb_cmd.h	/^#define CMD_ACK /;"	d
CMD_ACK	include/usb_cmd.h	/^#define CMD_ACK /;"	d
CMD_ACQUIRE_RAW_ADC_SAMPLES_125K	client/hid-flasher/usb_cmd.h	/^#define CMD_ACQUIRE_RAW_ADC_SAMPLES_125K /;"	d
CMD_ACQUIRE_RAW_ADC_SAMPLES_125K	include/usb_cmd.h	/^#define CMD_ACQUIRE_RAW_ADC_SAMPLES_125K /;"	d
CMD_ACQUIRE_RAW_ADC_SAMPLES_ISO_14443	client/hid-flasher/usb_cmd.h	/^#define CMD_ACQUIRE_RAW_ADC_SAMPLES_ISO_14443 /;"	d
CMD_ACQUIRE_RAW_ADC_SAMPLES_ISO_14443	include/usb_cmd.h	/^#define CMD_ACQUIRE_RAW_ADC_SAMPLES_ISO_14443 /;"	d
CMD_ACQUIRE_RAW_ADC_SAMPLES_ISO_15693	client/hid-flasher/usb_cmd.h	/^#define CMD_ACQUIRE_RAW_ADC_SAMPLES_ISO_15693 /;"	d
CMD_ACQUIRE_RAW_ADC_SAMPLES_ISO_15693	include/usb_cmd.h	/^#define CMD_ACQUIRE_RAW_ADC_SAMPLES_ISO_15693 /;"	d
CMD_BUFFER_SIZE	client/cmdmain.c	/^#define CMD_BUFFER_SIZE /;"	d	file:
CMD_BUFF_CLEAR	client/hid-flasher/usb_cmd.h	/^#define CMD_BUFF_CLEAR /;"	d
CMD_BUFF_CLEAR	include/usb_cmd.h	/^#define CMD_BUFF_CLEAR /;"	d
CMD_DEBUG_PRINT_BYTES	client/hid-flasher/usb_cmd.h	/^#define CMD_DEBUG_PRINT_BYTES /;"	d
CMD_DEBUG_PRINT_BYTES	include/usb_cmd.h	/^#define CMD_DEBUG_PRINT_BYTES /;"	d
CMD_DEBUG_PRINT_INTEGERS	client/hid-flasher/usb_cmd.h	/^#define CMD_DEBUG_PRINT_INTEGERS /;"	d
CMD_DEBUG_PRINT_INTEGERS	include/usb_cmd.h	/^#define CMD_DEBUG_PRINT_INTEGERS /;"	d
CMD_DEBUG_PRINT_STRING	client/hid-flasher/usb_cmd.h	/^#define CMD_DEBUG_PRINT_STRING /;"	d
CMD_DEBUG_PRINT_STRING	include/usb_cmd.h	/^#define CMD_DEBUG_PRINT_STRING /;"	d
CMD_DEVICE_INFO	client/hid-flasher/usb_cmd.h	/^#define CMD_DEVICE_INFO /;"	d
CMD_DEVICE_INFO	include/usb_cmd.h	/^#define CMD_DEVICE_INFO /;"	d
CMD_DOWNLOADED_RAW_ADC_SAMPLES_125K	client/hid-flasher/usb_cmd.h	/^#define CMD_DOWNLOADED_RAW_ADC_SAMPLES_125K /;"	d
CMD_DOWNLOADED_RAW_ADC_SAMPLES_125K	include/usb_cmd.h	/^#define CMD_DOWNLOADED_RAW_ADC_SAMPLES_125K /;"	d
CMD_DOWNLOADED_RAW_BITS_TI_TYPE	client/hid-flasher/usb_cmd.h	/^#define CMD_DOWNLOADED_RAW_BITS_TI_TYPE /;"	d
CMD_DOWNLOADED_RAW_BITS_TI_TYPE	include/usb_cmd.h	/^#define CMD_DOWNLOADED_RAW_BITS_TI_TYPE /;"	d
CMD_DOWNLOADED_SIM_SAMPLES_125K	client/hid-flasher/usb_cmd.h	/^#define CMD_DOWNLOADED_SIM_SAMPLES_125K /;"	d
CMD_DOWNLOADED_SIM_SAMPLES_125K	include/usb_cmd.h	/^#define CMD_DOWNLOADED_SIM_SAMPLES_125K /;"	d
CMD_DOWNLOAD_RAW_ADC_SAMPLES_125K	client/hid-flasher/usb_cmd.h	/^#define CMD_DOWNLOAD_RAW_ADC_SAMPLES_125K /;"	d
CMD_DOWNLOAD_RAW_ADC_SAMPLES_125K	include/usb_cmd.h	/^#define CMD_DOWNLOAD_RAW_ADC_SAMPLES_125K /;"	d
CMD_EM410X_DEMOD	include/usb_cmd.h	/^#define CMD_EM410X_DEMOD /;"	d
CMD_EM410X_WRITE_TAG	client/hid-flasher/usb_cmd.h	/^#define CMD_EM410X_WRITE_TAG /;"	d
CMD_EM410X_WRITE_TAG	include/usb_cmd.h	/^#define CMD_EM410X_WRITE_TAG /;"	d
CMD_EM4X_READ_WORD	include/usb_cmd.h	/^#define CMD_EM4X_READ_WORD /;"	d
CMD_EM4X_WRITE_WORD	include/usb_cmd.h	/^#define CMD_EM4X_WRITE_WORD /;"	d
CMD_EMV_GET_RANDOM_NUM	include/usb_cmd.h	/^#define CMD_EMV_GET_RANDOM_NUM /;"	d
CMD_EMV_TRANSACTION	include/usb_cmd.h	/^#define CMD_EMV_TRANSACTION /;"	d
CMD_EPA_PACE_COLLECT_NONCE	client/hid-flasher/usb_cmd.h	/^#define CMD_EPA_PACE_COLLECT_NONCE /;"	d
CMD_EPA_PACE_COLLECT_NONCE	include/usb_cmd.h	/^#define CMD_EPA_PACE_COLLECT_NONCE /;"	d
CMD_FINISH_WRITE	client/hid-flasher/usb_cmd.h	/^#define CMD_FINISH_WRITE /;"	d
CMD_FINISH_WRITE	include/usb_cmd.h	/^#define CMD_FINISH_WRITE /;"	d
CMD_FPGA_MAJOR_MODE_OFF	client/hid-flasher/usb_cmd.h	/^#define CMD_FPGA_MAJOR_MODE_OFF /;"	d
CMD_FPGA_MAJOR_MODE_OFF	include/usb_cmd.h	/^#define CMD_FPGA_MAJOR_MODE_OFF /;"	d
CMD_HARDWARE_RESET	client/hid-flasher/usb_cmd.h	/^#define CMD_HARDWARE_RESET /;"	d
CMD_HARDWARE_RESET	include/usb_cmd.h	/^#define CMD_HARDWARE_RESET /;"	d
CMD_HID_CLONE_TAG	client/hid-flasher/usb_cmd.h	/^#define CMD_HID_CLONE_TAG /;"	d
CMD_HID_CLONE_TAG	include/usb_cmd.h	/^#define CMD_HID_CLONE_TAG /;"	d
CMD_HID_DEMOD_FSK	client/hid-flasher/usb_cmd.h	/^#define CMD_HID_DEMOD_FSK /;"	d
CMD_HID_DEMOD_FSK	include/usb_cmd.h	/^#define CMD_HID_DEMOD_FSK /;"	d
CMD_HID_SIM_TAG	client/hid-flasher/usb_cmd.h	/^#define CMD_HID_SIM_TAG /;"	d
CMD_HID_SIM_TAG	include/usb_cmd.h	/^#define CMD_HID_SIM_TAG /;"	d
CMD_ICLASS_ISO14443A_WRITE	include/usb_cmd.h	/^#define CMD_ICLASS_ISO14443A_WRITE	/;"	d
CMD_INDALA_CLONE_TAG	client/hid-flasher/usb_cmd.h	/^#define CMD_INDALA_CLONE_TAG /;"	d
CMD_INDALA_CLONE_TAG	include/usb_cmd.h	/^#define CMD_INDALA_CLONE_TAG /;"	d
CMD_INDALA_CLONE_TAG_L	client/hid-flasher/usb_cmd.h	/^#define CMD_INDALA_CLONE_TAG_L /;"	d
CMD_INDALA_CLONE_TAG_L	include/usb_cmd.h	/^#define CMD_INDALA_CLONE_TAG_L /;"	d
CMD_IO_CLONE_TAG	include/usb_cmd.h	/^#define CMD_IO_CLONE_TAG /;"	d
CMD_IO_DEMOD_FSK	include/usb_cmd.h	/^#define CMD_IO_DEMOD_FSK /;"	d
CMD_ISO_14443B_COMMAND	include/usb_cmd.h	/^#define CMD_ISO_14443B_COMMAND /;"	d
CMD_ISO_15693_COMMAND	client/hid-flasher/usb_cmd.h	/^#define CMD_ISO_15693_COMMAND /;"	d
CMD_ISO_15693_COMMAND	include/usb_cmd.h	/^#define CMD_ISO_15693_COMMAND /;"	d
CMD_ISO_15693_COMMAND_DONE	client/hid-flasher/usb_cmd.h	/^#define CMD_ISO_15693_COMMAND_DONE /;"	d
CMD_ISO_15693_COMMAND_DONE	include/usb_cmd.h	/^#define CMD_ISO_15693_COMMAND_DONE /;"	d
CMD_ISO_15693_DEBUG	client/hid-flasher/usb_cmd.h	/^#define CMD_ISO_15693_DEBUG /;"	d
CMD_ISO_15693_DEBUG	include/usb_cmd.h	/^#define CMD_ISO_15693_DEBUG /;"	d
CMD_ISO_15693_FIND_AFI	client/hid-flasher/usb_cmd.h	/^#define CMD_ISO_15693_FIND_AFI /;"	d
CMD_ISO_15693_FIND_AFI	include/usb_cmd.h	/^#define CMD_ISO_15693_FIND_AFI /;"	d
CMD_LCD	client/hid-flasher/usb_cmd.h	/^#define CMD_LCD /;"	d
CMD_LCD	include/usb_cmd.h	/^#define CMD_LCD /;"	d
CMD_LCD_RESET	client/hid-flasher/usb_cmd.h	/^#define CMD_LCD_RESET /;"	d
CMD_LCD_RESET	include/usb_cmd.h	/^#define CMD_LCD_RESET /;"	d
CMD_LF_SIMULATE_BIDIR	client/hid-flasher/usb_cmd.h	/^#define CMD_LF_SIMULATE_BIDIR /;"	d
CMD_LF_SIMULATE_BIDIR	include/usb_cmd.h	/^#define CMD_LF_SIMULATE_BIDIR /;"	d
CMD_LF_SNOOP_RAW_ADC_SAMPLES	include/usb_cmd.h	/^#define CMD_LF_SNOOP_RAW_ADC_SAMPLES /;"	d
CMD_LISTEN_READER_FIELD	client/hid-flasher/usb_cmd.h	/^#define CMD_LISTEN_READER_FIELD /;"	d
CMD_LISTEN_READER_FIELD	include/usb_cmd.h	/^#define CMD_LISTEN_READER_FIELD /;"	d
CMD_MEASURED_ANTENNA_TUNING	client/hid-flasher/usb_cmd.h	/^#define CMD_MEASURED_ANTENNA_TUNING /;"	d
CMD_MEASURED_ANTENNA_TUNING	include/usb_cmd.h	/^#define CMD_MEASURED_ANTENNA_TUNING /;"	d
CMD_MEASURE_ANTENNA_TUNING	client/hid-flasher/usb_cmd.h	/^#define CMD_MEASURE_ANTENNA_TUNING /;"	d
CMD_MEASURE_ANTENNA_TUNING	include/usb_cmd.h	/^#define CMD_MEASURE_ANTENNA_TUNING /;"	d
CMD_MEASURE_ANTENNA_TUNING_HF	client/hid-flasher/usb_cmd.h	/^#define CMD_MEASURE_ANTENNA_TUNING_HF /;"	d
CMD_MEASURE_ANTENNA_TUNING_HF	include/usb_cmd.h	/^#define CMD_MEASURE_ANTENNA_TUNING_HF /;"	d
CMD_MIFAREUC_AUTH1	include/usb_cmd.h	/^#define CMD_MIFAREUC_AUTH1	/;"	d
CMD_MIFAREUC_AUTH2	include/usb_cmd.h	/^#define CMD_MIFAREUC_AUTH2	/;"	d
CMD_MIFAREUC_READCARD	include/usb_cmd.h	/^#define CMD_MIFAREUC_READCARD	/;"	d
CMD_MIFAREU_READBL	include/usb_cmd.h	/^#define CMD_MIFAREU_READBL	/;"	d
CMD_MIFAREU_READCARD	include/usb_cmd.h	/^#define CMD_MIFAREU_READCARD	/;"	d
CMD_MIFAREU_WRITEBL	include/usb_cmd.h	/^#define CMD_MIFAREU_WRITEBL	/;"	d
CMD_MIFAREU_WRITEBL_COMPAT	include/usb_cmd.h	/^#define CMD_MIFAREU_WRITEBL_COMPAT	/;"	d
CMD_MIFARE_CGETBLOCK	include/usb_cmd.h	/^#define CMD_MIFARE_CGETBLOCK /;"	d
CMD_MIFARE_CHKKEYS	client/hid-flasher/usb_cmd.h	/^#define CMD_MIFARE_CHKKEYS /;"	d
CMD_MIFARE_CHKKEYS	include/usb_cmd.h	/^#define CMD_MIFARE_CHKKEYS /;"	d
CMD_MIFARE_CIDENT	include/usb_cmd.h	/^#define CMD_MIFARE_CIDENT /;"	d
CMD_MIFARE_CSETBLOCK	include/usb_cmd.h	/^#define CMD_MIFARE_CSETBLOCK /;"	d
CMD_MIFARE_DESFIRE	include/usb_cmd.h	/^#define CMD_MIFARE_DESFIRE /;"	d
CMD_MIFARE_DESFIRE_AUTH1	include/usb_cmd.h	/^#define CMD_MIFARE_DESFIRE_AUTH1 /;"	d
CMD_MIFARE_DESFIRE_AUTH2	include/usb_cmd.h	/^#define CMD_MIFARE_DESFIRE_AUTH2 /;"	d
CMD_MIFARE_DESFIRE_INFO	include/usb_cmd.h	/^#define CMD_MIFARE_DESFIRE_INFO /;"	d
CMD_MIFARE_DESFIRE_READBL	include/usb_cmd.h	/^#define CMD_MIFARE_DESFIRE_READBL /;"	d
CMD_MIFARE_DESFIRE_WRITEBL	include/usb_cmd.h	/^#define CMD_MIFARE_DESFIRE_WRITEBL /;"	d
CMD_MIFARE_DES_READER	include/usb_cmd.h	/^#define CMD_MIFARE_DES_READER /;"	d
CMD_MIFARE_EML_CARDLOAD	client/hid-flasher/usb_cmd.h	/^#define CMD_MIFARE_EML_CARDLOAD /;"	d
CMD_MIFARE_EML_CARDLOAD	include/usb_cmd.h	/^#define CMD_MIFARE_EML_CARDLOAD /;"	d
CMD_MIFARE_EML_CGETBLOCK	client/hid-flasher/usb_cmd.h	/^#define CMD_MIFARE_EML_CGETBLOCK /;"	d
CMD_MIFARE_EML_CSETBLOCK	client/hid-flasher/usb_cmd.h	/^#define CMD_MIFARE_EML_CSETBLOCK /;"	d
CMD_MIFARE_EML_MEMCLR	client/hid-flasher/usb_cmd.h	/^#define CMD_MIFARE_EML_MEMCLR /;"	d
CMD_MIFARE_EML_MEMCLR	include/usb_cmd.h	/^#define CMD_MIFARE_EML_MEMCLR /;"	d
CMD_MIFARE_EML_MEMGET	client/hid-flasher/usb_cmd.h	/^#define CMD_MIFARE_EML_MEMGET /;"	d
CMD_MIFARE_EML_MEMGET	include/usb_cmd.h	/^#define CMD_MIFARE_EML_MEMGET /;"	d
CMD_MIFARE_EML_MEMSET	client/hid-flasher/usb_cmd.h	/^#define CMD_MIFARE_EML_MEMSET /;"	d
CMD_MIFARE_EML_MEMSET	include/usb_cmd.h	/^#define CMD_MIFARE_EML_MEMSET /;"	d
CMD_MIFARE_NESTED	client/hid-flasher/usb_cmd.h	/^#define CMD_MIFARE_NESTED /;"	d
CMD_MIFARE_NESTED	include/usb_cmd.h	/^#define CMD_MIFARE_NESTED /;"	d
CMD_MIFARE_READBL	client/hid-flasher/usb_cmd.h	/^#define CMD_MIFARE_READBL /;"	d
CMD_MIFARE_READBL	include/usb_cmd.h	/^#define CMD_MIFARE_READBL /;"	d
CMD_MIFARE_READSC	client/hid-flasher/usb_cmd.h	/^#define CMD_MIFARE_READSC /;"	d
CMD_MIFARE_READSC	include/usb_cmd.h	/^#define CMD_MIFARE_READSC /;"	d
CMD_MIFARE_SET_DBGMODE	client/hid-flasher/usb_cmd.h	/^#define CMD_MIFARE_SET_DBGMODE /;"	d
CMD_MIFARE_SET_DBGMODE	include/usb_cmd.h	/^#define CMD_MIFARE_SET_DBGMODE /;"	d
CMD_MIFARE_SNIFFER	client/hid-flasher/usb_cmd.h	/^#define CMD_MIFARE_SNIFFER /;"	d
CMD_MIFARE_SNIFFER	include/usb_cmd.h	/^#define CMD_MIFARE_SNIFFER /;"	d
CMD_MIFARE_WRITEBL	client/hid-flasher/usb_cmd.h	/^#define CMD_MIFARE_WRITEBL /;"	d
CMD_MIFARE_WRITEBL	include/usb_cmd.h	/^#define CMD_MIFARE_WRITEBL /;"	d
CMD_MOD_THEN_ACQUIRE_RAW_ADC_SAMPLES_125K	client/hid-flasher/usb_cmd.h	/^#define CMD_MOD_THEN_ACQUIRE_RAW_ADC_SAMPLES_125K /;"	d
CMD_MOD_THEN_ACQUIRE_RAW_ADC_SAMPLES_125K	include/usb_cmd.h	/^#define CMD_MOD_THEN_ACQUIRE_RAW_ADC_SAMPLES_125K /;"	d
CMD_NACK	client/hid-flasher/usb_cmd.h	/^#define CMD_NACK /;"	d
CMD_NACK	include/usb_cmd.h	/^#define CMD_NACK /;"	d
CMD_PCF7931_READ	include/usb_cmd.h	/^#define CMD_PCF7931_READ /;"	d
CMD_READER_HITAG	client/hid-flasher/usb_cmd.h	/^#define CMD_READER_HITAG /;"	d
CMD_READER_HITAG	include/usb_cmd.h	/^#define CMD_READER_HITAG /;"	d
CMD_READER_ICLASS	client/hid-flasher/usb_cmd.h	/^#define CMD_READER_ICLASS /;"	d
CMD_READER_ICLASS	include/usb_cmd.h	/^#define CMD_READER_ICLASS /;"	d
CMD_READER_ICLASS_REPLAY	include/usb_cmd.h	/^#define CMD_READER_ICLASS_REPLAY	/;"	d
CMD_READER_ISO_14443a	client/hid-flasher/usb_cmd.h	/^#define CMD_READER_ISO_14443a /;"	d
CMD_READER_ISO_14443a	include/usb_cmd.h	/^#define CMD_READER_ISO_14443a /;"	d
CMD_READER_ISO_15693	client/hid-flasher/usb_cmd.h	/^#define CMD_READER_ISO_15693 /;"	d
CMD_READER_ISO_15693	include/usb_cmd.h	/^#define CMD_READER_ISO_15693 /;"	d
CMD_READER_LEGIC_RF	client/hid-flasher/usb_cmd.h	/^#define CMD_READER_LEGIC_RF /;"	d
CMD_READER_LEGIC_RF	include/usb_cmd.h	/^#define CMD_READER_LEGIC_RF /;"	d
CMD_READER_MIFARE	client/hid-flasher/usb_cmd.h	/^#define CMD_READER_MIFARE /;"	d
CMD_READER_MIFARE	include/usb_cmd.h	/^#define CMD_READER_MIFARE /;"	d
CMD_READ_MEM	client/hid-flasher/usb_cmd.h	/^#define CMD_READ_MEM /;"	d
CMD_READ_MEM	include/usb_cmd.h	/^#define CMD_READ_MEM /;"	d
CMD_READ_SRI512_TAG	client/hid-flasher/usb_cmd.h	/^#define CMD_READ_SRI512_TAG /;"	d
CMD_READ_SRI512_TAG	include/usb_cmd.h	/^#define CMD_READ_SRI512_TAG /;"	d
CMD_READ_SRIX4K_TAG	client/hid-flasher/usb_cmd.h	/^#define CMD_READ_SRIX4K_TAG /;"	d
CMD_READ_SRIX4K_TAG	include/usb_cmd.h	/^#define CMD_READ_SRIX4K_TAG /;"	d
CMD_READ_TI_TYPE	client/hid-flasher/usb_cmd.h	/^#define CMD_READ_TI_TYPE /;"	d
CMD_READ_TI_TYPE	include/usb_cmd.h	/^#define CMD_READ_TI_TYPE /;"	d
CMD_RECORD_RAW_ADC_SAMPLES_ISO_15693	client/hid-flasher/usb_cmd.h	/^#define CMD_RECORD_RAW_ADC_SAMPLES_ISO_15693 /;"	d
CMD_RECORD_RAW_ADC_SAMPLES_ISO_15693	include/usb_cmd.h	/^#define CMD_RECORD_RAW_ADC_SAMPLES_ISO_15693 /;"	d
CMD_SETUP_WRITE	client/hid-flasher/usb_cmd.h	/^#define CMD_SETUP_WRITE /;"	d
CMD_SETUP_WRITE	include/usb_cmd.h	/^#define CMD_SETUP_WRITE /;"	d
CMD_SET_ADC_MUX	client/hid-flasher/usb_cmd.h	/^#define CMD_SET_ADC_MUX /;"	d
CMD_SET_ADC_MUX	include/usb_cmd.h	/^#define CMD_SET_ADC_MUX /;"	d
CMD_SET_LF_DIVISOR	client/hid-flasher/usb_cmd.h	/^#define CMD_SET_LF_DIVISOR /;"	d
CMD_SET_LF_DIVISOR	include/usb_cmd.h	/^#define CMD_SET_LF_DIVISOR /;"	d
CMD_SET_LF_SAMPLING_CONFIG	include/usb_cmd.h	/^#define CMD_SET_LF_SAMPLING_CONFIG /;"	d
CMD_SIMTAG_ISO_15693	client/hid-flasher/usb_cmd.h	/^#define CMD_SIMTAG_ISO_15693 /;"	d
CMD_SIMTAG_ISO_15693	include/usb_cmd.h	/^#define CMD_SIMTAG_ISO_15693 /;"	d
CMD_SIMULATE_HITAG	client/hid-flasher/usb_cmd.h	/^#define CMD_SIMULATE_HITAG /;"	d
CMD_SIMULATE_HITAG	include/usb_cmd.h	/^#define CMD_SIMULATE_HITAG /;"	d
CMD_SIMULATE_MIFARE_CARD	client/hid-flasher/usb_cmd.h	/^#define CMD_SIMULATE_MIFARE_CARD /;"	d
CMD_SIMULATE_MIFARE_CARD	include/usb_cmd.h	/^#define CMD_SIMULATE_MIFARE_CARD /;"	d
CMD_SIMULATE_TAG_125K	client/hid-flasher/usb_cmd.h	/^#define CMD_SIMULATE_TAG_125K /;"	d
CMD_SIMULATE_TAG_125K	include/usb_cmd.h	/^#define CMD_SIMULATE_TAG_125K /;"	d
CMD_SIMULATE_TAG_HF_LISTEN	client/hid-flasher/usb_cmd.h	/^#define CMD_SIMULATE_TAG_HF_LISTEN /;"	d
CMD_SIMULATE_TAG_HF_LISTEN	include/usb_cmd.h	/^#define CMD_SIMULATE_TAG_HF_LISTEN /;"	d
CMD_SIMULATE_TAG_ICLASS	client/hid-flasher/usb_cmd.h	/^#define CMD_SIMULATE_TAG_ICLASS /;"	d
CMD_SIMULATE_TAG_ICLASS	include/usb_cmd.h	/^#define CMD_SIMULATE_TAG_ICLASS /;"	d
CMD_SIMULATE_TAG_ISO_14443	client/hid-flasher/usb_cmd.h	/^#define CMD_SIMULATE_TAG_ISO_14443 /;"	d
CMD_SIMULATE_TAG_ISO_14443	include/usb_cmd.h	/^#define CMD_SIMULATE_TAG_ISO_14443 /;"	d
CMD_SIMULATE_TAG_ISO_14443a	client/hid-flasher/usb_cmd.h	/^#define CMD_SIMULATE_TAG_ISO_14443a /;"	d
CMD_SIMULATE_TAG_ISO_14443a	include/usb_cmd.h	/^#define CMD_SIMULATE_TAG_ISO_14443a /;"	d
CMD_SIMULATE_TAG_LEGIC_RF	client/hid-flasher/usb_cmd.h	/^#define CMD_SIMULATE_TAG_LEGIC_RF /;"	d
CMD_SIMULATE_TAG_LEGIC_RF	include/usb_cmd.h	/^#define CMD_SIMULATE_TAG_LEGIC_RF /;"	d
CMD_SNOOP_HITAG	client/hid-flasher/usb_cmd.h	/^#define CMD_SNOOP_HITAG /;"	d
CMD_SNOOP_HITAG	include/usb_cmd.h	/^#define CMD_SNOOP_HITAG /;"	d
CMD_SNOOP_ICLASS	client/hid-flasher/usb_cmd.h	/^#define CMD_SNOOP_ICLASS /;"	d
CMD_SNOOP_ICLASS	include/usb_cmd.h	/^#define CMD_SNOOP_ICLASS /;"	d
CMD_SNOOP_ISO_14443	client/hid-flasher/usb_cmd.h	/^#define CMD_SNOOP_ISO_14443 /;"	d
CMD_SNOOP_ISO_14443	include/usb_cmd.h	/^#define CMD_SNOOP_ISO_14443 /;"	d
CMD_SNOOP_ISO_14443a	client/hid-flasher/usb_cmd.h	/^#define CMD_SNOOP_ISO_14443a /;"	d
CMD_SNOOP_ISO_14443a	include/usb_cmd.h	/^#define CMD_SNOOP_ISO_14443a /;"	d
CMD_START_FLASH	client/hid-flasher/usb_cmd.h	/^#define CMD_START_FLASH /;"	d
CMD_START_FLASH	include/usb_cmd.h	/^#define CMD_START_FLASH /;"	d
CMD_T55XX_READ_BLOCK	include/usb_cmd.h	/^#define CMD_T55XX_READ_BLOCK /;"	d
CMD_T55XX_READ_TRACE	include/usb_cmd.h	/^#define CMD_T55XX_READ_TRACE /;"	d
CMD_T55XX_WRITE_BLOCK	include/usb_cmd.h	/^#define CMD_T55XX_WRITE_BLOCK /;"	d
CMD_UNKNOWN	client/hid-flasher/usb_cmd.h	/^#define CMD_UNKNOWN /;"	d
CMD_UNKNOWN	include/usb_cmd.h	/^#define CMD_UNKNOWN /;"	d
CMD_VERSION	client/hid-flasher/usb_cmd.h	/^#define CMD_VERSION /;"	d
CMD_VERSION	include/usb_cmd.h	/^#define CMD_VERSION /;"	d
CMD_WRITER_LEGIC_RF	client/hid-flasher/usb_cmd.h	/^#define CMD_WRITER_LEGIC_RF /;"	d
CMD_WRITER_LEGIC_RF	include/usb_cmd.h	/^#define CMD_WRITER_LEGIC_RF /;"	d
CMD_WRITE_TI_TYPE	client/hid-flasher/usb_cmd.h	/^#define CMD_WRITE_TI_TYPE /;"	d
CMD_WRITE_TI_TYPE	include/usb_cmd.h	/^#define CMD_WRITE_TI_TYPE /;"	d
COMMON_AREA_COMMAND_ENTER_FLASH_MODE	include/proxmark3.h	/^#define COMMON_AREA_COMMAND_ENTER_FLASH_MODE /;"	d
COMMON_AREA_COMMAND_NONE	include/proxmark3.h	/^#define COMMON_AREA_COMMAND_NONE /;"	d
COMMON_AREA_MAGIC	include/proxmark3.h	/^#define COMMON_AREA_MAGIC /;"	d
COREOBJS	client/Makefile	/^COREOBJS = $(CORESRCS:%.c=$(OBJDIR)\/%.o)$/;"	m
CORESRCS	client/Makefile	/^CORESRCS = 	uart.c \\$/;"	m
CORE_O	liblua/Makefile	/^CORE_O=	lapi.o lcode.o lctype.o ldebug.o ldo.o ldump.o lfunc.o lgc.o llex.o \\$/;"	m
CRACKED	client/loclass/elite_crack.h	/^#define CRACKED	/;"	d
CRACK_FAILED	client/loclass/elite_crack.h	/^#define CRACK_FAILED	/;"	d
CRAPTO1_INCLUDED	armsrc/crapto1.h	/^#define CRAPTO1_INCLUDED$/;"	d
CRAPTO1_INCLUDED	client/nonce2key/crapto1.h	/^#define CRAPTO1_INCLUDED$/;"	d
CRAPTO1_INCLUDED	tools/mfkey/crapto1.h	/^#define CRAPTO1_INCLUDED$/;"	d
CRAPTO1_INCLUDED	tools/nonce2key/crapto1.h	/^#define CRAPTO1_INCLUDED$/;"	d
CRC32_PRESET	common/crc32.c	/^#define CRC32_PRESET /;"	d	file:
CRC_14443_A	common/iso14443crc.h	/^#define	CRC_14443_A	/;"	d
CRC_14443_B	common/iso14443crc.h	/^#define	CRC_14443_B	/;"	d
CRC_ICLASS	common/iso14443crc.h	/^#define CRC_ICLASS	/;"	d
CRC_INITIALIZER	include/crc.h	/^#define CRC_INITIALIZER(/;"	d
CREATE_ABC	liblua/lopcodes.h	/^#define CREATE_ABC(/;"	d
CREATE_ABx	liblua/lopcodes.h	/^#define CREATE_ABx(/;"	d
CREATE_Ax	liblua/lopcodes.h	/^#define CREATE_Ax(/;"	d
CRYPT_ALL	armsrc/mifareutil.h	/^#define CRYPT_ALL /;"	d
CRYPT_NONE	armsrc/mifareutil.h	/^#define CRYPT_NONE /;"	d
CRYPT_REQUEST	armsrc/mifareutil.h	/^#define CRYPT_REQUEST /;"	d
CSETBLOCK_HALT	client/mifarehost.h	/^#define CSETBLOCK_HALT	/;"	d
CSETBLOCK_INIT_FIELD	client/mifarehost.h	/^#define CSETBLOCK_INIT_FIELD	/;"	d
CSETBLOCK_RESET_FIELD	client/mifarehost.h	/^#define CSETBLOCK_RESET_FIELD	/;"	d
CSETBLOCK_SINGLE_OPER	client/mifarehost.h	/^#define CSETBLOCK_SINGLE_OPER	/;"	d
CSETBLOCK_UID	client/mifarehost.h	/^#define CSETBLOCK_UID /;"	d
CSETBLOCK_WUPC	client/mifarehost.h	/^#define CSETBLOCK_WUPC	/;"	d
CXX	client/Makefile	/^CXX=g++$/;"	m
CXX	client/hid-flasher/Makefile	/^CXX=g++$/;"	m
CXXFLAGS	client/Makefile	/^CXXFLAGS = $(shell pkg-config --cflags QtCore QtGui 2>\/dev\/null) -Wall -O4$/;"	m
CXXFLAGS	client/Makefile	/^CXXFLAGS = -I$(QTDIR)\/include -I$(QTDIR)\/include\/QtCore -I$(QTDIR)\/include\/QtGui$/;"	m
CXXFLAGS	client/hid-flasher/Makefile	/^CXXFLAGS =$/;"	m
CYAN	armsrc/LCD.h	/^#define CYAN	/;"	d
CalcCheckSum	client/scripts/tnp3sim.lua	/^function CalcCheckSum(blocks, dataarea, chksumtype)$/;"	f
CallInfo	liblua/lstate.h	/^typedef struct CallInfo {$/;"	s
CallInfo	liblua/lstate.h	/^} CallInfo;$/;"	t	typeref:struct:CallInfo
CallS	liblua/lapi.c	/^struct CallS {  \/* data to `f_call' *\/$/;"	s	file:
CheckCrc14443	common/iso14443crc.c	/^int CheckCrc14443(int CrcType, const unsigned char *Data, int Length) {$/;"	f
ChkBitstream	client/cmdlf.c	/^static void ChkBitstream(const char *str)$/;"	f	file:
ClearGraph	client/graph.c	/^int ClearGraph(int redraw)$/;"	f
CloseProxmark	client/flasher.c	/^void CloseProxmark() {$/;"	f
CloseProxmark	client/hid-flasher/proxusb.c	/^void CloseProxmark(void)$/;"	f
Closure	liblua/lobject.h	/^typedef union Closure {$/;"	u
Closure	liblua/lobject.h	/^} Closure;$/;"	t	typeref:union:Closure
ClosureHeader	liblua/lobject.h	/^  ClosureHeader;$/;"	m	struct:CClosure
ClosureHeader	liblua/lobject.h	/^  ClosureHeader;$/;"	m	struct:LClosure
ClosureHeader	liblua/lobject.h	/^#define ClosureHeader /;"	d
CmdAmp	client/cmddata.c	/^int CmdAmp(const char *Cmd)$/;"	f
CmdAskEM410xDemod	client/cmddata.c	/^int CmdAskEM410xDemod(const char *Cmd)$/;"	f
CmdAskEdgeDetect	client/cmddata.c	/^int CmdAskEdgeDetect(const char *Cmd)$/;"	f
CmdAutoCorr	client/cmddata.c	/^int CmdAutoCorr(const char *Cmd)$/;"	f
CmdBiphaseDecodeRaw	client/cmddata.c	/^int CmdBiphaseDecodeRaw(const char *Cmd)$/;"	f
CmdBitsamples	client/cmddata.c	/^int CmdBitsamples(const char *Cmd)$/;"	f
CmdBitstream	client/cmddata.c	/^int CmdBitstream(const char *Cmd)$/;"	f
CmdBuffClear	client/cmddata.c	/^int CmdBuffClear(const char *Cmd)$/;"	f
CmdData	client/cmddata.c	/^int CmdData(const char *Cmd)$/;"	f
CmdDec	client/cmddata.c	/^int CmdDec(const char *Cmd)$/;"	f
CmdDetectClockRate	client/cmddata.c	/^int CmdDetectClockRate(const char *Cmd)$/;"	f
CmdDetectReader	client/cmdhw.c	/^int CmdDetectReader(const char *Cmd)$/;"	f
CmdDirectionalThreshold	client/cmddata.c	/^int CmdDirectionalThreshold(const char *Cmd)$/;"	f
CmdEM410xRead	client/cmdlfem4x.c	/^int CmdEM410xRead(const char *Cmd)$/;"	f
CmdEM410xSim	client/cmdlfem4x.c	/^int CmdEM410xSim(const char *Cmd)$/;"	f
CmdEM410xWatch	client/cmdlfem4x.c	/^int CmdEM410xWatch(const char *Cmd)$/;"	f
CmdEM410xWatchnSpoof	client/cmdlfem4x.c	/^int CmdEM410xWatchnSpoof(const char *Cmd)$/;"	f
CmdEM410xWrite	client/cmdlfem4x.c	/^int CmdEM410xWrite(const char *Cmd)$/;"	f
CmdEM410xdemod	armsrc/lfops.c	/^void CmdEM410xdemod(int findone, int *high, int *low, int ledcontrol)$/;"	f
CmdEM4x50Read	client/cmdlfem4x.c	/^int CmdEM4x50Read(const char *Cmd)$/;"	f
CmdEMdemodASK	client/cmdlfem4x.c	/^int CmdEMdemodASK(const char *Cmd)$/;"	f
CmdFPGAOff	client/cmdhw.c	/^int CmdFPGAOff(const char *Cmd)$/;"	f
CmdFSKdemod	client/cmddata.c	/^int CmdFSKdemod(const char *Cmd) \/\/old CmdFSKdemod needs updating$/;"	f
CmdFSKdemodAWID	client/cmddata.c	/^int CmdFSKdemodAWID(const char *Cmd)$/;"	f
CmdFSKdemodHID	client/cmddata.c	/^int CmdFSKdemodHID(const char *Cmd)$/;"	f
CmdFSKdemodIO	client/cmddata.c	/^int CmdFSKdemodIO(const char *Cmd)$/;"	f
CmdFSKdemodParadox	client/cmddata.c	/^int CmdFSKdemodParadox(const char *Cmd)$/;"	f
CmdFSKdemodPyramid	client/cmddata.c	/^int CmdFSKdemodPyramid(const char *Cmd)$/;"	f
CmdFSKrawdemod	client/cmddata.c	/^int CmdFSKrawdemod(const char *Cmd)$/;"	f
CmdFlexdemod	client/cmdlf.c	/^int CmdFlexdemod(const char *Cmd)$/;"	f
CmdGraphShiftZero	client/cmddata.c	/^int CmdGraphShiftZero(const char *Cmd)$/;"	f
CmdGrid	client/cmddata.c	/^int CmdGrid(const char *Cmd)$/;"	f
CmdHF	client/cmdhf.c	/^int CmdHF(const char *Cmd)$/;"	f
CmdHF14A	client/cmdhf14a.c	/^int CmdHF14A(const char *Cmd) {$/;"	f
CmdHF14ACUIDs	client/cmdhf14a.c	/^int CmdHF14ACUIDs(const char *Cmd)$/;"	f
CmdHF14ACmdRaw	client/cmdhf14a.c	/^int CmdHF14ACmdRaw(const char *cmd) {$/;"	f
CmdHF14AEMVTransaction	client/cmdhf14a.c	/^int CmdHF14AEMVTransaction(const char *Cmd)$/;"	f
CmdHF14AEMVgetrng	client/cmdhf14a.c	/^int CmdHF14AEMVgetrng(const char *Cmd)$/;"	f
CmdHF14AList	client/cmdhf14a.c	/^int CmdHF14AList(const char *Cmd)$/;"	f
CmdHF14AMf1kSim	client/cmdhfmf.c	/^int CmdHF14AMf1kSim(const char *Cmd)$/;"	f
CmdHF14AMfCGetBlk	client/cmdhfmf.c	/^int CmdHF14AMfCGetBlk(const char *Cmd) {$/;"	f
CmdHF14AMfCGetSc	client/cmdhfmf.c	/^int CmdHF14AMfCGetSc(const char *Cmd) {$/;"	f
CmdHF14AMfCLoad	client/cmdhfmf.c	/^int CmdHF14AMfCLoad(const char *Cmd)$/;"	f
CmdHF14AMfCSave	client/cmdhfmf.c	/^int CmdHF14AMfCSave(const char *Cmd) {$/;"	f
CmdHF14AMfCSetBlk	client/cmdhfmf.c	/^int CmdHF14AMfCSetBlk(const char *Cmd)$/;"	f
CmdHF14AMfCSetUID	client/cmdhfmf.c	/^int CmdHF14AMfCSetUID(const char *Cmd)$/;"	f
CmdHF14AMfChk	client/cmdhfmf.c	/^int CmdHF14AMfChk(const char *Cmd)$/;"	f
CmdHF14AMfDbg	client/cmdhfmf.c	/^int CmdHF14AMfDbg(const char *Cmd)$/;"	f
CmdHF14AMfDump	client/cmdhfmf.c	/^int CmdHF14AMfDump(const char *Cmd)$/;"	f
CmdHF14AMfECFill	client/cmdhfmf.c	/^int CmdHF14AMfECFill(const char *Cmd)$/;"	f
CmdHF14AMfEClear	client/cmdhfmf.c	/^int CmdHF14AMfEClear(const char *Cmd)$/;"	f
CmdHF14AMfEGet	client/cmdhfmf.c	/^int CmdHF14AMfEGet(const char *Cmd)$/;"	f
CmdHF14AMfEKeyPrn	client/cmdhfmf.c	/^int CmdHF14AMfEKeyPrn(const char *Cmd)$/;"	f
CmdHF14AMfELoad	client/cmdhfmf.c	/^int CmdHF14AMfELoad(const char *Cmd)$/;"	f
CmdHF14AMfESave	client/cmdhfmf.c	/^int CmdHF14AMfESave(const char *Cmd)$/;"	f
CmdHF14AMfESet	client/cmdhfmf.c	/^int CmdHF14AMfESet(const char *Cmd)$/;"	f
CmdHF14AMfNested	client/cmdhfmf.c	/^int CmdHF14AMfNested(const char *Cmd)$/;"	f
CmdHF14AMfRdBl	client/cmdhfmf.c	/^int CmdHF14AMfRdBl(const char *Cmd)$/;"	f
CmdHF14AMfRdSc	client/cmdhfmf.c	/^int CmdHF14AMfRdSc(const char *Cmd)$/;"	f
CmdHF14AMfRestore	client/cmdhfmf.c	/^int CmdHF14AMfRestore(const char *Cmd)$/;"	f
CmdHF14AMfSniff	client/cmdhfmf.c	/^int CmdHF14AMfSniff(const char *Cmd){$/;"	f
CmdHF14AMfUCRdBl	client/cmdhfmfu.c	/^int CmdHF14AMfUCRdBl(const char *Cmd)$/;"	f
CmdHF14AMfUCWrBl	client/cmdhfmfu.c	/^int CmdHF14AMfUCWrBl(const char *Cmd){$/;"	f
CmdHF14AMfUDump	client/cmdhfmfu.c	/^int CmdHF14AMfUDump(const char *Cmd){$/;"	f
CmdHF14AMfUInfo	client/cmdhfmfu.c	/^int CmdHF14AMfUInfo(const char *Cmd){$/;"	f
CmdHF14AMfURdBl	client/cmdhfmfu.c	/^int CmdHF14AMfURdBl(const char *Cmd){$/;"	f
CmdHF14AMfUWrBl	client/cmdhfmfu.c	/^int CmdHF14AMfUWrBl(const char *Cmd){$/;"	f
CmdHF14AMfWrBl	client/cmdhfmf.c	/^int CmdHF14AMfWrBl(const char *Cmd)$/;"	f
CmdHF14AMfucAuth	client/cmdhfmfu.c	/^int CmdHF14AMfucAuth(const char *Cmd){$/;"	f
CmdHF14AMifare	client/cmdhfmf.c	/^int CmdHF14AMifare(const char *Cmd)$/;"	f
CmdHF14AReader	client/cmdhf14a.c	/^int CmdHF14AReader(const char *Cmd)$/;"	f
CmdHF14ASim	client/cmdhf14a.c	/^int CmdHF14ASim(const char *Cmd)$/;"	f
CmdHF14ASnoop	client/cmdhf14a.c	/^int CmdHF14ASnoop(const char *Cmd) {$/;"	f
CmdHF14B	client/cmdhf14b.c	/^int CmdHF14B(const char *Cmd)$/;"	f
CmdHF14BCmdRaw	client/cmdhf14b.c	/^int CmdHF14BCmdRaw (const char *cmd) {$/;"	f
CmdHF14BDemod	client/cmdhf14b.c	/^int CmdHF14BDemod(const char *Cmd)$/;"	f
CmdHF14BList	client/cmdhf14b.c	/^int CmdHF14BList(const char *Cmd)$/;"	f
CmdHF14BRead	client/cmdhf14b.c	/^int CmdHF14BRead(const char *Cmd)$/;"	f
CmdHF14BSnoop	client/cmdhf14b.c	/^int CmdHF14BSnoop(const char *Cmd)$/;"	f
CmdHF14BWrite	client/cmdhf14b.c	/^int CmdHF14BWrite( const char *Cmd){$/;"	f
CmdHF14Sim	client/cmdhf14b.c	/^int CmdHF14Sim(const char *Cmd)$/;"	f
CmdHF15	client/cmdhf15.c	/^int CmdHF15(const char *Cmd)$/;"	f
CmdHF15Afi	client/cmdhf15.c	/^int CmdHF15Afi(const char *Cmd)$/;"	f
CmdHF15Cmd	client/cmdhf15.c	/^int CmdHF15Cmd(const char *Cmd)$/;"	f
CmdHF15CmdDebug	client/cmdhf15.c	/^int CmdHF15CmdDebug( const char *cmd) {$/;"	f
CmdHF15CmdHelp	client/cmdhf15.c	/^int CmdHF15CmdHelp(const char *Cmd)$/;"	f
CmdHF15CmdInquiry	client/cmdhf15.c	/^int CmdHF15CmdInquiry(const char *Cmd) $/;"	f
CmdHF15CmdRaw	client/cmdhf15.c	/^int CmdHF15CmdRaw (const char *cmd) {$/;"	f
CmdHF15CmdRead	client/cmdhf15.c	/^int CmdHF15CmdRead(const char *Cmd) {$/;"	f
CmdHF15CmdReadmulti	client/cmdhf15.c	/^int CmdHF15CmdReadmulti(const char *Cmd) {$/;"	f
CmdHF15CmdSysinfo	client/cmdhf15.c	/^int CmdHF15CmdSysinfo(const char *Cmd) {$/;"	f
CmdHF15CmdWrite	client/cmdhf15.c	/^int CmdHF15CmdWrite(const char *Cmd) {$/;"	f
CmdHF15Demod	client/cmdhf15.c	/^int CmdHF15Demod(const char *Cmd)$/;"	f
CmdHF15DumpMem	client/cmdhf15.c	/^int CmdHF15DumpMem(const char*Cmd) {$/;"	f
CmdHF15Help	client/cmdhf15.c	/^int CmdHF15Help(const char *Cmd)$/;"	f
CmdHF15Read	client/cmdhf15.c	/^int CmdHF15Read(const char *Cmd)$/;"	f
CmdHF15Reader	client/cmdhf15.c	/^int CmdHF15Reader(const char *Cmd)$/;"	f
CmdHF15Record	client/cmdhf15.c	/^int CmdHF15Record(const char *Cmd)$/;"	f
CmdHF15Sim	client/cmdhf15.c	/^int CmdHF15Sim(const char *Cmd)$/;"	f
CmdHFEPA	client/cmdhfepa.c	/^int CmdHFEPA(const char *Cmd)$/;"	f
CmdHFEPACollectPACENonces	client/cmdhfepa.c	/^int CmdHFEPACollectPACENonces(const char *Cmd)$/;"	f
CmdHFLegic	client/cmdhflegic.c	/^int CmdHFLegic(const char *Cmd)$/;"	f
CmdHFList	client/cmdhf.c	/^int CmdHFList(const char *Cmd)$/;"	f
CmdHFMF	client/cmdhfmf.c	/^int CmdHFMF(const char *Cmd)$/;"	f
CmdHFMFUltra	client/cmdhfmfu.c	/^int CmdHFMFUltra(const char *Cmd){$/;"	f
CmdHFSimlisten	client/cmdhf14b.c	/^int CmdHFSimlisten(const char *Cmd)$/;"	f
CmdHFTune	client/cmdhf.c	/^int CmdHFTune(const char *Cmd)$/;"	f
CmdHFiClass	client/cmdhficlass.c	/^int CmdHFiClass(const char *Cmd)$/;"	f
CmdHFiClassList	client/cmdhficlass.c	/^int CmdHFiClassList(const char *Cmd)$/;"	f
CmdHFiClassReader	client/cmdhficlass.c	/^int CmdHFiClassReader(const char *Cmd)$/;"	f
CmdHFiClassReader_Dump	client/cmdhficlass.c	/^int CmdHFiClassReader_Dump(const char *Cmd)$/;"	f
CmdHFiClassReader_Replay	client/cmdhficlass.c	/^int CmdHFiClassReader_Replay(const char *Cmd)$/;"	f
CmdHFiClassSim	client/cmdhficlass.c	/^int CmdHFiClassSim(const char *Cmd)$/;"	f
CmdHFiClassSnoop	client/cmdhficlass.c	/^int CmdHFiClassSnoop(const char *Cmd)$/;"	f
CmdHFiClass_iso14443A_write	client/cmdhficlass.c	/^int CmdHFiClass_iso14443A_write(const char *Cmd)$/;"	f
CmdHFiClass_loclass	client/cmdhficlass.c	/^int CmdHFiClass_loclass(const char *Cmd)$/;"	f
CmdHIDClone	client/cmdlfhid.c	/^int CmdHIDClone(const char *Cmd)$/;"	f
CmdHIDDemod	client/cmdlfhid.c	/^int CmdHIDDemod(const char *Cmd)$/;"	f
CmdHIDDemodFSK	client/cmdlfhid.c	/^int CmdHIDDemodFSK(const char *Cmd)$/;"	f
CmdHIDSim	client/cmdlfhid.c	/^int CmdHIDSim(const char *Cmd)$/;"	f
CmdHIDdemodFSK	armsrc/lfops.c	/^void CmdHIDdemodFSK(int findone, int *high, int *low, int ledcontrol)$/;"	f
CmdHIDsimTAG	armsrc/lfops.c	/^void CmdHIDsimTAG(int hi, int lo, int ledcontrol)$/;"	f
CmdHW	client/cmdhw.c	/^int CmdHW(const char *Cmd)$/;"	f
CmdHelp	client/cmddata.c	/^int CmdHelp(const char *Cmd)$/;"	f
CmdHelp	client/cmdhf.c	/^int CmdHelp(const char *Cmd)$/;"	f
CmdHelp	client/cmdhf14a.c	/^int CmdHelp(const char *Cmd)$/;"	f
CmdHelp	client/cmdhf14b.c	/^int CmdHelp(const char *Cmd)$/;"	f
CmdHelp	client/cmdhfepa.c	/^int CmdHelp(const char *Cmd)$/;"	f
CmdHelp	client/cmdhficlass.c	/^int CmdHelp(const char *Cmd)$/;"	f
CmdHelp	client/cmdhflegic.c	/^int CmdHelp(const char *Cmd)$/;"	f
CmdHelp	client/cmdhfmf.c	/^int CmdHelp(const char *Cmd)$/;"	f
CmdHelp	client/cmdhfmfu.c	/^int CmdHelp(const char *Cmd){$/;"	f
CmdHelp	client/cmdhw.c	/^int CmdHelp(const char *Cmd)$/;"	f
CmdHelp	client/cmdlf.c	/^int CmdHelp(const char *Cmd)$/;"	f
CmdHelp	client/cmdlfem4x.c	/^int CmdHelp(const char *Cmd)$/;"	f
CmdHelp	client/cmdlfhid.c	/^int CmdHelp(const char *Cmd)$/;"	f
CmdHelp	client/cmdlfhitag.c	/^int CmdHelp(const char *Cmd)$/;"	f
CmdHelp	client/cmdlfio.c	/^int CmdHelp(const char *Cmd)$/;"	f
CmdHelp	client/cmdlfpcf7931.c	/^int CmdHelp(const char *Cmd)$/;"	f
CmdHelp	client/cmdlft55xx.c	/^int CmdHelp(const char *Cmd)$/;"	f
CmdHelp	client/cmdlfti.c	/^int CmdHelp(const char *Cmd)$/;"	f
CmdHelp	client/cmdmain.c	/^int CmdHelp(const char *Cmd)$/;"	f
CmdHelp	client/cmdscript.c	/^int CmdHelp(const char * Cmd)$/;"	f
CmdHexsamples	client/cmddata.c	/^int CmdHexsamples(const char *Cmd)$/;"	f
CmdHide	client/cmddata.c	/^int CmdHide(const char *Cmd)$/;"	f
CmdHpf	client/cmddata.c	/^int CmdHpf(const char *Cmd)$/;"	f
CmdIOClone	client/cmdlfio.c	/^int CmdIOClone(const char *Cmd)$/;"	f
CmdIODemodFSK	client/cmdlfio.c	/^int CmdIODemodFSK(const char *Cmd)$/;"	f
CmdIOProxDemod	client/cmdlfio.c	/^int CmdIOProxDemod(const char *Cmd){$/;"	f
CmdIOdemodFSK	armsrc/lfops.c	/^void CmdIOdemodFSK(int findone, int *high, int *low, int ledcontrol)$/;"	f
CmdIndalaClone	client/cmdlf.c	/^int CmdIndalaClone(const char *Cmd)$/;"	f
CmdIndalaDecode	client/cmddata.c	/^int CmdIndalaDecode(const char *Cmd)$/;"	f
CmdIndalaDemod	client/cmdlf.c	/^int CmdIndalaDemod(const char *Cmd)$/;"	f
CmdLCD	client/cmdhw.c	/^int CmdLCD(const char *Cmd)$/;"	f
CmdLCDReset	client/cmdhw.c	/^int CmdLCDReset(const char *Cmd)$/;"	f
CmdLF	client/cmdlf.c	/^int CmdLF(const char *Cmd)$/;"	f
CmdLFCommandRead	client/cmdlf.c	/^int CmdLFCommandRead(const char *Cmd)$/;"	f
CmdLFEM4X	client/cmdlfem4x.c	/^int CmdLFEM4X(const char *Cmd)$/;"	f
CmdLFHID	client/cmdlfhid.c	/^int CmdLFHID(const char *Cmd)$/;"	f
CmdLFHitag	client/cmdlfhitag.c	/^int CmdLFHitag(const char *Cmd)$/;"	f
CmdLFHitagList	client/cmdlfhitag.c	/^int CmdLFHitagList(const char *Cmd)$/;"	f
CmdLFHitagReader	client/cmdlfhitag.c	/^int CmdLFHitagReader(const char *Cmd) {$/;"	f
CmdLFHitagSim	client/cmdlfhitag.c	/^int CmdLFHitagSim(const char *Cmd) {$/;"	f
CmdLFHitagSnoop	client/cmdlfhitag.c	/^int CmdLFHitagSnoop(const char *Cmd) {$/;"	f
CmdLFIO	client/cmdlfio.c	/^int CmdLFIO(const char *Cmd)$/;"	f
CmdLFPCF7931	client/cmdlfpcf7931.c	/^int CmdLFPCF7931(const char *Cmd)$/;"	f
CmdLFPCF7931Read	client/cmdlfpcf7931.c	/^int CmdLFPCF7931Read(const char *Cmd)$/;"	f
CmdLFRead	client/cmdlf.c	/^int CmdLFRead(const char *Cmd)$/;"	f
CmdLFSetConfig	client/cmdlf.c	/^int CmdLFSetConfig(const char *Cmd)$/;"	f
CmdLFSim	client/cmdlf.c	/^int CmdLFSim(const char *Cmd)$/;"	f
CmdLFSimBidir	client/cmdlf.c	/^int CmdLFSimBidir(const char *Cmd)$/;"	f
CmdLFSimManchester	client/cmdlf.c	/^int CmdLFSimManchester(const char *Cmd)$/;"	f
CmdLFSnoop	client/cmdlf.c	/^int CmdLFSnoop(const char *Cmd)$/;"	f
CmdLFT55XX	client/cmdlft55xx.c	/^int CmdLFT55XX(const char *Cmd)$/;"	f
CmdLFTI	client/cmdlfti.c	/^int CmdLFTI(const char *Cmd)$/;"	f
CmdLFfind	client/cmdlf.c	/^int CmdLFfind(const char *Cmd)$/;"	f
CmdLegicDecode	client/cmdhflegic.c	/^int CmdLegicDecode(const char *Cmd)$/;"	f
CmdLegicLoad	client/cmdhflegic.c	/^int CmdLegicLoad(const char *Cmd)$/;"	f
CmdLegicRFRead	client/cmdhflegic.c	/^int CmdLegicRFRead(const char *Cmd)$/;"	f
CmdLegicRfFill	client/cmdhflegic.c	/^int CmdLegicRfFill(const char *Cmd)$/;"	f
CmdLegicRfSim	client/cmdhflegic.c	/^int CmdLegicRfSim(const char *Cmd)$/;"	f
CmdLegicRfWrite	client/cmdhflegic.c	/^int CmdLegicRfWrite(const char *Cmd)$/;"	f
CmdLegicSave	client/cmdhflegic.c	/^int CmdLegicSave(const char *Cmd)$/;"	f
CmdList	client/cmdscript.c	/^int CmdList(const char *Cmd)$/;"	f
CmdLoad	client/cmddata.c	/^int CmdLoad(const char *Cmd)$/;"	f
CmdLtrim	client/cmddata.c	/^int CmdLtrim(const char *Cmd)$/;"	f
CmdManchesterDemod	client/cmddata.c	/^int CmdManchesterDemod(const char *Cmd)$/;"	f
CmdManchesterMod	client/cmddata.c	/^int CmdManchesterMod(const char *Cmd)$/;"	f
CmdNRZrawDemod	client/cmddata.c	/^int CmdNRZrawDemod(const char *Cmd)$/;"	f
CmdNorm	client/cmddata.c	/^int CmdNorm(const char *Cmd)$/;"	f
CmdPSK1rawDemod	client/cmddata.c	/^int CmdPSK1rawDemod(const char *Cmd)$/;"	f
CmdPSK2rawDemod	client/cmddata.c	/^int CmdPSK2rawDemod(const char *Cmd)$/;"	f
CmdPlot	client/cmddata.c	/^int CmdPlot(const char *Cmd)$/;"	f
CmdQuit	client/cmdmain.c	/^int CmdQuit(const char *Cmd)$/;"	f
CmdReadBlk	client/cmdlft55xx.c	/^int CmdReadBlk(const char *Cmd)$/;"	f
CmdReadBlkPWD	client/cmdlft55xx.c	/^int CmdReadBlkPWD(const char *Cmd)$/;"	f
CmdReadTrace	client/cmdlft55xx.c	/^int CmdReadTrace(const char *Cmd)$/;"	f
CmdReadWord	client/cmdlfem4x.c	/^int CmdReadWord(const char *Cmd)$/;"	f
CmdReadWordPWD	client/cmdlfem4x.c	/^int CmdReadWordPWD(const char *Cmd)$/;"	f
CmdReadmem	client/cmdhw.c	/^int CmdReadmem(const char *Cmd)$/;"	f
CmdReset	client/cmdhw.c	/^int CmdReset(const char *Cmd)$/;"	f
CmdRtrim	client/cmddata.c	/^int CmdRtrim(const char *Cmd)$/;"	f
CmdRun	client/cmdscript.c	/^int CmdRun(const char *Cmd)$/;"	f
CmdSamples	client/cmddata.c	/^int CmdSamples(const char *Cmd)$/;"	f
CmdSave	client/cmddata.c	/^int CmdSave(const char *Cmd)$/;"	f
CmdScale	client/cmddata.c	/^int CmdScale(const char *Cmd)$/;"	f
CmdScript	client/cmdscript.c	/^int CmdScript(const char *Cmd)$/;"	f
CmdSetDebugMode	client/cmddata.c	/^int CmdSetDebugMode(const char *Cmd)$/;"	f
CmdSetDivisor	client/cmdhw.c	/^int CmdSetDivisor(const char *Cmd)$/;"	f
CmdSetMux	client/cmdhw.c	/^int CmdSetMux(const char *Cmd)$/;"	f
CmdSri512Read	client/cmdhf14b.c	/^int CmdSri512Read(const char *Cmd)$/;"	f
CmdSrix4kRead	client/cmdhf14b.c	/^int CmdSrix4kRead(const char *Cmd)$/;"	f
CmdTIDemod	client/cmdlfti.c	/^int CmdTIDemod(const char *Cmd)$/;"	f
CmdTIRead	client/cmdlfti.c	/^int CmdTIRead(const char *Cmd)$/;"	f
CmdTIWrite	client/cmdlfti.c	/^int CmdTIWrite(const char *Cmd)$/;"	f
CmdThreshold	client/cmddata.c	/^int CmdThreshold(const char *Cmd)$/;"	f
CmdTune	client/cmdhw.c	/^int CmdTune(const char *Cmd)$/;"	f
CmdTuneSamples	client/cmddata.c	/^int CmdTuneSamples(const char *Cmd)$/;"	f
CmdUndec	client/cmddata.c	/^int CmdUndec(const char *Cmd)$/;"	f
CmdVchDemod	client/cmdlf.c	/^int CmdVchDemod(const char *Cmd)$/;"	f
CmdVersion	client/cmdhw.c	/^int CmdVersion(const char *Cmd)$/;"	f
CmdWriteBlk	client/cmdlft55xx.c	/^int CmdWriteBlk(const char *Cmd)$/;"	f
CmdWriteBlkPWD	client/cmdlft55xx.c	/^int CmdWriteBlkPWD(const char *Cmd)$/;"	f
CmdWriteWord	client/cmdlfem4x.c	/^int CmdWriteWord(const char *Cmd)$/;"	f
CmdWriteWordPWD	client/cmdlfem4x.c	/^int CmdWriteWordPWD(const char *Cmd)$/;"	f
CmdZerocrossings	client/cmddata.c	/^int CmdZerocrossings(const char *Cmd)$/;"	f
Cmdaskdemod	client/cmddata.c	/^int Cmdaskdemod(const char *Cmd)$/;"	f
Cmdaskmandemod	client/cmddata.c	/^int Cmdaskmandemod(const char *Cmd)$/;"	f
Cmdaskrawdemod	client/cmddata.c	/^int Cmdaskrawdemod(const char *Cmd)$/;"	f
Cmdmandecoderaw	client/cmddata.c	/^int Cmdmandecoderaw(const char *Cmd)$/;"	f
CmdsHelp	client/cmdparser.c	/^void CmdsHelp(const command_t Commands[])$/;"	f
CmdsParse	client/cmdparser.c	/^void CmdsParse(const command_t Commands[], const char *Cmd)$/;"	f
Code4bitAnswerAsTag	armsrc/iso14443a.c	/^static void Code4bitAnswerAsTag(uint8_t cmd)$/;"	f	file:
CodeAndTransmit14443bAsReader	armsrc/iso14443.c	/^static void CodeAndTransmit14443bAsReader(const uint8_t *cmd, int len)$/;"	f	file:
CodeIClassCommand	armsrc/iclass.c	/^void CodeIClassCommand(const uint8_t * cmd, int len)$/;"	f
CodeIClassTagAnswer	armsrc/iclass.c	/^static void CodeIClassTagAnswer(const uint8_t *cmd, int len)$/;"	f	file:
CodeIClassTagSOF	armsrc/iclass.c	/^static void CodeIClassTagSOF()$/;"	f	file:
CodeIso14443aAsReaderPar	armsrc/iso14443a.c	/^void CodeIso14443aAsReaderPar(const uint8_t *cmd, uint16_t len, const uint8_t *parity)$/;"	f
CodeIso14443aAsTag	armsrc/iso14443a.c	/^static void CodeIso14443aAsTag(const uint8_t *cmd, uint16_t len)$/;"	f	file:
CodeIso14443aAsTagPar	armsrc/iso14443a.c	/^static void CodeIso14443aAsTagPar(const uint8_t *cmd, uint16_t len, uint8_t *parity)$/;"	f	file:
CodeIso14443aBitsAsReaderPar	armsrc/iso14443a.c	/^void CodeIso14443aBitsAsReaderPar(const uint8_t *cmd, uint16_t bits, const uint8_t *parity)$/;"	f
CodeIso14443bAsReader	armsrc/iso14443.c	/^static void CodeIso14443bAsReader(const uint8_t *cmd, int len)$/;"	f	file:
CodeIso14443bAsTag	armsrc/iso14443.c	/^static void CodeIso14443bAsTag(const uint8_t *cmd, int len)$/;"	f	file:
CodeIso15693AsReader	armsrc/iso15693.c	/^static void CodeIso15693AsReader(uint8_t *cmd, int n)$/;"	f	file:
CodeIso15693AsReader256	armsrc/iso15693.c	/^static void CodeIso15693AsReader256(uint8_t *cmd, int n)$/;"	f	file:
Command:__tostring	client/lualibs/commands.lua	/^function Command:__tostring()$/;"	f
Command:getBytes	client/lualibs/commands.lua	/^function Command:getBytes()$/;"	f
CommandReceived	client/cmdmain.c	/^void CommandReceived(char *Cmd) {$/;"	f
CommandTable	client/cmddata.c	/^static command_t CommandTable[] =$/;"	v	file:
CommandTable	client/cmdhf.c	/^static command_t CommandTable[] = $/;"	v	file:
CommandTable	client/cmdhf14a.c	/^static command_t CommandTable[] = $/;"	v	file:
CommandTable	client/cmdhf14b.c	/^static command_t CommandTable[] = $/;"	v	file:
CommandTable	client/cmdhfepa.c	/^static const command_t CommandTable[] = $/;"	v	file:
CommandTable	client/cmdhficlass.c	/^static command_t CommandTable[] = $/;"	v	file:
CommandTable	client/cmdhflegic.c	/^static command_t CommandTable[] = $/;"	v	file:
CommandTable	client/cmdhfmf.c	/^static command_t CommandTable[] =$/;"	v	file:
CommandTable	client/cmdhfmfu.c	/^static command_t CommandTable[] =$/;"	v	file:
CommandTable	client/cmdhw.c	/^static command_t CommandTable[] = $/;"	v	file:
CommandTable	client/cmdlf.c	/^static command_t CommandTable[] = $/;"	v	file:
CommandTable	client/cmdlfem4x.c	/^static command_t CommandTable[] =$/;"	v	file:
CommandTable	client/cmdlfhid.c	/^static command_t CommandTable[] = $/;"	v	file:
CommandTable	client/cmdlfhitag.c	/^static command_t CommandTable[] = $/;"	v	file:
CommandTable	client/cmdlfio.c	/^static command_t CommandTable[] = $/;"	v	file:
CommandTable	client/cmdlfpcf7931.c	/^static command_t CommandTable[] = $/;"	v	file:
CommandTable	client/cmdlft55xx.c	/^static command_t CommandTable[] =$/;"	v	file:
CommandTable	client/cmdlfti.c	/^static command_t CommandTable[] = $/;"	v	file:
CommandTable	client/cmdmain.c	/^static command_t CommandTable[] = $/;"	v	file:
CommandTable	client/cmdscript.c	/^command_t CommandTable[] =$/;"	v
CommandTable15	client/cmdhf15.c	/^static command_t CommandTable15[] = $/;"	v	file:
CommandTable15Cmd	client/cmdhf15.c	/^static command_t CommandTable15Cmd[] =$/;"	v	file:
CommonHeader	liblua/lobject.h	/^    CommonHeader;$/;"	m	struct:TString::__anon68
CommonHeader	liblua/lobject.h	/^    CommonHeader;$/;"	m	struct:Udata::__anon69
CommonHeader	liblua/lobject.h	/^  CommonHeader;$/;"	m	struct:GCheader
CommonHeader	liblua/lobject.h	/^  CommonHeader;$/;"	m	struct:Proto
CommonHeader	liblua/lobject.h	/^  CommonHeader;$/;"	m	struct:Table
CommonHeader	liblua/lobject.h	/^  CommonHeader;$/;"	m	struct:UpVal
CommonHeader	liblua/lobject.h	/^#define CommonHeader	/;"	d
CommonHeader	liblua/lstate.h	/^  CommonHeader;$/;"	m	struct:lua_State
Compare16Bits	client/mifarehost.c	/^int Compare16Bits(const void * a, const void * b) {$/;"	f
ComputeCrc14443	common/iso14443crc.c	/^void ComputeCrc14443(int CrcType,$/;"	f
ConfigClocks	bootrom/bootrom.c	/^static void ConfigClocks(void)$/;"	f	file:
ConsControl	liblua/lparser.c	/^struct ConsControl {$/;"	s	file:
ConvertAsciiToBytes 	client/lualibs/utils.lua	/^	ConvertAsciiToBytes = function(s)$/;"	f
ConvertBytesToAscii 	client/lualibs/utils.lua	/^    ConvertBytesToAscii = function(bytes)$/;"	f
ConvertBytesToHex 	client/lualibs/utils.lua	/^	ConvertBytesToHex = function(bytes)$/;"	f
ConvertDecToHex 	client/lualibs/utils.lua	/^    ConvertDecToHex = function(IN)$/;"	f
ConvertHexToAscii 	client/lualibs/utils.lua	/^	ConvertHexToAscii = function(s)$/;"	f
ConvertHexToBytes 	client/lualibs/utils.lua	/^	ConvertHexToBytes = function(s)$/;"	f
CopyHIDtoT55x7	armsrc/lfops.c	/^void CopyHIDtoT55x7(uint32_t hi2, uint32_t hi, uint32_t lo, uint8_t longFMT)$/;"	f
CopyIOtoT55x7	armsrc/lfops.c	/^void CopyIOtoT55x7(uint32_t hi, uint32_t lo, uint8_t longFMT)$/;"	f
CopyIndala224toT55x7	armsrc/lfops.c	/^void CopyIndala224toT55x7(int uid1, int uid2, int uid3, int uid4, int uid5, int uid6, int uid7)$/;"	f
CopyIndala64toT55x7	armsrc/lfops.c	/^void CopyIndala64toT55x7(int hi, int lo)$/;"	f
Crc	armsrc/iso15693.c	/^#define Crc(/;"	d	file:
Crc	client/cmdhf15.c	/^#define Crc(/;"	d	file:
Crc16 	client/lualibs/utils.lua	/^	Crc16 = function(s)$/;"	f
Crypto1State	armsrc/crapto1.h	/^struct Crypto1State {uint32_t odd, even;};$/;"	s
Crypto1State	client/nonce2key/crapto1.h	/^struct Crypto1State {uint32_t odd, even;};$/;"	s
Crypto1State	tools/mfkey/crapto1.h	/^struct Crypto1State {uint32_t odd, even;};$/;"	s
Crypto1State	tools/nonce2key/crapto1.h	/^struct Crypto1State {uint32_t odd, even;};$/;"	s
CursorAPos	client/proxguiqt.h	/^		int CursorAPos;$/;"	m	class:ProxWidget
CursorBPos	client/proxguiqt.h	/^		int CursorBPos;$/;"	m	class:ProxWidget
CursorScaleFactor	client/ui.c	/^double CursorScaleFactor;$/;"	v
DATA_H__	client/data.h	/^#define DATA_H__$/;"	d
DBD15STATLEN	armsrc/iso15693.c	/^#define DBD15STATLEN /;"	d	file:
DBGU_BRGR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_BRGR; 	\/\/ Baud Rate Generator Register$/;"	m	struct:_AT91S_DBGU
DBGU_BRGR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_BRGR; 	\/\/ Baud Rate Generator Register$/;"	m	struct:_AT91S_SYS
DBGU_BRGR	include/at91sam7s512.h	/^#define DBGU_BRGR /;"	d
DBGU_CIDR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_CIDR; 	\/\/ Chip ID Register$/;"	m	struct:_AT91S_DBGU
DBGU_CIDR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_CIDR; 	\/\/ Chip ID Register$/;"	m	struct:_AT91S_SYS
DBGU_CR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_CR; 	\/\/ Control Register$/;"	m	struct:_AT91S_DBGU
DBGU_CR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_CR; 	\/\/ Control Register$/;"	m	struct:_AT91S_SYS
DBGU_CR	include/at91sam7s512.h	/^#define DBGU_CR /;"	d
DBGU_CSR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_CSR; 	\/\/ Channel Status Register$/;"	m	struct:_AT91S_DBGU
DBGU_CSR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_CSR; 	\/\/ Channel Status Register$/;"	m	struct:_AT91S_SYS
DBGU_CSR	include/at91sam7s512.h	/^#define DBGU_CSR /;"	d
DBGU_EXID	include/at91sam7s512.h	/^	AT91_REG	 DBGU_EXID; 	\/\/ Chip ID Extension Register$/;"	m	struct:_AT91S_DBGU
DBGU_EXID	include/at91sam7s512.h	/^	AT91_REG	 DBGU_EXID; 	\/\/ Chip ID Extension Register$/;"	m	struct:_AT91S_SYS
DBGU_EXID	include/at91sam7s512.h	/^#define DBGU_EXID /;"	d
DBGU_FNTR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_FNTR; 	\/\/ Force NTRST Register$/;"	m	struct:_AT91S_DBGU
DBGU_FNTR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_FNTR; 	\/\/ Force NTRST Register$/;"	m	struct:_AT91S_SYS
DBGU_FNTR	include/at91sam7s512.h	/^#define DBGU_FNTR /;"	d
DBGU_IDR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_IDR; 	\/\/ Interrupt Disable Register$/;"	m	struct:_AT91S_DBGU
DBGU_IDR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_IDR; 	\/\/ Interrupt Disable Register$/;"	m	struct:_AT91S_SYS
DBGU_IDR	include/at91sam7s512.h	/^#define DBGU_IDR /;"	d
DBGU_IER	include/at91sam7s512.h	/^	AT91_REG	 DBGU_IER; 	\/\/ Interrupt Enable Register$/;"	m	struct:_AT91S_DBGU
DBGU_IER	include/at91sam7s512.h	/^	AT91_REG	 DBGU_IER; 	\/\/ Interrupt Enable Register$/;"	m	struct:_AT91S_SYS
DBGU_IER	include/at91sam7s512.h	/^#define DBGU_IER /;"	d
DBGU_IMR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_IMR; 	\/\/ Interrupt Mask Register$/;"	m	struct:_AT91S_DBGU
DBGU_IMR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_IMR; 	\/\/ Interrupt Mask Register$/;"	m	struct:_AT91S_SYS
DBGU_IMR	include/at91sam7s512.h	/^#define DBGU_IMR /;"	d
DBGU_MR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_MR; 	\/\/ Mode Register$/;"	m	struct:_AT91S_DBGU
DBGU_MR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_MR; 	\/\/ Mode Register$/;"	m	struct:_AT91S_SYS
DBGU_MR	include/at91sam7s512.h	/^#define DBGU_MR /;"	d
DBGU_PTCR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_PTCR; 	\/\/ PDC Transfer Control Register$/;"	m	struct:_AT91S_DBGU
DBGU_PTCR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_PTCR; 	\/\/ PDC Transfer Control Register$/;"	m	struct:_AT91S_SYS
DBGU_PTSR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_PTSR; 	\/\/ PDC Transfer Status Register$/;"	m	struct:_AT91S_DBGU
DBGU_PTSR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_PTSR; 	\/\/ PDC Transfer Status Register$/;"	m	struct:_AT91S_SYS
DBGU_RCR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_RCR; 	\/\/ Receive Counter Register$/;"	m	struct:_AT91S_DBGU
DBGU_RCR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_RCR; 	\/\/ Receive Counter Register$/;"	m	struct:_AT91S_SYS
DBGU_RHR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_RHR; 	\/\/ Receiver Holding Register$/;"	m	struct:_AT91S_DBGU
DBGU_RHR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_RHR; 	\/\/ Receiver Holding Register$/;"	m	struct:_AT91S_SYS
DBGU_RHR	include/at91sam7s512.h	/^#define DBGU_RHR /;"	d
DBGU_RNCR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_RNCR; 	\/\/ Receive Next Counter Register$/;"	m	struct:_AT91S_DBGU
DBGU_RNCR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_RNCR; 	\/\/ Receive Next Counter Register$/;"	m	struct:_AT91S_SYS
DBGU_RNPR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_RNPR; 	\/\/ Receive Next Pointer Register$/;"	m	struct:_AT91S_DBGU
DBGU_RNPR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_RNPR; 	\/\/ Receive Next Pointer Register$/;"	m	struct:_AT91S_SYS
DBGU_RPR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_RPR; 	\/\/ Receive Pointer Register$/;"	m	struct:_AT91S_DBGU
DBGU_RPR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_RPR; 	\/\/ Receive Pointer Register$/;"	m	struct:_AT91S_SYS
DBGU_TCR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_TCR; 	\/\/ Transmit Counter Register$/;"	m	struct:_AT91S_DBGU
DBGU_TCR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_TCR; 	\/\/ Transmit Counter Register$/;"	m	struct:_AT91S_SYS
DBGU_THR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_THR; 	\/\/ Transmitter Holding Register$/;"	m	struct:_AT91S_DBGU
DBGU_THR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_THR; 	\/\/ Transmitter Holding Register$/;"	m	struct:_AT91S_SYS
DBGU_THR	include/at91sam7s512.h	/^#define DBGU_THR /;"	d
DBGU_TNCR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_TNCR; 	\/\/ Transmit Next Counter Register$/;"	m	struct:_AT91S_DBGU
DBGU_TNCR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_TNCR; 	\/\/ Transmit Next Counter Register$/;"	m	struct:_AT91S_SYS
DBGU_TNPR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_TNPR; 	\/\/ Transmit Next Pointer Register$/;"	m	struct:_AT91S_DBGU
DBGU_TNPR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_TNPR; 	\/\/ Transmit Next Pointer Register$/;"	m	struct:_AT91S_SYS
DBGU_TPR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_TPR; 	\/\/ Transmit Pointer Register$/;"	m	struct:_AT91S_DBGU
DBGU_TPR	include/at91sam7s512.h	/^	AT91_REG	 DBGU_TPR; 	\/\/ Transmit Pointer Register$/;"	m	struct:_AT91S_SYS
DEBUG	armsrc/iso15693.c	/^int DEBUG=0;$/;"	v
DEBUG_FRAME_CONTENTS	armsrc/lfops.c	/^#define DEBUG_FRAME_CONTENTS /;"	d	file:
DELAY_AIR2ARM_AS_READER	armsrc/iso14443a.c	/^#define DELAY_AIR2ARM_AS_READER /;"	d	file:
DELAY_AIR2ARM_AS_TAG	armsrc/iso14443a.c	/^#define DELAY_AIR2ARM_AS_TAG /;"	d	file:
DELAY_ARM2AIR_AS_READER	armsrc/iso14443a.c	/^#define DELAY_ARM2AIR_AS_READER /;"	d	file:
DELAY_ARM2AIR_AS_TAG	armsrc/iso14443a.c	/^#define DELAY_ARM2AIR_AS_TAG /;"	d	file:
DELAY_FPGA_QUEUE	armsrc/iso14443a.c	/^#define DELAY_FPGA_QUEUE /;"	d	file:
DELAY_READER_AIR2ARM_AS_SNIFFER	armsrc/iso14443a.c	/^#define DELAY_READER_AIR2ARM_AS_SNIFFER /;"	d	file:
DELAY_TAG_AIR2ARM_AS_SNIFFER	armsrc/iso14443a.c	/^#define DELAY_TAG_AIR2ARM_AS_SNIFFER /;"	d	file:
DEMOD_AWAITING_FALLING_EDGE_OF_SOF	armsrc/iso14443.c	/^		DEMOD_AWAITING_FALLING_EDGE_OF_SOF,$/;"	e	enum:__anon15::__anon16	file:
DEMOD_AWAITING_START_BIT	armsrc/iso14443.c	/^		DEMOD_AWAITING_START_BIT,$/;"	e	enum:__anon15::__anon16	file:
DEMOD_END_OF_COMMUNICATION	armsrc/iclass.c	/^		DEMOD_END_OF_COMMUNICATION,$/;"	e	enum:__anon10::__anon11	file:
DEMOD_END_OF_COMMUNICATION2	armsrc/iclass.c	/^		DEMOD_END_OF_COMMUNICATION2,$/;"	e	enum:__anon10::__anon11	file:
DEMOD_ERROR_WAIT	armsrc/iclass.c	/^        DEMOD_ERROR_WAIT$/;"	e	enum:__anon10::__anon11	file:
DEMOD_ERROR_WAIT	armsrc/iso14443.c	/^		DEMOD_ERROR_WAIT$/;"	e	enum:__anon15::__anon16	file:
DEMOD_GOT_FALLING_EDGE_OF_SOF	armsrc/iso14443.c	/^		DEMOD_GOT_FALLING_EDGE_OF_SOF,$/;"	e	enum:__anon15::__anon16	file:
DEMOD_MANCHESTER_D	armsrc/iclass.c	/^		DEMOD_MANCHESTER_D,$/;"	e	enum:__anon10::__anon11	file:
DEMOD_MANCHESTER_DATA	armsrc/iso14443a.h	/^		DEMOD_MANCHESTER_DATA$/;"	e	enum:__anon17::__anon18
DEMOD_MANCHESTER_E	armsrc/iclass.c	/^		DEMOD_MANCHESTER_E,$/;"	e	enum:__anon10::__anon11	file:
DEMOD_MANCHESTER_F	armsrc/iclass.c	/^		DEMOD_MANCHESTER_F,$/;"	e	enum:__anon10::__anon11	file:
DEMOD_PHASE_REF_TRAINING	armsrc/iso14443.c	/^		DEMOD_PHASE_REF_TRAINING,$/;"	e	enum:__anon15::__anon16	file:
DEMOD_RECEIVING_DATA	armsrc/iso14443.c	/^		DEMOD_RECEIVING_DATA,$/;"	e	enum:__anon15::__anon16	file:
DEMOD_SOF_COMPLETE	armsrc/iclass.c	/^		DEMOD_SOF_COMPLETE,$/;"	e	enum:__anon10::__anon11	file:
DEMOD_START_OF_COMMUNICATION	armsrc/iclass.c	/^		DEMOD_START_OF_COMMUNICATION,$/;"	e	enum:__anon10::__anon11	file:
DEMOD_START_OF_COMMUNICATION2	armsrc/iclass.c	/^		DEMOD_START_OF_COMMUNICATION2,$/;"	e	enum:__anon10::__anon11	file:
DEMOD_START_OF_COMMUNICATION3	armsrc/iclass.c	/^		DEMOD_START_OF_COMMUNICATION3,$/;"	e	enum:__anon10::__anon11	file:
DEMOD_UNSYNCD	armsrc/iclass.c	/^        DEMOD_UNSYNCD,$/;"	e	enum:__anon10::__anon11	file:
DEMOD_UNSYNCD	armsrc/iso14443.c	/^		DEMOD_UNSYNCD,$/;"	e	enum:__anon15::__anon16	file:
DEMOD_UNSYNCD	armsrc/iso14443a.h	/^		DEMOD_UNSYNCD,$/;"	e	enum:__anon17::__anon18
DES3_KS	armsrc/des.h	/^typedef unsigned long DES3_KS[48][2];  \/* Triple-DES key schedule *\/$/;"	t
DES_DECRYPT	client/loclass/des.h	/^#define DES_DECRYPT /;"	d
DES_ENCRYPT	client/loclass/des.h	/^#define DES_ENCRYPT /;"	d
DES_FP	client/loclass/des.c	/^#define DES_FP(/;"	d	file:
DES_H_	armsrc/des.h	/^#define DES_H_$/;"	d
DES_IP	client/loclass/des.c	/^#define DES_IP(/;"	d	file:
DES_KEY_SIZE	client/loclass/des.h	/^#define DES_KEY_SIZE /;"	d
DES_KS	armsrc/des.h	/^typedef unsigned long DES_KS[16][2];   \/* Single-key DES key schedule *\/$/;"	t
DES_ROUND	client/loclass/des.c	/^#define DES_ROUND(/;"	d	file:
DEVICE_INFO_FLAG_BOOTROM_PRESENT	client/hid-flasher/usb_cmd.h	/^#define DEVICE_INFO_FLAG_BOOTROM_PRESENT /;"	d
DEVICE_INFO_FLAG_BOOTROM_PRESENT	include/usb_cmd.h	/^#define DEVICE_INFO_FLAG_BOOTROM_PRESENT /;"	d
DEVICE_INFO_FLAG_CURRENT_MODE_BOOTROM	client/hid-flasher/usb_cmd.h	/^#define DEVICE_INFO_FLAG_CURRENT_MODE_BOOTROM /;"	d
DEVICE_INFO_FLAG_CURRENT_MODE_BOOTROM	include/usb_cmd.h	/^#define DEVICE_INFO_FLAG_CURRENT_MODE_BOOTROM /;"	d
DEVICE_INFO_FLAG_CURRENT_MODE_OS	client/hid-flasher/usb_cmd.h	/^#define DEVICE_INFO_FLAG_CURRENT_MODE_OS /;"	d
DEVICE_INFO_FLAG_CURRENT_MODE_OS	include/usb_cmd.h	/^#define DEVICE_INFO_FLAG_CURRENT_MODE_OS /;"	d
DEVICE_INFO_FLAG_OSIMAGE_PRESENT	client/hid-flasher/usb_cmd.h	/^#define DEVICE_INFO_FLAG_OSIMAGE_PRESENT /;"	d
DEVICE_INFO_FLAG_OSIMAGE_PRESENT	include/usb_cmd.h	/^#define DEVICE_INFO_FLAG_OSIMAGE_PRESENT /;"	d
DEVICE_INFO_FLAG_UNDERSTANDS_START_FLASH	client/hid-flasher/usb_cmd.h	/^#define DEVICE_INFO_FLAG_UNDERSTANDS_START_FLASH /;"	d
DEVICE_INFO_FLAG_UNDERSTANDS_START_FLASH	include/usb_cmd.h	/^#define DEVICE_INFO_FLAG_UNDERSTANDS_START_FLASH /;"	d
DF_PSE	armsrc/emvdataels.c	/^const uint8_t DF_PSE[]      =   {0x32, 0x50, 0x41, 0x59, 0x2E, 0x53, 0x59, 0x53, 0x2E, 0x44, 0x44, 0x46, 0x30, 0x31};$/;"	v
DIGITBIT	liblua/lctype.h	/^#define DIGITBIT	/;"	d
DLMSG	liblua/loadlib.c	/^#define DLMSG	/;"	d	file:
DMA_BUFFER_SIZE	armsrc/BigBuf.h	/^#define DMA_BUFFER_SIZE /;"	d
DYNAMIC_MODULATION_BUFFER_SIZE	armsrc/iso14443a.c	/^	#define DYNAMIC_MODULATION_BUFFER_SIZE /;"	d	file:
DYNAMIC_RESPONSE_BUFFER_SIZE	armsrc/iso14443a.c	/^	#define DYNAMIC_RESPONSE_BUFFER_SIZE /;"	d	file:
DbdecodeIso15693Answer	armsrc/iso15693.c	/^void DbdecodeIso15693Answer(int len, uint8_t *d) {$/;"	f
Dbhexdump	armsrc/appmain.c	/^void Dbhexdump(int len, uint8_t *d, bool bAsci) {$/;"	f
DbpString	armsrc/appmain.c	/^void DbpString(char *str)$/;"	f
DbpString	bootrom/bootrom.c	/^void DbpString(char *str) {$/;"	f
Dbprintf	armsrc/appmain.c	/^void Dbprintf(const char *fmt, ...) {$/;"	f
Demod	armsrc/iclass.c	/^} Demod;$/;"	v	typeref:struct:__anon10	file:
Demod	armsrc/iso14443.c	/^} Demod;$/;"	v	typeref:struct:__anon15	file:
Demod	armsrc/iso14443a.c	/^static tDemod Demod;$/;"	v	file:
DemodBuffer	client/cmddata.c	/^uint8_t DemodBuffer[MAX_DEMOD_BUF_LEN];$/;"	v
DemodBufferLen	client/cmddata.c	/^int DemodBufferLen;$/;"	v
DemodInit	armsrc/iso14443.c	/^static void DemodInit(uint8_t *data)$/;"	f	file:
DemodInit	armsrc/iso14443a.c	/^void DemodInit(uint8_t *data, uint8_t *parity)$/;"	f
DemodPCF7931	armsrc/lfops.c	/^int DemodPCF7931(uint8_t **outBlocks) {$/;"	f
DemodReset	armsrc/iso14443.c	/^static void DemodReset()$/;"	f	file:
DemodReset	armsrc/iso14443a.c	/^void DemodReset()$/;"	f
DetectASKClock	common/lfdemod.c	/^int DetectASKClock(uint8_t dest[], size_t size, int *clock, int maxErr)$/;"	f
DetectCleanAskWave	common/lfdemod.c	/^uint8_t DetectCleanAskWave(uint8_t dest[], size_t size, int high, int low)$/;"	f
DetectHighLowInGraph	client/graph.c	/^void DetectHighLowInGraph(int *high, int *low, bool addFuzz) {$/;"	f
DetectNRZClock	common/lfdemod.c	/^int DetectNRZClock(uint8_t dest[], size_t size, int clock)$/;"	f
DetectPSKClock	common/lfdemod.c	/^int DetectPSKClock(uint8_t dest[], size_t size, int clock)$/;"	f
DirectTag15693Command	armsrc/iso15693.c	/^void DirectTag15693Command(uint32_t datalen,uint32_t speed, uint32_t recv, uint8_t data[]) {$/;"	f
Dk	armsrc/aes.h	/^ unsigned int Dk[60];$/;"	m	struct:__anon1
DoAcquisition	armsrc/lfsampling.c	/^uint32_t DoAcquisition(uint8_t decimation, uint32_t bits_per_sample, bool averaging, int trigger_threshold,bool silent)$/;"	f
DoAcquisition_config	armsrc/lfsampling.c	/^uint32_t DoAcquisition_config( bool silent)$/;"	f
DoAcquisition_default	armsrc/lfsampling.c	/^uint32_t DoAcquisition_default(int trigger_threshold, bool silent)$/;"	f
DownloadFPGA	armsrc/fpgaloader.c	/^static void DownloadFPGA(const char *FpgaImage, int FpgaImageLen, int bytereversal)$/;"	f	file:
DownloadFPGA_byte	armsrc/fpgaloader.c	/^static void DownloadFPGA_byte(unsigned char w)$/;"	f	file:
DumpBlock	liblua/ldump.c	/^static void DumpBlock(const void* b, size_t size, DumpState* D)$/;"	f	file:
DumpChar	liblua/ldump.c	/^static void DumpChar(int y, DumpState* D)$/;"	f	file:
DumpCode	liblua/ldump.c	/^#define DumpCode(/;"	d	file:
DumpConstants	liblua/ldump.c	/^static void DumpConstants(const Proto* f, DumpState* D)$/;"	f	file:
DumpDebug	liblua/ldump.c	/^static void DumpDebug(const Proto* f, DumpState* D)$/;"	f	file:
DumpFunction	liblua/ldump.c	/^static void DumpFunction(const Proto* f, DumpState* D)$/;"	f	file:
DumpHeader	liblua/ldump.c	/^static void DumpHeader(DumpState* D)$/;"	f	file:
DumpInt	liblua/ldump.c	/^static void DumpInt(int x, DumpState* D)$/;"	f	file:
DumpMem	liblua/ldump.c	/^#define DumpMem(/;"	d	file:
DumpNumber	liblua/ldump.c	/^static void DumpNumber(lua_Number x, DumpState* D)$/;"	f	file:
DumpState	liblua/ldump.c	/^} DumpState;$/;"	t	typeref:struct:__anon66	file:
DumpString	liblua/ldump.c	/^static void DumpString(const TString* s, DumpState* D)$/;"	f	file:
DumpUpvalues	liblua/ldump.c	/^static void DumpUpvalues(const Proto* f, DumpState* D)$/;"	f	file:
DumpVar	liblua/ldump.c	/^#define DumpVar(/;"	d	file:
DumpVector	liblua/ldump.c	/^static void DumpVector(const void* b, int n, size_t size, DumpState* D)$/;"	f	file:
Dyndata	liblua/lparser.h	/^typedef struct Dyndata {$/;"	s
Dyndata	liblua/lparser.h	/^} Dyndata;$/;"	t	typeref:struct:Dyndata
EASCSET	armsrc/LCD.h	/^#define EASCSET	/;"	d
EBC	armsrc/aes.h	/^#define EBC /;"	d
ECASET	armsrc/LCD.h	/^#define ECASET	/;"	d
ECOMSCN	armsrc/LCD.h	/^#define ECOMSCN	/;"	d
EDATCTL	armsrc/LCD.h	/^#define EDATCTL	/;"	d
EDISCTL	armsrc/LCD.h	/^#define EDISCTL	/;"	d
EDISINV	armsrc/LCD.h	/^#define EDISINV	/;"	d
EDISNOR	armsrc/LCD.h	/^#define EDISNOR	/;"	d
EDISOFF	armsrc/LCD.h	/^#define EDISOFF	/;"	d
EDISON	armsrc/LCD.h	/^#define EDISON	/;"	d
EEPCOUT	armsrc/LCD.h	/^#define EEPCOUT	/;"	d
EEPCTIN	armsrc/LCD.h	/^#define EEPCTIN	/;"	d
EEPMRD	armsrc/LCD.h	/^#define EEPMRD	/;"	d
EEPMWR	armsrc/LCD.h	/^#define EEPMWR	/;"	d
EEPSRRD1	armsrc/LCD.h	/^#define EEPSRRD1	/;"	d
EEPSRRD2	armsrc/LCD.h	/^#define EEPSRRD2	/;"	d
EFC_FCR	include/at91sam7s512.h	/^	AT91_REG	 EFC_FCR; 	\/\/ MC Flash Command Register$/;"	m	struct:_AT91S_EFC
EFC_FMR	include/at91sam7s512.h	/^	AT91_REG	 EFC_FMR; 	\/\/ MC Flash Mode Register$/;"	m	struct:_AT91S_EFC
EFC_FSR	include/at91sam7s512.h	/^	AT91_REG	 EFC_FSR; 	\/\/ MC Flash Status Register$/;"	m	struct:_AT91S_EFC
EFC_VR	include/at91sam7s512.h	/^	AT91_REG	 EFC_VR; 	\/\/ MC Flash Version Register$/;"	m	struct:_AT91S_EFC
EI_NIDENT	client/elf.h	/^#define EI_NIDENT /;"	d
EI_NIDENT	client/hid-flasher/elf.h	/^#define EI_NIDENT /;"	d
ELFCLASS32	client/elf.h	/^#define ELFCLASS32 /;"	d
ELFCLASS32	client/hid-flasher/elf.h	/^#define ELFCLASS32 /;"	d
ELFCLASS64	client/elf.h	/^#define ELFCLASS64 /;"	d
ELFCLASS64	client/hid-flasher/elf.h	/^#define ELFCLASS64 /;"	d
ELFDATA2LSB	client/elf.h	/^#define ELFDATA2LSB /;"	d
ELFDATA2LSB	client/hid-flasher/elf.h	/^#define ELFDATA2LSB /;"	d
ELFDATA2MSB	client/elf.h	/^#define ELFDATA2MSB /;"	d
ELFDATA2MSB	client/hid-flasher/elf.h	/^#define ELFDATA2MSB /;"	d
ELITE_CRACK_H	client/loclass/elite_crack.h	/^#define ELITE_CRACK_H$/;"	d
EM410X_HEADER	armsrc/lfops.c	/^#define EM410X_HEADER	/;"	d	file:
EM410X_ID_LENGTH	armsrc/lfops.c	/^#define EM410X_ID_LENGTH	/;"	d	file:
EM4xLogin	armsrc/lfops.c	/^void EM4xLogin(uint32_t Password) {$/;"	f
EM4xReadWord	armsrc/lfops.c	/^void EM4xReadWord(uint8_t Address, uint32_t Pwd, uint8_t PwdMode) {$/;"	f
EM4xWriteWord	armsrc/lfops.c	/^void EM4xWriteWord(uint32_t Data, uint8_t Address, uint32_t Pwd, uint8_t PwdMode) {$/;"	f
EML2MFD_TESTCASES	client/pm3_eml_mfd_test.py	/^    EML2MFD_TESTCASES = [$/;"	v	class:TestEmlMfd
EMVEMUL_ACK	armsrc/emvutil.h	/^#define EMVEMUL_ACK /;"	d
EMVEMUL_AUTH1	armsrc/emvutil.h	/^#define EMVEMUL_AUTH1 /;"	d
EMVEMUL_AUTH2	armsrc/emvutil.h	/^#define EMVEMUL_AUTH2 /;"	d
EMVEMUL_HALTED	armsrc/emvutil.h	/^#define EMVEMUL_HALTED /;"	d
EMVEMUL_IDLE	armsrc/emvutil.h	/^#define EMVEMUL_IDLE /;"	d
EMVEMUL_NOFIELD	armsrc/emvutil.h	/^#define EMVEMUL_NOFIELD /;"	d
EMVEMUL_SELECT1	armsrc/emvutil.h	/^#define EMVEMUL_SELECT1 /;"	d
EMVEMUL_SELECT2	armsrc/emvutil.h	/^#define EMVEMUL_SELECT2 /;"	d
EMVEMUL_SELECT3	armsrc/emvutil.h	/^#define EMVEMUL_SELECT3 /;"	d
EMVEMUL_WORK	armsrc/emvutil.h	/^#define EMVEMUL_WORK	/;"	d
EMVGenerateAC	armsrc/emvcmd.c	/^int EMVGenerateAC(uint8_t refcontrol, emvcard* inputcard)$/;"	f
EMVGetChallenge	armsrc/emvcmd.c	/^int EMVGetChallenge(emvcard* inputcard)$/;"	f
EMVGetProcessingOptions	armsrc/emvcmd.c	/^int EMVGetProcessingOptions(uint8_t *PDOL, uint8_t PDOLlen, emvcard* inputcard)$/;"	f
EMVReadRecord	armsrc/emvcmd.c	/^void EMVReadRecord(uint8_t arg0, uint8_t arg1,emvcard *currentcard)$/;"	f
EMVSelectAID	armsrc/emvcmd.c	/^void EMVSelectAID(uint8_t *AID, uint8_t AIDlen, emvcard* inputcard)$/;"	f
EMVTransaction	armsrc/emvcmd.c	/^void EMVTransaction()$/;"	f
EMV_DBGLEVEL	armsrc/emvutil.c	/^int EMV_DBGLEVEL = EMV_DBG_ALL;$/;"	v
EMV_DBG_ALL	armsrc/emvutil.h	/^#define EMV_DBG_ALL /;"	d
EMV_DBG_ERROR	armsrc/emvutil.h	/^#define EMV_DBG_ERROR /;"	d
EMV_DBG_EXTENDED	armsrc/emvutil.h	/^#define EMV_DBG_EXTENDED /;"	d
EMV_DBG_NONE	armsrc/emvutil.h	/^#define EMV_DBG_NONE /;"	d
EMV_MINFIELDV	armsrc/emvutil.h	/^#define EMV_MINFIELDV /;"	d
EMV_PaypassTransaction	armsrc/emvcmd.c	/^int EMV_PaypassTransaction()$/;"	f
EMV_TAG_LIST	armsrc/emvdataels.c	/^const tagdescription EMV_TAG_LIST[] = {$/;"	v
EMVgetUDOL	armsrc/emvcmd.c	/^void EMVgetUDOL()$/;"	f
EM_ARM	client/elf.h	/^#define EM_ARM /;"	d
EM_ARM	client/hid-flasher/elf.h	/^#define EM_ARM /;"	d
ENOP	armsrc/LCD.h	/^#define ENOP	/;"	d
EOFMARK	liblua/lua.c	/^#define EOFMARK	/;"	d	file:
EOSCOFF	armsrc/LCD.h	/^#define EOSCOFF	/;"	d
EOSCON	armsrc/LCD.h	/^#define EOSCON	/;"	d
EOZ	liblua/lzio.h	/^#define EOZ	/;"	d
EPASET	armsrc/LCD.h	/^#define EPASET	/;"	d
EPA_Finish	armsrc/epa.c	/^void EPA_Finish()$/;"	f
EPA_PACE_Collect_Nonce	armsrc/epa.c	/^void EPA_PACE_Collect_Nonce(UsbCommand *c)$/;"	f
EPA_PACE_Collect_Nonce_Abort	armsrc/epa.c	/^static void EPA_PACE_Collect_Nonce_Abort(uint8_t step, int func_return)$/;"	f	file:
EPA_PACE_Get_Nonce	armsrc/epa.c	/^int EPA_PACE_Get_Nonce(uint8_t requested_length, uint8_t *nonce)$/;"	f
EPA_PACE_MSE_Set_AT	armsrc/epa.c	/^int EPA_PACE_MSE_Set_AT(pace_version_info_t pace_version_info, uint8_t password)$/;"	f
EPA_Parse_CardAccess	armsrc/epa.c	/^size_t EPA_Parse_CardAccess(uint8_t *data,$/;"	f
EPA_Read_CardAccess	armsrc/epa.c	/^int EPA_Read_CardAccess(uint8_t *buffer, size_t max_length)$/;"	f
EPA_Setup	armsrc/epa.c	/^int EPA_Setup()$/;"	f
EPTLIN	armsrc/LCD.h	/^#define EPTLIN	/;"	d
EPTLOUT	armsrc/LCD.h	/^#define EPTLOUT	/;"	d
EPWRCTR	armsrc/LCD.h	/^#define EPWRCTR	/;"	d
ERAMRD	armsrc/LCD.h	/^#define ERAMRD	/;"	d
ERAMWR	armsrc/LCD.h	/^#define ERAMWR	/;"	d
ERGBSET8	armsrc/LCD.h	/^#define ERGBSET8	/;"	d
ERMWIN	armsrc/LCD.h	/^#define ERMWIN	/;"	d
ERMWOUT	armsrc/LCD.h	/^#define ERMWOUT	/;"	d
ERRFUNC	liblua/loadlib.c	/^#define ERRFUNC	/;"	d	file:
ERRLIB	liblua/loadlib.c	/^#define ERRLIB	/;"	d	file:
ERRORSTACKSIZE	liblua/ldo.c	/^#define ERRORSTACKSIZE	/;"	d	file:
ESCSTART	armsrc/LCD.h	/^#define ESCSTART	/;"	d
ESLPIN	armsrc/LCD.h	/^#define ESLPIN	/;"	d
ESLPOUT	armsrc/LCD.h	/^#define ESLPOUT	/;"	d
ETIMEDOUT	client/hid-flasher/proxusb.c	/^#define ETIMEDOUT /;"	d	file:
ETMPGRD	armsrc/LCD.h	/^#define ETMPGRD	/;"	d
ET_CORE	client/elf.h	/^#define ET_CORE /;"	d
ET_CORE	client/hid-flasher/elf.h	/^#define ET_CORE /;"	d
ET_DYN	client/elf.h	/^#define ET_DYN /;"	d
ET_DYN	client/hid-flasher/elf.h	/^#define ET_DYN /;"	d
ET_EXEC	client/elf.h	/^#define ET_EXEC /;"	d
ET_EXEC	client/hid-flasher/elf.h	/^#define ET_EXEC /;"	d
ET_NONE	client/elf.h	/^#define ET_NONE /;"	d
ET_NONE	client/hid-flasher/elf.h	/^#define ET_NONE /;"	d
ET_REL	client/elf.h	/^#define ET_REL /;"	d
ET_REL	client/hid-flasher/elf.h	/^#define ET_REL /;"	d
EVEN	client/util.h	/^#define EVEN /;"	d
EVOLCTR	armsrc/LCD.h	/^#define EVOLCTR	/;"	d
EVOLDOWN	armsrc/LCD.h	/^#define EVOLDOWN	/;"	d
EVOLUP	armsrc/LCD.h	/^#define EVOLUP	/;"	d
EV_CURRENT	client/elf.h	/^#define EV_CURRENT /;"	d
EV_CURRENT	client/hid-flasher/elf.h	/^#define EV_CURRENT /;"	d
EXES	tools/mfkey/Makefile	/^EXES = mfkey64 mfkey32$/;"	m
EXES	tools/nonce2key/Makefile	/^EXES = nonce2key$/;"	m
EXTRA_STACK	liblua/lstate.h	/^#define EXTRA_STACK /;"	d
Ek	armsrc/aes.h	/^ unsigned int Ek[60];$/;"	m	struct:__anon1
Elf32_Ehdr	client/elf.h	/^} __attribute__((__packed__)) Elf32_Ehdr;$/;"	t	typeref:struct:__anon31
Elf32_Ehdr	client/hid-flasher/elf.h	/^} __attribute__((__packed__)) Elf32_Ehdr;$/;"	t	typeref:struct:__anon35
Elf32_Phdr	client/elf.h	/^} __attribute__((__packed__)) Elf32_Phdr;$/;"	t	typeref:struct:__anon30
Elf32_Phdr	client/hid-flasher/elf.h	/^} __attribute__((__packed__)) Elf32_Phdr;$/;"	t	typeref:struct:__anon34
Em410xDecode	common/lfdemod.c	/^uint64_t Em410xDecode(uint8_t *BitStream, size_t *size, size_t *startIdx)$/;"	f
EmGetCmd	armsrc/iso14443a.c	/^\/*static*\/ int EmGetCmd(uint8_t *received, uint16_t *len, uint8_t *parity)$/;"	f
EmLogTrace	armsrc/iso14443a.c	/^bool EmLogTrace(uint8_t *reader_data, uint16_t reader_len, uint32_t reader_StartTime, uint32_t reader_EndTime, uint8_t *reader_Parity,$/;"	f
EmSend4bit	armsrc/iso14443a.c	/^int EmSend4bit(uint8_t resp){$/;"	f
EmSend4bitEx	armsrc/iso14443a.c	/^int EmSend4bitEx(uint8_t resp, bool correctionNeeded){$/;"	f
EmSendCmd	armsrc/iso14443a.c	/^int EmSendCmd(uint8_t *resp, uint16_t respLen){$/;"	f
EmSendCmd14443aRaw	armsrc/iso14443a.c	/^\/*static*\/ int EmSendCmd14443aRaw(uint8_t *resp, uint16_t respLen, bool correctionNeeded)$/;"	f
EmSendCmdEx	armsrc/iso14443a.c	/^int EmSendCmdEx(uint8_t *resp, uint16_t respLen, bool correctionNeeded){$/;"	f
EmSendCmdExPar	armsrc/iso14443a.c	/^int EmSendCmdExPar(uint8_t *resp, uint16_t respLen, bool correctionNeeded, uint8_t *par){$/;"	f
EmSendCmdPar	armsrc/iso14443a.c	/^int EmSendCmdPar(uint8_t *resp, uint16_t respLen, uint8_t *par){$/;"	f
ExitGraphics	client/guidummy.c	/^void ExitGraphics(void) {}$/;"	f
ExitGraphics	client/proxgui.cpp	/^extern "C" void ExitGraphics(void)$/;"	f
ExitMsg	client/scripts/emul2dump.lua	/^function ExitMsg(msg)$/;"	f
ExitMsg	client/scripts/formatMifare.lua	/^function ExitMsg(msg)$/;"	f
ExitMsg	client/scripts/test_t55x7_psk.lua	/^function ExitMsg(msg)$/;"	f
ExitMsg	client/scripts/tnp3dump.lua	/^function ExitMsg(msg)$/;"	f
ExitMsg	client/scripts/tnp3sim.lua	/^function ExitMsg(msg)$/;"	f
ExitMsg	client/scripts/tracetest.lua	/^function ExitMsg(msg)$/;"	f
FALSE	client/util.h	/^#define FALSE /;"	d
FALSE	include/proxmark3.h	/^#define FALSE /;"	d
FDT_COUNT	fpga/hi_iso14443a.v	/^`define FDT_COUNT 11'd1128$/;"	c
FDT_INDICATOR_COUNT	fpga/hi_iso14443a.v	/^`define FDT_INDICATOR_COUNT 11'd535$/;"	c
FILEUTILS_H	client/loclass/fileutils.h	/^#define FILEUTILS_H$/;"	d
FILE_PATH_SIZE	client/data.h	/^#define FILE_PATH_SIZE /;"	d
FIN	fpga/tests/tb_lf_edge_detect.v	/^`define FIN "tb_tmp\/data.filtered.gold"$/;"	c
FIN	fpga/tests/tb_lp20khz_1MSa_iir_filter.v	/^`define FIN "tb_tmp\/data.in"$/;"	c
FIN	fpga/tests/tb_min_max_tracker.v	/^`define FIN "tb_tmp\/data.filtered.gold"$/;"	c
FINALIZEDBIT	liblua/lgc.h	/^#define FINALIZEDBIT	/;"	d
FIRST_RESERVED	liblua/llex.h	/^#define FIRST_RESERVED	/;"	d
FIXEDBIT	liblua/lgc.h	/^#define FIXEDBIT	/;"	d
FLAGS	liblua/lstrlib.c	/^#define FLAGS	/;"	d	file:
FLAG_4B_UID_IN_DATA	include/usb_cmd.h	/^#define FLAG_4B_UID_IN_DATA /;"	d
FLAG_7B_UID_IN_DATA	include/usb_cmd.h	/^#define FLAG_7B_UID_IN_DATA /;"	d
FLAG_ICLASS_READER_GET_CC	include/usb_cmd.h	/^#define FLAG_ICLASS_READER_GET_CC /;"	d
FLAG_ICLASS_READER_ONLY_ONCE	include/usb_cmd.h	/^#define FLAG_ICLASS_READER_ONLY_ONCE /;"	d
FLAG_INTERACTIVE	include/usb_cmd.h	/^#define FLAG_INTERACTIVE /;"	d
FLAG_NR_AR_ATTACK	include/usb_cmd.h	/^#define FLAG_NR_AR_ATTACK /;"	d
FLASH_END	client/flash.c	/^#define FLASH_END /;"	d	file:
FLASH_END	client/hid-flasher/flash.c	/^#define FLASH_END /;"	d	file:
FLASH_PORT	Makefile	/^FLASH_PORT=\/dev\/tty.usbmodemfa1361 $/;"	m
FLASH_SIZE	client/flash.c	/^#define FLASH_SIZE /;"	d	file:
FLASH_SIZE	client/hid-flasher/flash.c	/^#define FLASH_SIZE /;"	d	file:
FLASH_START	client/flash.c	/^#define FLASH_START /;"	d	file:
FLASH_START	client/hid-flasher/flash.c	/^#define FLASH_START /;"	d	file:
FONT6x8	armsrc/fonts.c	/^const char FONT6x8[97][8] = {$/;"	v
FOREACH_VALID_NONCE	armsrc/crapto1.h	/^#define FOREACH_VALID_NONCE(/;"	d
FOREACH_VALID_NONCE	client/nonce2key/crapto1.h	/^#define FOREACH_VALID_NONCE(/;"	d
FOREACH_VALID_NONCE	tools/mfkey/crapto1.h	/^#define FOREACH_VALID_NONCE(/;"	d
FOREACH_VALID_NONCE	tools/nonce2key/crapto1.h	/^#define FOREACH_VALID_NONCE(/;"	d
FORMAT	liblua/lundump.c	/^#define FORMAT	/;"	d	file:
FOUT	fpga/tests/tb_lp20khz_1MSa_iir_filter.v	/^`define FOUT "tb_tmp\/data.filtered"$/;"	c
FOUT_HIGH	fpga/tests/tb_lf_edge_detect.v	/^`define FOUT_HIGH "tb_tmp\/data.high"$/;"	c
FOUT_HIGHZ	fpga/tests/tb_lf_edge_detect.v	/^`define FOUT_HIGHZ "tb_tmp\/data.highz"$/;"	c
FOUT_LOW	fpga/tests/tb_lf_edge_detect.v	/^`define FOUT_LOW "tb_tmp\/data.low"$/;"	c
FOUT_LOWZ	fpga/tests/tb_lf_edge_detect.v	/^`define FOUT_LOWZ "tb_tmp\/data.lowz"$/;"	c
FOUT_MAX	fpga/tests/tb_lf_edge_detect.v	/^`define FOUT_MAX "tb_tmp\/data.max"$/;"	c
FOUT_MAX	fpga/tests/tb_min_max_tracker.v	/^`define FOUT_MAX "tb_tmp\/data.max"$/;"	c
FOUT_MIN	fpga/tests/tb_lf_edge_detect.v	/^`define FOUT_MIN "tb_tmp\/data.min"$/;"	c
FOUT_MIN	fpga/tests/tb_min_max_tracker.v	/^`define FOUT_MIN "tb_tmp\/data.min"$/;"	c
FOUT_STATE	fpga/tests/tb_lf_edge_detect.v	/^`define FOUT_STATE "tb_tmp\/data.state"$/;"	c
FOUT_TOGGLE	fpga/tests/tb_lf_edge_detect.v	/^`define FOUT_TOGGLE "tb_tmp\/data.toggle"$/;"	c
FPGA_BITSTREAM_ERR	include/proxmark3.h	/^#define FPGA_BITSTREAM_ERR /;"	d
FPGA_BITSTREAM_HF	include/proxmark3.h	/^#define FPGA_BITSTREAM_HF /;"	d
FPGA_BITSTREAM_LF	include/proxmark3.h	/^#define FPGA_BITSTREAM_LF /;"	d
FPGA_CMD_SET_CONFREG	armsrc/apps.h	/^#define FPGA_CMD_SET_CONFREG	/;"	d
FPGA_CMD_SET_DIVISOR	armsrc/apps.h	/^#define FPGA_CMD_SET_DIVISOR	/;"	d
FPGA_CMD_SET_EDGE_DETECT_THRESHOLD	armsrc/apps.h	/^#define FPGA_CMD_SET_EDGE_DETECT_THRESHOLD	/;"	d
FPGA_CMD_SET_USER_BYTE1	armsrc/apps.h	/^#define FPGA_CMD_SET_USER_BYTE1	/;"	d
FPGA_HF_ISO14443A_READER_LISTEN	armsrc/apps.h	/^#define FPGA_HF_ISO14443A_READER_LISTEN	/;"	d
FPGA_HF_ISO14443A_READER_MOD	armsrc/apps.h	/^#define FPGA_HF_ISO14443A_READER_MOD	/;"	d
FPGA_HF_ISO14443A_SNIFFER	armsrc/apps.h	/^#define FPGA_HF_ISO14443A_SNIFFER	/;"	d
FPGA_HF_ISO14443A_TAGSIM_LISTEN	armsrc/apps.h	/^#define FPGA_HF_ISO14443A_TAGSIM_LISTEN	/;"	d
FPGA_HF_ISO14443A_TAGSIM_MOD	armsrc/apps.h	/^#define FPGA_HF_ISO14443A_TAGSIM_MOD	/;"	d
FPGA_HF_READER_RX_XCORR_848_KHZ	armsrc/apps.h	/^#define FPGA_HF_READER_RX_XCORR_848_KHZ	/;"	d
FPGA_HF_READER_RX_XCORR_QUARTER_FREQ	armsrc/apps.h	/^#define FPGA_HF_READER_RX_XCORR_QUARTER_FREQ	/;"	d
FPGA_HF_READER_RX_XCORR_SNOOP	armsrc/apps.h	/^#define FPGA_HF_READER_RX_XCORR_SNOOP	/;"	d
FPGA_HF_READER_TX_SHALLOW_MOD	armsrc/apps.h	/^#define FPGA_HF_READER_TX_SHALLOW_MOD	/;"	d
FPGA_HF_SIMULATOR_MODULATE_212K	armsrc/apps.h	/^#define FPGA_HF_SIMULATOR_MODULATE_212K	/;"	d
FPGA_HF_SIMULATOR_MODULATE_424K	armsrc/apps.h	/^#define FPGA_HF_SIMULATOR_MODULATE_424K	/;"	d
FPGA_HF_SIMULATOR_MODULATE_424K_8BIT	armsrc/apps.h	/^#define FPGA_HF_SIMULATOR_MODULATE_424K_8BIT	/;"	d
FPGA_HF_SIMULATOR_MODULATE_BPSK	armsrc/apps.h	/^#define FPGA_HF_SIMULATOR_MODULATE_BPSK	/;"	d
FPGA_HF_SIMULATOR_NO_MODULATION	armsrc/apps.h	/^#define FPGA_HF_SIMULATOR_NO_MODULATION	/;"	d
FPGA_LF_ADC_READER_FIELD	armsrc/apps.h	/^#define FPGA_LF_ADC_READER_FIELD	/;"	d
FPGA_LF_EDGE_DETECT_READER_FIELD	armsrc/apps.h	/^#define FPGA_LF_EDGE_DETECT_READER_FIELD /;"	d
FPGA_LF_EDGE_DETECT_TOGGLE_MODE	armsrc/apps.h	/^#define FPGA_LF_EDGE_DETECT_TOGGLE_MODE	/;"	d
FPGA_MAJOR_MODE_HF_ISO14443A	armsrc/apps.h	/^#define FPGA_MAJOR_MODE_HF_ISO14443A	/;"	d
FPGA_MAJOR_MODE_HF_READER_RX_XCORR	armsrc/apps.h	/^#define FPGA_MAJOR_MODE_HF_READER_RX_XCORR	/;"	d
FPGA_MAJOR_MODE_HF_READER_TX	armsrc/apps.h	/^#define FPGA_MAJOR_MODE_HF_READER_TX	/;"	d
FPGA_MAJOR_MODE_HF_SIMULATOR	armsrc/apps.h	/^#define FPGA_MAJOR_MODE_HF_SIMULATOR	/;"	d
FPGA_MAJOR_MODE_LF_ADC	armsrc/apps.h	/^#define FPGA_MAJOR_MODE_LF_ADC	/;"	d
FPGA_MAJOR_MODE_LF_EDGE_DETECT	armsrc/apps.h	/^#define FPGA_MAJOR_MODE_LF_EDGE_DETECT	/;"	d
FPGA_MAJOR_MODE_LF_PASSTHRU	armsrc/apps.h	/^#define FPGA_MAJOR_MODE_LF_PASSTHRU	/;"	d
FPGA_MAJOR_MODE_OFF	armsrc/apps.h	/^#define FPGA_MAJOR_MODE_OFF	/;"	d
FRAME_DELAY_TIME_PICC_TO_PCD	armsrc/iso14443a.c	/^#define FRAME_DELAY_TIME_PICC_TO_PCD /;"	d	file:
FREQHI	armsrc/lfops.c	/^ #define FREQHI /;"	d	file:
FREQLO	armsrc/lfops.c	/^ #define FREQLO /;"	d	file:
FSAMPLE	armsrc/lfops.c	/^ #define FSAMPLE /;"	d	file:
FSb	client/aes.c	/^static const unsigned char FSb[256] =$/;"	v	file:
FSb	client/aes.c	/^static unsigned char FSb[256];$/;"	v	file:
FT	client/aes.c	/^#define FT /;"	d	file:
FT	client/aes.c	/^#undef FT$/;"	d	file:
FT0	client/aes.c	/^static const uint32_t FT0[256] = { FT };$/;"	v	file:
FT0	client/aes.c	/^static uint32_t FT0[256];$/;"	v	file:
FT1	client/aes.c	/^static const uint32_t FT1[256] = { FT };$/;"	v	file:
FT1	client/aes.c	/^static uint32_t FT1[256];$/;"	v	file:
FT2	client/aes.c	/^static const uint32_t FT2[256] = { FT };$/;"	v	file:
FT2	client/aes.c	/^static uint32_t FT2[256];$/;"	v	file:
FT3	client/aes.c	/^static const uint32_t FT3[256] = { FT };$/;"	v	file:
FT3	client/aes.c	/^static uint32_t FT3[256];$/;"	v	file:
FUNCTION	liblua/luac.c	/^#define FUNCTION /;"	d	file:
FUZZ_EQUAL	armsrc/legicrf.c	/^#define FUZZ_EQUAL(/;"	d	file:
FWD_CMD_DISABLE	armsrc/lfops.c	/^#define FWD_CMD_DISABLE /;"	d	file:
FWD_CMD_LOGIN	armsrc/lfops.c	/^#define FWD_CMD_LOGIN /;"	d	file:
FWD_CMD_READ	armsrc/lfops.c	/^#define FWD_CMD_READ /;"	d	file:
FWD_CMD_WRITE	armsrc/lfops.c	/^#define FWD_CMD_WRITE /;"	d	file:
Fatal	bootrom/bootrom.c	/^static void Fatal(void)$/;"	f	file:
FillFileNameByUID	client/util.c	/^void FillFileNameByUID(char *fileName, uint8_t * uid, char *ext, int byteCount) {$/;"	f
FirstBlockOfSector	armsrc/mifareutil.c	/^uint8_t FirstBlockOfSector(uint8_t sectorNo) $/;"	f
FirstBlockOfSector	client/cmdhfmf.c	/^uint8_t FirstBlockOfSector(uint8_t sectorNo)$/;"	f
FormatVersionInformation	armsrc/util.c	/^void FormatVersionInformation(char *dst, int len, const char *prefix, void *version_information)$/;"	f
FpgaDisableSscDma	armsrc/apps.h	/^#define FpgaDisableSscDma(/;"	d
FpgaDownloadAndGo	armsrc/fpgaloader.c	/^void FpgaDownloadAndGo(int bitstream_version)$/;"	f
FpgaEnableSscDma	armsrc/apps.h	/^#define FpgaEnableSscDma(/;"	d
FpgaGatherBitstreamVersion	armsrc/fpgaloader.c	/^int FpgaGatherBitstreamVersion()$/;"	f
FpgaGatherVersion	armsrc/fpgaloader.c	/^void FpgaGatherVersion(char *dst, int len)$/;"	f
FpgaSendCommand	armsrc/fpgaloader.c	/^void FpgaSendCommand(uint16_t cmd, uint16_t v)$/;"	f
FpgaSendQueueDelay	armsrc/iso14443a.c	/^uint16_t FpgaSendQueueDelay;$/;"	v
FpgaSetupSsc	armsrc/fpgaloader.c	/^void FpgaSetupSsc(void)$/;"	f
FpgaSetupSscDma	armsrc/fpgaloader.c	/^bool FpgaSetupSscDma(uint8_t *buf, int len)$/;"	f
FpgaWriteConfWord	armsrc/fpgaloader.c	/^void FpgaWriteConfWord(uint8_t v)$/;"	f
FrameEOF	armsrc/iso15693.c	/^#define FrameEOF /;"	d	file:
FrameEOF	client/cmdhf15.c	/^#define FrameEOF	/;"	d	file:
FrameSOF	armsrc/iso15693.c	/^#define FrameSOF /;"	d	file:
FrameSOF	client/cmdhf15.c	/^#define FrameSOF /;"	d	file:
FuncState	liblua/lparser.h	/^typedef struct FuncState {$/;"	s
FuncState	liblua/lparser.h	/^} FuncState;$/;"	t	typeref:struct:FuncState
G	liblua/lstate.h	/^#define G(/;"	d
GCFINALIZENUM	liblua/lgc.c	/^#define GCFINALIZENUM	/;"	d	file:
GCObject	liblua/lobject.h	/^typedef union GCObject GCObject;$/;"	t	typeref:union:GCObject
GCObject	liblua/lstate.h	/^union GCObject {$/;"	u
GCSTEPSIZE	liblua/lgc.h	/^#define GCSTEPSIZE	/;"	d
GCSWEEPCOST	liblua/lgc.c	/^#define GCSWEEPCOST	/;"	d	file:
GCSWEEPMAX	liblua/lgc.c	/^#define GCSWEEPMAX	/;"	d	file:
GCSatomic	liblua/lgc.h	/^#define GCSatomic	/;"	d
GCSpause	liblua/lgc.h	/^#define GCSpause	/;"	d
GCSpropagate	liblua/lgc.h	/^#define GCSpropagate	/;"	d
GCSsweep	liblua/lgc.h	/^#define GCSsweep	/;"	d
GCSsweepstring	liblua/lgc.h	/^#define GCSsweepstring	/;"	d
GCSsweepudata	liblua/lgc.h	/^#define GCSsweepudata	/;"	d
GCTM	liblua/lgc.c	/^static void GCTM (lua_State *L, int propagateerrors) {$/;"	f	file:
GCdebt	liblua/lstate.h	/^  l_mem GCdebt;  \/* bytes allocated not yet compensated by the collector *\/$/;"	m	struct:global_State
GCestimate	liblua/lstate.h	/^  lu_mem GCestimate;  \/* an estimate of the non-garbage memory in use *\/$/;"	m	struct:global_State
GCheader	liblua/lobject.h	/^typedef struct GCheader {$/;"	s
GCheader	liblua/lobject.h	/^} GCheader;$/;"	t	typeref:struct:GCheader
GCmemtrav	liblua/lstate.h	/^  lu_mem GCmemtrav;  \/* memory traversed by the GC *\/$/;"	m	struct:global_State
GETARG_A	liblua/lopcodes.h	/^#define GETARG_A(/;"	d
GETARG_Ax	liblua/lopcodes.h	/^#define GETARG_Ax(/;"	d
GETARG_B	liblua/lopcodes.h	/^#define GETARG_B(/;"	d
GETARG_Bx	liblua/lopcodes.h	/^#define GETARG_Bx(/;"	d
GETARG_C	liblua/lopcodes.h	/^#define GETARG_C(/;"	d
GETARG_sBx	liblua/lopcodes.h	/^#define GETARG_sBx(/;"	d
GETBIT	include/proxmark3.h	/^#define GETBIT(/;"	d
GETU32	armsrc/aes.c	/^#define GETU32(/;"	d	file:
GET_LINE_CODING	common/usb_cdc.c	/^#define GET_LINE_CODING /;"	d	file:
GET_OPCODE	liblua/lopcodes.h	/^#define GET_OPCODE(/;"	d
GET_UINT32_BE	client/loclass/des.c	/^#define GET_UINT32_BE(/;"	d	file:
GET_UINT32_LE	client/aes.c	/^#define GET_UINT32_LE(/;"	d	file:
GPIO_BUTTON	include/config_gpio.h	/^#define GPIO_BUTTON	/;"	d
GPIO_FPGA_CCLK	include/config_gpio.h	/^#define GPIO_FPGA_CCLK	/;"	d
GPIO_FPGA_DIN	include/config_gpio.h	/^#define GPIO_FPGA_DIN	/;"	d
GPIO_FPGA_DONE	include/config_gpio.h	/^#define GPIO_FPGA_DONE	/;"	d
GPIO_FPGA_DOUT	include/config_gpio.h	/^#define GPIO_FPGA_DOUT	/;"	d
GPIO_FPGA_NINIT	include/config_gpio.h	/^#define GPIO_FPGA_NINIT	/;"	d
GPIO_FPGA_NPROGRAM	include/config_gpio.h	/^#define GPIO_FPGA_NPROGRAM	/;"	d
GPIO_FPGA_ON	include/config_gpio.h	/^#define GPIO_FPGA_ON	/;"	d
GPIO_LED_A	include/config_gpio.h	/^#define GPIO_LED_A	/;"	d
GPIO_LED_B	include/config_gpio.h	/^#define GPIO_LED_B	/;"	d
GPIO_LED_C	include/config_gpio.h	/^#define GPIO_LED_C	/;"	d
GPIO_LED_D	include/config_gpio.h	/^#define GPIO_LED_D	/;"	d
GPIO_LRST	include/config_gpio.h	/^#define GPIO_LRST	/;"	d
GPIO_MISO	include/config_gpio.h	/^#define GPIO_MISO	/;"	d
GPIO_MOSI	include/config_gpio.h	/^#define GPIO_MOSI	/;"	d
GPIO_MUXSEL_HIPKD	include/config_gpio.h	/^#define GPIO_MUXSEL_HIPKD	/;"	d
GPIO_MUXSEL_HIRAW	include/config_gpio.h	/^#define GPIO_MUXSEL_HIRAW	/;"	d
GPIO_MUXSEL_LOPKD	include/config_gpio.h	/^#define GPIO_MUXSEL_LOPKD	/;"	d
GPIO_MUXSEL_LORAW	include/config_gpio.h	/^#define GPIO_MUXSEL_LORAW	/;"	d
GPIO_NCS0	include/config_gpio.h	/^#define GPIO_NCS0	/;"	d
GPIO_NCS2	include/config_gpio.h	/^#define GPIO_NCS2	/;"	d
GPIO_NVDD_ON	include/config_gpio.h	/^#define GPIO_NVDD_ON	/;"	d
GPIO_PA1	include/config_gpio.h	/^#define GPIO_PA1	/;"	d
GPIO_PA5	include/config_gpio.h	/^#define GPIO_PA5	/;"	d
GPIO_PCK0	include/config_gpio.h	/^#define GPIO_PCK0	/;"	d
GPIO_RELAY	include/config_gpio.h	/^#define GPIO_RELAY	/;"	d
GPIO_SPCK	include/config_gpio.h	/^#define GPIO_SPCK	/;"	d
GPIO_SSC_CLK	include/config_gpio.h	/^#define GPIO_SSC_CLK	/;"	d
GPIO_SSC_DIN	include/config_gpio.h	/^#define GPIO_SSC_DIN	/;"	d
GPIO_SSC_DOUT	include/config_gpio.h	/^#define GPIO_SSC_DOUT	/;"	d
GPIO_SSC_FRAME	include/config_gpio.h	/^#define GPIO_SSC_FRAME	/;"	d
GPIO_USB_PU	include/config_gpio.h	/^#define GPIO_USB_PU	/;"	d
GRAPH_H__	client/graph.h	/^#define GRAPH_H__$/;"	d
GREEN	armsrc/LCD.h	/^#define GREEN	/;"	d
GZIP	Makefile	/^GZIP=gzip$/;"	m
GetAskClock	client/graph.c	/^int GetAskClock(const char str[], bool printAns, bool verbose)$/;"	f
GetCardInfo	client/scripts/formatMifare.lua	/^function GetCardInfo()$/;"	f
GetCheckSum	client/scripts/tnp3sim.lua	/^local function GetCheckSum(blocks, dataarea, chksumtype)$/;"	f
GetCountSspClk	armsrc/util.c	/^uint32_t RAMFUNC GetCountSspClk(){$/;"	f
GetCountUS	armsrc/util.c	/^uint32_t RAMFUNC GetCountUS(){$/;"	f
GetDeltaCountUS	armsrc/util.c	/^uint32_t RAMFUNC GetDeltaCountUS(){$/;"	f
GetFromBigBuf	client/data.c	/^void GetFromBigBuf(uint8_t *dest, int bytes, int start_index)$/;"	f
GetFskClock	client/graph.c	/^uint8_t GetFskClock(const char str[], bool printAns, bool verbose)$/;"	f
GetIClassAnswer	armsrc/iclass.c	/^static int GetIClassAnswer(uint8_t *receivedResponse, int maxLen, int *samples, int *elapsed) \/\/uint8_t *buffer$/;"	f	file:
GetIClassCommandFromReader	armsrc/iclass.c	/^static int GetIClassCommandFromReader(uint8_t *received, int *len, int maxLen)$/;"	f	file:
GetIso14443CommandFromReader	armsrc/iso14443.c	/^static int GetIso14443CommandFromReader(uint8_t *received, int *len, int maxLen)$/;"	f	file:
GetIso14443aAnswerFromTag	armsrc/iso14443a.c	/^static int GetIso14443aAnswerFromTag(uint8_t *receivedResponse, uint8_t *receivedResponsePar, uint16_t offset)$/;"	f	file:
GetIso14443aCommandFromReader	armsrc/iso14443a.c	/^\/*static*\/ int GetIso14443aCommandFromReader(uint8_t *received, uint8_t *parity, int *len)$/;"	f
GetIso15693AnswerFromSniff	armsrc/iso15693.c	/^static int GetIso15693AnswerFromSniff(uint8_t *receivedResponse, int maxLen, int *samples, int *elapsed)$/;"	f	file:
GetIso15693AnswerFromTag	armsrc/iso15693.c	/^static int GetIso15693AnswerFromTag(uint8_t *receivedResponse, int maxLen, int *samples, int *elapsed)$/;"	f	file:
GetNrzClock	client/graph.c	/^uint8_t GetNrzClock(const char str[], bool printAns, bool verbose)$/;"	f
GetParity	armsrc/iso14443a.c	/^void GetParity(const uint8_t *pbtCmd, uint16_t iLen, uint8_t *par)$/;"	f
GetParity	client/util.c	/^uint8_t GetParity( char *bits, uint8_t type, int length)$/;"	f
GetPskClock	client/graph.c	/^int GetPskClock(const char str[], bool printAns, bool verbose)$/;"	f
GetSamplesFor14443Demod	armsrc/iso14443.c	/^static void GetSamplesFor14443Demod(int weTx, int n, int quiet)$/;"	f	file:
GetTickCount	armsrc/util.c	/^uint32_t RAMFUNC GetTickCount(){$/;"	f
GlobalUsCounter	armsrc/util.c	/^static uint32_t GlobalUsCounter = 0;$/;"	v	file:
GraphBuffer	client/graph.c	/^int GraphBuffer[MAX_GRAPH_TRACE_LEN];$/;"	v
GraphPixelsPerPoint	client/proxguiqt.h	/^		double GraphPixelsPerPoint;$/;"	m	class:ProxWidget
GraphStart	client/proxguiqt.h	/^		int GraphStart;$/;"	m	class:ProxWidget
GraphTraceLen	client/graph.c	/^int GraphTraceLen;$/;"	v
GridLocked	client/proxguiqt.cpp	/^bool GridLocked= 0;$/;"	v
GridOffset	client/proxguiqt.cpp	/^int GridOffset= 0;$/;"	v
HANDLE_ERROR	client/cli.c	/^#define HANDLE_ERROR /;"	d	file:
HANDLE_ERROR	client/snooper.c	/^#define HANDLE_ERROR /;"	d	file:
HEADERS	tools/mfkey/Makefile	/^HEADERS = $/;"	m
HEADERS	tools/nonce2key/Makefile	/^HEADERS = crapto1.h$/;"	m
HEXDIGITS	client/pm3_binlib.c	/^#define HEXDIGITS(/;"	d	file:
HF_14B_SNOOP_BUFFER_SIZE	armsrc/appmain.c	/^	#define HF_14B_SNOOP_BUFFER_SIZE /;"	d	file:
HF_MARGINAL_V	client/cmddata.c	/^#define HF_MARGINAL_V	/;"	d	file:
HF_ONLY	armsrc/appmain.c	/^#define HF_ONLY	/;"	d	file:
HF_UNUSABLE_V	client/cmddata.c	/^#define HF_UNUSABLE_V	/;"	d	file:
HIDdemodFSK	common/lfdemod.c	/^int HIDdemodFSK(uint8_t *dest, size_t *size, uint32_t *hi2, uint32_t *hi, uint32_t *lo)$/;"	f
HIGH	include/proxmark3.h	/^#define HIGH(/;"	d
HITAG_FRAME_LEN	armsrc/hitag2.c	/^#define HITAG_FRAME_LEN /;"	d	file:
HITAG_T_0_MIN	armsrc/hitag2.c	/^#define HITAG_T_0_MIN /;"	d	file:
HITAG_T_1_MIN	armsrc/hitag2.c	/^#define HITAG_T_1_MIN /;"	d	file:
HITAG_T_EOF	armsrc/hitag2.c	/^#define HITAG_T_EOF /;"	d	file:
HITAG_T_LOW	armsrc/hitag2.c	/^#define HITAG_T_LOW	/;"	d	file:
HITAG_T_STOP	armsrc/hitag2.c	/^#define HITAG_T_STOP /;"	d	file:
HITAG_T_TAG_CAPTURE_FOUR_HALF	armsrc/hitag2.c	/^#define HITAG_T_TAG_CAPTURE_FOUR_HALF /;"	d	file:
HITAG_T_TAG_CAPTURE_ONE_HALF	armsrc/hitag2.c	/^#define HITAG_T_TAG_CAPTURE_ONE_HALF	/;"	d	file:
HITAG_T_TAG_CAPTURE_THREE_HALF	armsrc/hitag2.c	/^#define HITAG_T_TAG_CAPTURE_THREE_HALF	/;"	d	file:
HITAG_T_TAG_CAPTURE_TWO_HALF	armsrc/hitag2.c	/^#define HITAG_T_TAG_CAPTURE_TWO_HALF	/;"	d	file:
HITAG_T_TAG_FOUR_HALF_PERIOD	armsrc/hitag2.c	/^#define HITAG_T_TAG_FOUR_HALF_PERIOD /;"	d	file:
HITAG_T_TAG_FULL_PERIOD	armsrc/hitag2.c	/^#define HITAG_T_TAG_FULL_PERIOD	/;"	d	file:
HITAG_T_TAG_HALF_PERIOD	armsrc/hitag2.c	/^#define HITAG_T_TAG_HALF_PERIOD	/;"	d	file:
HITAG_T_TAG_ONE_HALF_PERIOD	armsrc/hitag2.c	/^#define HITAG_T_TAG_ONE_HALF_PERIOD	/;"	d	file:
HITAG_T_TAG_THREE_HALF_PERIOD	armsrc/hitag2.c	/^#define HITAG_T_TAG_THREE_HALF_PERIOD	/;"	d	file:
HITAG_T_TAG_TWO_HALF_PERIOD	armsrc/hitag2.c	/^#define HITAG_T_TAG_TWO_HALF_PERIOD	/;"	d	file:
HITAG_T_WAIT_1	armsrc/hitag2.c	/^#define HITAG_T_WAIT_1 /;"	d	file:
HITAG_T_WAIT_2	armsrc/hitag2.c	/^#define HITAG_T_WAIT_2 /;"	d	file:
HITAG_T_WAIT_MAX	armsrc/hitag2.c	/^#define HITAG_T_WAIT_MAX /;"	d	file:
HOOKKEY	liblua/ldblib.c	/^#define HOOKKEY	/;"	d	file:
HOST_LITTLE_ENDIAN	client/hid-flasher/proxendian.h	/^#  define HOST_LITTLE_ENDIAN$/;"	d
HOST_LITTLE_ENDIAN	client/hid-flasher/proxendian.h	/^# define HOST_LITTLE_ENDIAN$/;"	d
HOST_LITTLE_ENDIAN	client/proxendian.h	/^#  define HOST_LITTLE_ENDIAN$/;"	d
HOST_LITTLE_ENDIAN	client/proxendian.h	/^# define HOST_LITTLE_ENDIAN$/;"	d
Handle14443SamplesDemod	armsrc/iso14443.c	/^static RAMFUNC int Handle14443SamplesDemod(int ci, int cq)$/;"	f	file:
Handle14443UartBit	armsrc/iso14443.c	/^static int Handle14443UartBit(int bit)$/;"	f	file:
HasGraphData	client/graph.c	/^bool HasGraphData(){$/;"	f
Help	client/cmdparser.h	/^  const char * Help;$/;"	m	struct:command_s
HideGraphWindow	client/guidummy.c	/^void HideGraphWindow(void) {}$/;"	f
HideGraphWindow	client/proxgui.cpp	/^extern "C" void HideGraphWindow(void)$/;"	f
HideGraphWindow	client/proxguiqt.cpp	/^void ProxGuiQT::HideGraphWindow(void)$/;"	f	class:ProxGuiQT
HideGraphWindowSignal	client/proxguiqt.moc.cpp	/^void ProxGuiQT::HideGraphWindowSignal()$/;"	f	class:ProxGuiQT
ICLASS	client/cmdhf.c	/^#define ICLASS /;"	d	file:
ICLASS_BUFFER_SIZE	armsrc/iclass.c	/^	#define ICLASS_BUFFER_SIZE /;"	d	file:
ICLASS_CMD_ACT	client/cmdhf.c	/^#define ICLASS_CMD_ACT /;"	d	file:
ICLASS_CMD_ACTALL	client/cmdhf.c	/^#define ICLASS_CMD_ACTALL /;"	d	file:
ICLASS_CMD_CHECK	client/cmdhf.c	/^#define ICLASS_CMD_CHECK /;"	d	file:
ICLASS_CMD_DETECT	client/cmdhf.c	/^#define ICLASS_CMD_DETECT /;"	d	file:
ICLASS_CMD_HALT	client/cmdhf.c	/^#define ICLASS_CMD_HALT /;"	d	file:
ICLASS_CMD_PAGESEL	client/cmdhf.c	/^#define ICLASS_CMD_PAGESEL /;"	d	file:
ICLASS_CMD_READ4	client/cmdhf.c	/^#define ICLASS_CMD_READ4 /;"	d	file:
ICLASS_CMD_READCHECK_KC	client/cmdhf.c	/^#define ICLASS_CMD_READCHECK_KC /;"	d	file:
ICLASS_CMD_READCHECK_KD	client/cmdhf.c	/^#define ICLASS_CMD_READCHECK_KD /;"	d	file:
ICLASS_CMD_READ_OR_IDENTIFY	client/cmdhf.c	/^#define ICLASS_CMD_READ_OR_IDENTIFY /;"	d	file:
ICLASS_CMD_SELECT	client/cmdhf.c	/^#define ICLASS_CMD_SELECT /;"	d	file:
ICLASS_CMD_UPDATE	client/cmdhf.c	/^#define ICLASS_CMD_UPDATE	/;"	d	file:
IKEYS_H	client/loclass/ikeys.h	/^#define IKEYS_H$/;"	d
INDEXK	liblua/lopcodes.h	/^#define INDEXK(/;"	d
INVALID_SERIAL_PORT	client/uart.h	/^#define INVALID_SERIAL_PORT /;"	d
INVBIT	include/proxmark3.h	/^#define INVBIT(/;"	d
INVERT_CASES	tools/findbits_test.py	/^	INVERT_CASES = [$/;"	v	class:TestFindBits
IO_INPUT	liblua/liolib.c	/^#define IO_INPUT	/;"	d	file:
IO_OUTPUT	liblua/liolib.c	/^#define IO_OUTPUT	/;"	d	file:
IO_PREFIX	liblua/liolib.c	/^#define IO_PREFIX	/;"	d	file:
IOdemodFSK	common/lfdemod.c	/^int IOdemodFSK(uint8_t *dest, size_t size)$/;"	f
IS	liblua/luac.c	/^#define IS(/;"	d	file:
ISK	liblua/lopcodes.h	/^#define ISK(/;"	d
ISO14443A_CMD_ANTICOLL_OR_SELECT	client/cmdhf.c	/^#define ISO14443A_CMD_ANTICOLL_OR_SELECT /;"	d	file:
ISO14443A_CMD_ANTICOLL_OR_SELECT_2	client/cmdhf.c	/^#define ISO14443A_CMD_ANTICOLL_OR_SELECT_2 /;"	d	file:
ISO14443A_CMD_HALT	client/cmdhf.c	/^#define ISO14443A_CMD_HALT /;"	d	file:
ISO14443A_CMD_RATS	client/cmdhf.c	/^#define ISO14443A_CMD_RATS /;"	d	file:
ISO14443A_CMD_READBLOCK	client/cmdhf.c	/^#define ISO14443A_CMD_READBLOCK /;"	d	file:
ISO14443A_CMD_REQA	client/cmdhf.c	/^#define ISO14443A_CMD_REQA /;"	d	file:
ISO14443A_CMD_WRITEBLOCK	client/cmdhf.c	/^#define ISO14443A_CMD_WRITEBLOCK /;"	d	file:
ISO14443A_CMD_WTX	client/cmdhf.c	/^#define ISO14443A_CMD_WTX /;"	d	file:
ISO14443A_CMD_WUPA	client/cmdhf.c	/^#define ISO14443A_CMD_WUPA /;"	d	file:
ISO14443A_I_BLOCK_CLEAR	client/cmdhf.c	/^#define ISO14443A_I_BLOCK_CLEAR /;"	d	file:
ISO14443A_I_BLOCK_SET	client/cmdhf.c	/^#define ISO14443A_I_BLOCK_SET /;"	d	file:
ISO14443B_ATTRIB	client/cmdhf.c	/^#define ISO14443B_ATTRIB /;"	d	file:
ISO14443B_AUTHENTICATE	client/cmdhf.c	/^#define ISO14443B_AUTHENTICATE /;"	d	file:
ISO14443B_COMPLETION	client/cmdhf.c	/^#define ISO14443B_COMPLETION /;"	d	file:
ISO14443B_GET_UID	client/cmdhf.c	/^#define ISO14443B_GET_UID /;"	d	file:
ISO14443B_HALT	client/cmdhf.c	/^#define ISO14443B_HALT /;"	d	file:
ISO14443B_INITIATE	client/cmdhf.c	/^#define ISO14443B_INITIATE /;"	d	file:
ISO14443B_READ_BLK	client/cmdhf.c	/^#define ISO14443B_READ_BLK /;"	d	file:
ISO14443B_REQB	client/cmdhf.c	/^#define ISO14443B_REQB /;"	d	file:
ISO14443B_RESET	client/cmdhf.c	/^#define ISO14443B_RESET /;"	d	file:
ISO14443B_SELECT	client/cmdhf.c	/^#define ISO14443B_SELECT /;"	d	file:
ISO14443B_WRITE_BLK	client/cmdhf.c	/^#define ISO14443B_WRITE_BLK /;"	d	file:
ISO14A_APDU	include/mifare.h	/^	ISO14A_APDU = 4,$/;"	e	enum:ISO14A_COMMAND
ISO14A_APPEND_CRC	include/mifare.h	/^	ISO14A_APPEND_CRC = 0x20,$/;"	e	enum:ISO14A_COMMAND
ISO14A_COMMAND	include/mifare.h	/^typedef enum ISO14A_COMMAND {$/;"	g
ISO14A_CONNECT	include/mifare.h	/^	ISO14A_CONNECT = 1,$/;"	e	enum:ISO14A_COMMAND
ISO14A_NO_DISCONNECT	include/mifare.h	/^	ISO14A_NO_DISCONNECT = 2,$/;"	e	enum:ISO14A_COMMAND
ISO14A_NO_SELECT	include/mifare.h	/^	ISO14A_NO_SELECT = 0x80$/;"	e	enum:ISO14A_COMMAND
ISO14A_RAW	include/mifare.h	/^	ISO14A_RAW = 8,$/;"	e	enum:ISO14A_COMMAND
ISO14A_REQUEST_TRIGGER	include/mifare.h	/^	ISO14A_REQUEST_TRIGGER = 0x10,$/;"	e	enum:ISO14A_COMMAND
ISO14A_SET_TIMEOUT	include/mifare.h	/^	ISO14A_SET_TIMEOUT = 0x40,$/;"	e	enum:ISO14A_COMMAND
ISO15693_GET_SYSTEM_INFO	client/cmdhf.c	/^#define ISO15693_GET_SYSTEM_INFO /;"	d	file:
ISO15693_H__	common/iso15693tools.h	/^#define ISO15693_H__$/;"	d
ISO15693_INVENTORY	client/cmdhf.c	/^#define ISO15693_INVENTORY /;"	d	file:
ISO15693_LOCKBLOCK	client/cmdhf.c	/^#define ISO15693_LOCKBLOCK /;"	d	file:
ISO15693_LOCK_AFI	client/cmdhf.c	/^#define ISO15693_LOCK_AFI /;"	d	file:
ISO15693_LOCK_DSFID	client/cmdhf.c	/^#define ISO15693_LOCK_DSFID /;"	d	file:
ISO15693_READBLOCK	client/cmdhf.c	/^#define ISO15693_READBLOCK /;"	d	file:
ISO15693_READ_MULTI_BLOCK	client/cmdhf.c	/^#define ISO15693_READ_MULTI_BLOCK /;"	d	file:
ISO15693_READ_MULTI_SECSTATUS	client/cmdhf.c	/^#define ISO15693_READ_MULTI_SECSTATUS /;"	d	file:
ISO15693_RESET_TO_READY	client/cmdhf.c	/^#define ISO15693_RESET_TO_READY /;"	d	file:
ISO15693_SELECT	client/cmdhf.c	/^#define ISO15693_SELECT /;"	d	file:
ISO15693_STAYQUIET	client/cmdhf.c	/^#define ISO15693_STAYQUIET /;"	d	file:
ISO15693_WRITEBLOCK	client/cmdhf.c	/^#define ISO15693_WRITEBLOCK /;"	d	file:
ISO15693_WRITE_AFI	client/cmdhf.c	/^#define ISO15693_WRITE_AFI /;"	d	file:
ISO15693_WRITE_DSFID	client/cmdhf.c	/^#define ISO15693_WRITE_DSFID /;"	d	file:
ISO15_CMD_INVENTORY	common/iso15693tools.h	/^#define ISO15_CMD_INVENTORY	/;"	d
ISO15_CMD_LOCK	common/iso15693tools.h	/^#define ISO15_CMD_LOCK	/;"	d
ISO15_CMD_LOCKAFI	common/iso15693tools.h	/^#define ISO15_CMD_LOCKAFI	/;"	d
ISO15_CMD_LOCKDSFID	common/iso15693tools.h	/^#define ISO15_CMD_LOCKDSFID	/;"	d
ISO15_CMD_READ	common/iso15693tools.h	/^#define ISO15_CMD_READ	/;"	d
ISO15_CMD_READMULTI	common/iso15693tools.h	/^#define ISO15_CMD_READMULTI	/;"	d
ISO15_CMD_RESET	common/iso15693tools.h	/^#define ISO15_CMD_RESET	/;"	d
ISO15_CMD_SECSTATUS	common/iso15693tools.h	/^#define ISO15_CMD_SECSTATUS	/;"	d
ISO15_CMD_SELECT	common/iso15693tools.h	/^#define ISO15_CMD_SELECT	/;"	d
ISO15_CMD_STAYQUIET	common/iso15693tools.h	/^#define ISO15_CMD_STAYQUIET	/;"	d
ISO15_CMD_SYSINFO	common/iso15693tools.h	/^#define ISO15_CMD_SYSINFO	/;"	d
ISO15_CMD_WRITE	common/iso15693tools.h	/^#define ISO15_CMD_WRITE	/;"	d
ISO15_CMD_WRITEAFI	common/iso15693tools.h	/^#define ISO15_CMD_WRITEAFI	/;"	d
ISO15_CMD_WRITEDSFID	common/iso15693tools.h	/^#define ISO15_CMD_WRITEDSFID	/;"	d
ISO15_CMD_WRITEMULTI	common/iso15693tools.h	/^#define ISO15_CMD_WRITEMULTI	/;"	d
ISO15_CRC_CHECK	common/iso15693tools.h	/^#define ISO15_CRC_CHECK	/;"	d
ISO15_CRC_POLY	common/iso15693tools.h	/^#define ISO15_CRC_POLY	/;"	d
ISO15_CRC_PRESET	common/iso15693tools.h	/^#define ISO15_CRC_PRESET	/;"	d
ISO15_ERROR_BLOCK_LOCKED	common/iso15693tools.h	/^#define ISO15_ERROR_BLOCK_LOCKED	/;"	d
ISO15_ERROR_BLOCK_LOCKED_ALREADY	common/iso15693tools.h	/^#define ISO15_ERROR_BLOCK_LOCKED_ALREADY	/;"	d
ISO15_ERROR_BLOCK_UNAVAILABLE	common/iso15693tools.h	/^#define ISO15_ERROR_BLOCK_UNAVAILABLE	/;"	d
ISO15_ERROR_BLOCK_WRITE	common/iso15693tools.h	/^#define ISO15_ERROR_BLOCK_WRITE	/;"	d
ISO15_ERROR_BLOCL_WRITELOCK	common/iso15693tools.h	/^#define ISO15_ERROR_BLOCL_WRITELOCK	/;"	d
ISO15_ERROR_CMD_NOT_REC	common/iso15693tools.h	/^#define ISO15_ERROR_CMD_NOT_REC	/;"	d
ISO15_ERROR_CMD_NOT_SUP	common/iso15693tools.h	/^#define ISO15_ERROR_CMD_NOT_SUP	/;"	d
ISO15_ERROR_CMD_OPTION	common/iso15693tools.h	/^#define ISO15_ERROR_CMD_OPTION	/;"	d
ISO15_ERROR_GENERIC	common/iso15693tools.h	/^#define ISO15_ERROR_GENERIC	/;"	d
ISO15_NOERROR	common/iso15693tools.h	/^#define ISO15_NOERROR	/;"	d
ISO15_REQINV_AFI	common/iso15693tools.h	/^#define ISO15_REQINV_AFI	/;"	d
ISO15_REQINV_OPTION	common/iso15693tools.h	/^#define ISO15_REQINV_OPTION	/;"	d
ISO15_REQINV_SLOT1	common/iso15693tools.h	/^#define ISO15_REQINV_SLOT1	/;"	d
ISO15_REQINV_SLOT16	common/iso15693tools.h	/^#define ISO15_REQINV_SLOT16	/;"	d
ISO15_REQ_ADDRESS	common/iso15693tools.h	/^#define ISO15_REQ_ADDRESS	/;"	d
ISO15_REQ_DATARATE_HIGH	common/iso15693tools.h	/^#define ISO15_REQ_DATARATE_HIGH	/;"	d
ISO15_REQ_DATARATE_LOW	common/iso15693tools.h	/^#define ISO15_REQ_DATARATE_LOW	/;"	d
ISO15_REQ_INVENTORY	common/iso15693tools.h	/^#define ISO15_REQ_INVENTORY	/;"	d
ISO15_REQ_NONINVENTORY	common/iso15693tools.h	/^#define ISO15_REQ_NONINVENTORY	/;"	d
ISO15_REQ_OPTION	common/iso15693tools.h	/^#define ISO15_REQ_OPTION	/;"	d
ISO15_REQ_PROTOCOL_EXT	common/iso15693tools.h	/^#define ISO15_REQ_PROTOCOL_EXT	/;"	d
ISO15_REQ_PROTOCOL_NONEXT	common/iso15693tools.h	/^#define ISO15_REQ_PROTOCOL_NONEXT	/;"	d
ISO15_REQ_SELECT	common/iso15693tools.h	/^#define ISO15_REQ_SELECT	/;"	d
ISO15_REQ_SUBCARRIER_SINGLE	common/iso15693tools.h	/^#define ISO15_REQ_SUBCARRIER_SINGLE	/;"	d
ISO15_REQ_SUBCARRIER_TWO	common/iso15693tools.h	/^#define ISO15_REQ_SUBCARRIER_TWO	/;"	d
ISO15_RES_ERROR	common/iso15693tools.h	/^#define ISO15_RES_ERROR	/;"	d
ISO15_RES_EXT	common/iso15693tools.h	/^#define ISO15_RES_EXT	/;"	d
ISO_14443A	client/cmdhf.c	/^#define ISO_14443A /;"	d	file:
ISO_14443B	client/cmdhf.c	/^#define ISO_14443B /;"	d	file:
InitGraphics	client/guidummy.c	/^void InitGraphics(int argc, char **argv) {}$/;"	f
InitGraphics	client/proxgui.cpp	/^extern "C" void InitGraphics(int argc, char **argv)$/;"	f
Instruction	liblua/llimits.h	/^typedef lu_int32 Instruction;$/;"	t
IntPoint	liblua/llimits.h	/^#define IntPoint(/;"	d
IsBlock0PCF7931	armsrc/lfops.c	/^int IsBlock0PCF7931(uint8_t *Block) {$/;"	f
IsBlock1PCF7931	armsrc/lfops.c	/^int IsBlock1PCF7931(uint8_t *Block) {$/;"	f
IsManchesterModulationNibble1	armsrc/iso14443a.c	/^#define IsManchesterModulationNibble1(/;"	d	file:
IsManchesterModulationNibble2	armsrc/iso14443a.c	/^#define IsManchesterModulationNibble2(/;"	d	file:
IsMillerModulationNibble1	armsrc/iso14443a.c	/^#define IsMillerModulationNibble1(/;"	d	file:
IsMillerModulationNibble2	armsrc/iso14443a.c	/^#define IsMillerModulationNibble2(/;"	d	file:
Iso15693AddCrc	common/iso15693tools.c	/^int Iso15693AddCrc(uint8_t *req, int n) {$/;"	f
Iso15693Crc	common/iso15693tools.c	/^uint16_t Iso15693Crc(uint8_t *v, int n)$/;"	f
Iso15693FrameEOF	common/iso15693tools.h	/^	static const int Iso15693FrameEOF[] = {$/;"	v
Iso15693FrameSOF	common/iso15693tools.h	/^	static const int Iso15693FrameSOF[] = {$/;"	v
Iso15693InitReader	armsrc/iso15693.c	/^void Iso15693InitReader() {$/;"	f
Iso15693Logic0	common/iso15693tools.h	/^	static const int Iso15693Logic0[] = {$/;"	v
Iso15693Logic1	common/iso15693tools.h	/^	static const int Iso15693Logic1[] = {$/;"	v
Iso15693sprintUID	common/iso15693tools.c	/^char* Iso15693sprintUID(char *target,uint8_t *uid) {$/;"	f
Iv	armsrc/aes.h	/^ unsigned int Iv[4];$/;"	m	struct:__anon1
KBx	liblua/lvm.c	/^#define KBx(/;"	d	file:
KEY128	armsrc/aes.h	/^#define KEY128 /;"	d
KEY192	armsrc/aes.h	/^#define KEY192 /;"	d
KEY256	armsrc/aes.h	/^#define KEY256 /;"	d
KGC_EMERGENCY	liblua/lstate.h	/^#define KGC_EMERGENCY	/;"	d
KGC_GEN	liblua/lstate.h	/^#define KGC_GEN	/;"	d
KGC_NORMAL	liblua/lstate.h	/^#define KGC_NORMAL	/;"	d
Key	client/mifarehost.h	/^	uint64_t Key[2];$/;"	m	struct:__anon50
L	armsrc/des.c	/^#define L /;"	d	file:
L	liblua/lauxlib.h	/^  lua_State *L;$/;"	m	struct:luaL_Buffer
L	liblua/ldump.c	/^ lua_State* L;$/;"	m	struct:__anon66	file:
L	liblua/llex.h	/^  struct lua_State *L;$/;"	m	struct:LexState	typeref:struct:LexState::lua_State
L	liblua/lstrlib.c	/^  lua_State *L;$/;"	m	struct:MatchState	file:
L	liblua/lundump.c	/^ lua_State* L;$/;"	m	struct:__anon84	file:
L	liblua/lzio.h	/^  lua_State *L;			\/* Lua state (for reader) *\/$/;"	m	struct:Zio
LCDFill	armsrc/LCD.c	/^void LCDFill (unsigned char xs,unsigned char ys,unsigned char width,unsigned char height, unsigned char color)$/;"	f
LCDInit	armsrc/LCD.c	/^void LCDInit(void)$/;"	f
LCDReset	armsrc/LCD.c	/^void LCDReset(void)$/;"	f
LCDSend	armsrc/LCD.c	/^void LCDSend(unsigned int data)$/;"	f
LCDSetPixel	armsrc/LCD.c	/^void LCDSetPixel(unsigned char x, unsigned char y, unsigned char color)$/;"	f
LCDSetXY	armsrc/LCD.c	/^void LCDSetXY(unsigned char x, unsigned char y)$/;"	f
LCDString	armsrc/LCD.c	/^void LCDString (char *lcd_string, const char *font_style,unsigned char x, unsigned char y, unsigned char fcolor, unsigned char bcolor)$/;"	f
LCD_XRES	armsrc/LCD.h	/^#define LCD_XRES	/;"	d
LCD_YRES	armsrc/LCD.h	/^#define LCD_YRES	/;"	d
LClosure	liblua/lobject.h	/^typedef struct LClosure {$/;"	s
LClosure	liblua/lobject.h	/^} LClosure;$/;"	t	typeref:struct:LClosure
LD	tools/mfkey/Makefile	/^LD = gcc$/;"	m
LD	tools/nonce2key/Makefile	/^LD = gcc$/;"	m
LDFLAGS	client/Makefile	/^LDFLAGS = $(COMMON_FLAGS)$/;"	m
LDFLAGS	client/hid-flasher/Makefile	/^LDFLAGS = $(COMMON_FLAGS)$/;"	m
LDFLAGS	liblua/Makefile	/^LDFLAGS= $(SYSLDFLAGS) $(MYLDFLAGS)$/;"	m
LDFLAGS	tools/mfkey/Makefile	/^LDFLAGS =$/;"	m
LDFLAGS	tools/nonce2key/Makefile	/^LDFLAGS =$/;"	m
LDLIBS	client/Makefile	/^LDLIBS = -L\/opt\/local\/lib -L\/usr\/local\/lib ..\/liblua\/liblua.a -lreadline -lpthread -lm$/;"	m
LDLIBS	client/Makefile	/^all-static: LDLIBS:=-static $(LDLIBS)$/;"	m
LDLIBS	client/hid-flasher/Makefile	/^LDLIBS = -L\/opt\/local\/lib -L\/usr\/local\/lib -lusb -lreadline -lpthread$/;"	m
LED	armsrc/util.c	/^void LED(int led, int ms)$/;"	f
LED_A_INV	include/proxmark3.h	/^#define LED_A_INV(/;"	d
LED_A_OFF	include/proxmark3.h	/^#define LED_A_OFF(/;"	d
LED_A_ON	include/proxmark3.h	/^#define LED_A_ON(/;"	d
LED_B_INV	include/proxmark3.h	/^#define LED_B_INV(/;"	d
LED_B_OFF	include/proxmark3.h	/^#define LED_B_OFF(/;"	d
LED_B_ON	include/proxmark3.h	/^#define LED_B_ON(/;"	d
LED_C_INV	include/proxmark3.h	/^#define LED_C_INV(/;"	d
LED_C_OFF	include/proxmark3.h	/^#define LED_C_OFF(/;"	d
LED_C_ON	include/proxmark3.h	/^#define LED_C_ON(/;"	d
LED_D_INV	include/proxmark3.h	/^#define LED_D_INV(/;"	d
LED_D_OFF	include/proxmark3.h	/^#define LED_D_OFF(/;"	d
LED_D_ON	include/proxmark3.h	/^#define LED_D_ON(/;"	d
LED_GREEN	armsrc/util.h	/^#define LED_GREEN /;"	d
LED_ORANGE	armsrc/util.h	/^#define LED_ORANGE /;"	d
LED_RED	armsrc/util.h	/^#define LED_RED /;"	d
LED_RED2	armsrc/util.h	/^#define LED_RED2 /;"	d
LEDsoff	armsrc/util.c	/^void LEDsoff()$/;"	f
LEVELS1	liblua/lauxlib.c	/^#define LEVELS1	/;"	d	file:
LEVELS2	liblua/lauxlib.c	/^#define LEVELS2	/;"	d	file:
LFDEMOD_H__	common/lfdemod.h	/^#define LFDEMOD_H__$/;"	d
LFIELDS_PER_FLUSH	liblua/lopcodes.h	/^#define LFIELDS_PER_FLUSH	/;"	d
LFSAMPLING_H	armsrc/lfsampling.h	/^#define LFSAMPLING_H$/;"	d
LFSetupFPGAForADC	armsrc/lfsampling.c	/^void LFSetupFPGAForADC(int divisor, bool lf_field)$/;"	f
LF_MARGINAL_V	client/cmddata.c	/^#define LF_MARGINAL_V	/;"	d	file:
LF_ONLY	armsrc/appmain.c	/^#define LF_ONLY	/;"	d	file:
LF_POLY_EVEN	armsrc/crapto1.h	/^#define LF_POLY_EVEN /;"	d
LF_POLY_EVEN	client/nonce2key/crapto1.h	/^#define LF_POLY_EVEN /;"	d
LF_POLY_EVEN	tools/mfkey/crapto1.h	/^#define LF_POLY_EVEN /;"	d
LF_POLY_EVEN	tools/nonce2key/crapto1.h	/^#define LF_POLY_EVEN /;"	d
LF_POLY_ODD	armsrc/crapto1.h	/^#define LF_POLY_ODD /;"	d
LF_POLY_ODD	client/nonce2key/crapto1.h	/^#define LF_POLY_ODD /;"	d
LF_POLY_ODD	tools/mfkey/crapto1.h	/^#define LF_POLY_ODD /;"	d
LF_POLY_ODD	tools/nonce2key/crapto1.h	/^#define LF_POLY_ODD /;"	d
LF_UNUSABLE_V	client/cmddata.c	/^#define LF_UNUSABLE_V	/;"	d	file:
LG	liblua/lstate.c	/^typedef struct LG {$/;"	s	file:
LG	liblua/lstate.c	/^} LG;$/;"	t	typeref:struct:LG	file:
LHS_assign	liblua/lparser.c	/^struct LHS_assign {$/;"	s	file:
LHs	client/loclass/des.c	/^static const uint32_t LHs[16] =$/;"	v	file:
LIBS	liblua/Makefile	/^LIBS= -lm $(SYSLIBS) $(MYLIBS)$/;"	m
LIBS	tools/mfkey/Makefile	/^LIBS =$/;"	m
LIB_FAIL	liblua/loadlib.c	/^#define LIB_FAIL	/;"	d	file:
LIB_FAIL	liblua/loadlib.c	/^#undef LIB_FAIL$/;"	d	file:
LIB_O	liblua/Makefile	/^LIB_O=	lauxlib.o lbaselib.o lbitlib.o lcorolib.o ldblib.o liolib.o \\$/;"	m
LIGHT_LEN	armsrc/appmain.c	/^static const int LIGHT_LEN = sizeof(LIGHT_SCHEME)\/sizeof(LIGHT_SCHEME[0]);$/;"	v	file:
LIGHT_SCHEME	armsrc/appmain.c	/^static const char LIGHT_SCHEME[] = {$/;"	v	file:
LINK.o	client/Makefile	/^LINK.o = $(LINK.cpp)$/;"	m
LITTLE_ENDIAN	client/proxendian.h	/^#  define LITTLE_ENDIAN /;"	d
LL	liblua/lobject.c	/^#define LL(/;"	d	file:
LOCLASS_MAIN_H	client/loclass/loclass_main.h	/^#define LOCLASS_MAIN_H$/;"	d
LOGICAL_SHIFT	client/pm3_bitlib.c	/^#define LOGICAL_SHIFT(/;"	d	file:
LONG_WAIT	client/cmdlf.c	/^#define LONG_WAIT /;"	d	file:
LOW	include/proxmark3.h	/^#define LOW(/;"	d
LStream	liblua/liolib.c	/^typedef luaL_Stream LStream;$/;"	t	file:
LUAC_HEADERSIZE	liblua/lundump.h	/^#define LUAC_HEADERSIZE	/;"	d
LUAC_O	liblua/Makefile	/^LUAC_O=	luac.o$/;"	m
LUAC_T	liblua/Makefile	/^LUAC_T=	luac$/;"	m
LUAC_TAIL	liblua/lundump.h	/^#define LUAC_TAIL	/;"	d
LUAI_BITSINT	liblua/luaconf.h	/^#define LUAI_BITSINT	/;"	d
LUAI_DDEC	liblua/luaconf.h	/^#define LUAI_DDEC	/;"	d
LUAI_DDEF	liblua/luaconf.h	/^#define LUAI_DDEF	/;"	d
LUAI_EXTRAIEEE	liblua/llimits.h	/^#define LUAI_EXTRAIEEE	/;"	d
LUAI_FIRSTPSEUDOIDX	liblua/luaconf.h	/^#define LUAI_FIRSTPSEUDOIDX	/;"	d
LUAI_FUNC	liblua/luaconf.h	/^#define LUAI_FUNC	/;"	d
LUAI_GCMAJOR	liblua/lstate.c	/^#define LUAI_GCMAJOR	/;"	d	file:
LUAI_GCMUL	liblua/lstate.c	/^#define LUAI_GCMUL	/;"	d	file:
LUAI_GCPAUSE	liblua/lstate.c	/^#define LUAI_GCPAUSE	/;"	d	file:
LUAI_HASHLIMIT	liblua/lstring.c	/^#define LUAI_HASHLIMIT	/;"	d	file:
LUAI_MAXCCALLS	liblua/llimits.h	/^#define LUAI_MAXCCALLS	/;"	d
LUAI_MAXNUMBER2STR	liblua/luaconf.h	/^#define LUAI_MAXNUMBER2STR	/;"	d
LUAI_MAXSHORTLEN	liblua/luaconf.h	/^#define LUAI_MAXSHORTLEN /;"	d
LUAI_MAXSTACK	liblua/luaconf.h	/^#define LUAI_MAXSTACK	/;"	d
LUAI_MEM	liblua/luaconf.h	/^#define LUAI_MEM	/;"	d
LUAI_THROW	liblua/ldo.c	/^#define LUAI_THROW(/;"	d	file:
LUAI_TRY	liblua/ldo.c	/^#define LUAI_TRY(/;"	d	file:
LUAI_UACNUMBER	liblua/luaconf.h	/^#define LUAI_UACNUMBER	/;"	d
LUAI_UMEM	liblua/luaconf.h	/^#define LUAI_UMEM	/;"	d
LUAI_USER_ALIGNMENT_T	liblua/llimits.h	/^#define LUAI_USER_ALIGNMENT_T	/;"	d
LUALIB_API	liblua/luaconf.h	/^#define LUALIB_API	/;"	d
LUAL_BUFFERSIZE	liblua/luaconf.h	/^#define LUAL_BUFFERSIZE	/;"	d
LUAMOD_API	liblua/luaconf.h	/^#define LUAMOD_API	/;"	d
LUAPLATFORM	client/Makefile	/^LUAPLATFORM = generic$/;"	m
LUAPLATFORM	client/Makefile	/^LUAPLATFORM = linux$/;"	m
LUAPLATFORM	client/Makefile	/^LUAPLATFORM = macosx$/;"	m
LUAPLATFORM	client/Makefile	/^LUAPLATFORM = mingw$/;"	m
LUA_A	liblua/Makefile	/^LUA_A=	liblua.a$/;"	m
LUA_ANSI	liblua/luaconf.h	/^#define LUA_ANSI$/;"	d
LUA_API	liblua/luaconf.h	/^#define LUA_API	/;"	d
LUA_API	liblua/luaconf.h	/^#define LUA_API /;"	d
LUA_AUTHORS	liblua/lua.h	/^#define LUA_AUTHORS	/;"	d
LUA_BITLIBNAME	liblua/lualib.h	/^#define LUA_BITLIBNAME	/;"	d
LUA_CDIR	liblua/luaconf.h	/^#define LUA_CDIR	/;"	d
LUA_COLIBNAME	liblua/lualib.h	/^#define LUA_COLIBNAME	/;"	d
LUA_COMPAT_LOADERS	liblua/luaconf.h	/^#define LUA_COMPAT_LOADERS$/;"	d
LUA_COMPAT_LOADSTRING	liblua/luaconf.h	/^#define LUA_COMPAT_LOADSTRING$/;"	d
LUA_COMPAT_LOG10	liblua/luaconf.h	/^#define LUA_COMPAT_LOG10$/;"	d
LUA_COMPAT_MAXN	liblua/luaconf.h	/^#define LUA_COMPAT_MAXN$/;"	d
LUA_COMPAT_MODULE	liblua/luaconf.h	/^#define LUA_COMPAT_MODULE$/;"	d
LUA_COMPAT_UNPACK	liblua/luaconf.h	/^#define LUA_COMPAT_UNPACK$/;"	d
LUA_COPYRIGHT	liblua/lua.h	/^#define LUA_COPYRIGHT	/;"	d
LUA_CORE	liblua/lapi.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	liblua/lcode.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	liblua/lctype.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	liblua/ldebug.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	liblua/ldo.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	liblua/ldump.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	liblua/lfunc.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	liblua/lgc.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	liblua/llex.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	liblua/lmem.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	liblua/lobject.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	liblua/lopcodes.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	liblua/lparser.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	liblua/lstate.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	liblua/lstring.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	liblua/ltable.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	liblua/ltm.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	liblua/luac.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	liblua/lundump.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	liblua/lvm.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	liblua/lzio.c	/^#define LUA_CORE$/;"	d	file:
LUA_CPATH	liblua/loadlib.c	/^#define LUA_CPATH	/;"	d	file:
LUA_CPATHVERSION	liblua/loadlib.c	/^#define LUA_CPATHVERSION	/;"	d	file:
LUA_CPATH_DEFAULT	liblua/luaconf.h	/^#define LUA_CPATH_DEFAULT /;"	d
LUA_CSUBSEP	liblua/loadlib.c	/^#define LUA_CSUBSEP	/;"	d	file:
LUA_DBLIBNAME	liblua/lualib.h	/^#define LUA_DBLIBNAME	/;"	d
LUA_DIRSEP	liblua/luaconf.h	/^#define LUA_DIRSEP	/;"	d
LUA_DL_DLL	liblua/luaconf.h	/^#define LUA_DL_DLL$/;"	d
LUA_ENV	liblua/luaconf.h	/^#define LUA_ENV	/;"	d
LUA_ERRERR	liblua/lua.h	/^#define LUA_ERRERR	/;"	d
LUA_ERRFILE	liblua/lauxlib.h	/^#define LUA_ERRFILE /;"	d
LUA_ERRGCMM	liblua/lua.h	/^#define LUA_ERRGCMM	/;"	d
LUA_ERRMEM	liblua/lua.h	/^#define LUA_ERRMEM	/;"	d
LUA_ERRRUN	liblua/lua.h	/^#define LUA_ERRRUN	/;"	d
LUA_ERRSYNTAX	liblua/lua.h	/^#define LUA_ERRSYNTAX	/;"	d
LUA_EXEC_DIR	liblua/loadlib.c	/^#define LUA_EXEC_DIR	/;"	d	file:
LUA_FILEHANDLE	liblua/lauxlib.h	/^#define LUA_FILEHANDLE /;"	d
LUA_FLTFRMLEN	liblua/lstrlib.c	/^#define LUA_FLTFRMLEN	/;"	d	file:
LUA_FLTFRM_T	liblua/lstrlib.c	/^#define LUA_FLTFRM_T	/;"	d	file:
LUA_GCCOLLECT	liblua/lua.h	/^#define LUA_GCCOLLECT	/;"	d
LUA_GCCOUNT	liblua/lua.h	/^#define LUA_GCCOUNT	/;"	d
LUA_GCCOUNTB	liblua/lua.h	/^#define LUA_GCCOUNTB	/;"	d
LUA_GCGEN	liblua/lua.h	/^#define LUA_GCGEN	/;"	d
LUA_GCINC	liblua/lua.h	/^#define LUA_GCINC	/;"	d
LUA_GCISRUNNING	liblua/lua.h	/^#define LUA_GCISRUNNING	/;"	d
LUA_GCRESTART	liblua/lua.h	/^#define LUA_GCRESTART	/;"	d
LUA_GCSETMAJORINC	liblua/lua.h	/^#define LUA_GCSETMAJORINC	/;"	d
LUA_GCSETPAUSE	liblua/lua.h	/^#define LUA_GCSETPAUSE	/;"	d
LUA_GCSETSTEPMUL	liblua/lua.h	/^#define LUA_GCSETSTEPMUL	/;"	d
LUA_GCSTEP	liblua/lua.h	/^#define LUA_GCSTEP	/;"	d
LUA_GCSTOP	liblua/lua.h	/^#define LUA_GCSTOP	/;"	d
LUA_HOOKCALL	liblua/lua.h	/^#define LUA_HOOKCALL	/;"	d
LUA_HOOKCOUNT	liblua/lua.h	/^#define LUA_HOOKCOUNT	/;"	d
LUA_HOOKLINE	liblua/lua.h	/^#define LUA_HOOKLINE	/;"	d
LUA_HOOKRET	liblua/lua.h	/^#define LUA_HOOKRET	/;"	d
LUA_HOOKTAILCALL	liblua/lua.h	/^#define LUA_HOOKTAILCALL /;"	d
LUA_IDSIZE	liblua/luaconf.h	/^#define LUA_IDSIZE	/;"	d
LUA_IEEE754TRICK	liblua/luaconf.h	/^#define LUA_IEEE754TRICK$/;"	d
LUA_IEEEENDIAN	liblua/luaconf.h	/^#define LUA_IEEEENDIAN	/;"	d
LUA_IEEEENDIANLOC	liblua/llimits.h	/^#define LUA_IEEEENDIANLOC	/;"	d
LUA_IEEELL	liblua/luaconf.h	/^#define LUA_IEEELL$/;"	d
LUA_IGMARK	liblua/loadlib.c	/^#define LUA_IGMARK	/;"	d	file:
LUA_INIT	liblua/lua.c	/^#define LUA_INIT	/;"	d	file:
LUA_INITVERSION	liblua/lua.c	/^#define LUA_INITVERSION /;"	d	file:
LUA_INT32	liblua/luaconf.h	/^#define LUA_INT32	/;"	d
LUA_INTEGER	liblua/luaconf.h	/^#define LUA_INTEGER	/;"	d
LUA_INTEGER_MAX	client/pm3_bitlib.c	/^#define LUA_INTEGER_MAX /;"	d	file:
LUA_INTEGER_MIN	client/pm3_bitlib.c	/^#define LUA_INTEGER_MIN /;"	d	file:
LUA_INTFRMLEN	liblua/lstrlib.c	/^#define LUA_INTFRMLEN	/;"	d	file:
LUA_INTFRM_T	liblua/lstrlib.c	/^#define LUA_INTFRM_T	/;"	d	file:
LUA_IOLIBNAME	liblua/lualib.h	/^#define LUA_IOLIBNAME	/;"	d
LUA_LDIR	liblua/luaconf.h	/^#define LUA_LDIR	/;"	d
LUA_LIB	liblua/lauxlib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	liblua/lbaselib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	liblua/lbitlib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	liblua/lcorolib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	liblua/ldblib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	liblua/linit.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	liblua/liolib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	liblua/lmathlib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	liblua/loadlib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	liblua/loslib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	liblua/lstrlib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	liblua/ltablib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LLE_FLAGS	liblua/loadlib.c	/^#define LUA_LLE_FLAGS	/;"	d	file:
LUA_LOADLIBNAME	liblua/lualib.h	/^#define LUA_LOADLIBNAME	/;"	d
LUA_LSUBSEP	liblua/loadlib.c	/^#define LUA_LSUBSEP	/;"	d	file:
LUA_MASKCALL	liblua/lua.h	/^#define LUA_MASKCALL	/;"	d
LUA_MASKCOUNT	liblua/lua.h	/^#define LUA_MASKCOUNT	/;"	d
LUA_MASKLINE	liblua/lua.h	/^#define LUA_MASKLINE	/;"	d
LUA_MASKRET	liblua/lua.h	/^#define LUA_MASKRET	/;"	d
LUA_MATHLIBNAME	liblua/lualib.h	/^#define LUA_MATHLIBNAME	/;"	d
LUA_MAXCAPTURES	liblua/lstrlib.c	/^#define LUA_MAXCAPTURES	/;"	d	file:
LUA_MAXINPUT	liblua/lua.c	/^#define LUA_MAXINPUT	/;"	d	file:
LUA_MINBUFFER	liblua/llimits.h	/^#define LUA_MINBUFFER	/;"	d
LUA_MINSTACK	liblua/lua.h	/^#define LUA_MINSTACK	/;"	d
LUA_MSASMTRICK	liblua/luaconf.h	/^#define LUA_MSASMTRICK$/;"	d
LUA_MULTRET	liblua/lua.h	/^#define LUA_MULTRET	/;"	d
LUA_NANTRICK	liblua/luaconf.h	/^#define LUA_NANTRICK$/;"	d
LUA_NBITS	liblua/lbitlib.c	/^#define LUA_NBITS	/;"	d	file:
LUA_NOREF	liblua/lauxlib.h	/^#define LUA_NOREF /;"	d
LUA_NUMBER	liblua/luaconf.h	/^#define LUA_NUMBER	/;"	d
LUA_NUMBER_DOUBLE	liblua/luaconf.h	/^#define LUA_NUMBER_DOUBLE$/;"	d
LUA_NUMBER_FMT	liblua/luaconf.h	/^#define LUA_NUMBER_FMT	/;"	d
LUA_NUMBER_SCAN	liblua/luaconf.h	/^#define LUA_NUMBER_SCAN	/;"	d
LUA_NUMTAGS	liblua/lua.h	/^#define LUA_NUMTAGS	/;"	d
LUA_O	liblua/Makefile	/^LUA_O=	lua.o$/;"	m
LUA_OFSEP	liblua/loadlib.c	/^#define LUA_OFSEP	/;"	d	file:
LUA_OK	liblua/lua.h	/^#define LUA_OK	/;"	d
LUA_OPADD	liblua/lua.h	/^#define LUA_OPADD	/;"	d
LUA_OPDIV	liblua/lua.h	/^#define LUA_OPDIV	/;"	d
LUA_OPEQ	liblua/lua.h	/^#define LUA_OPEQ	/;"	d
LUA_OPLE	liblua/lua.h	/^#define LUA_OPLE	/;"	d
LUA_OPLT	liblua/lua.h	/^#define LUA_OPLT	/;"	d
LUA_OPMOD	liblua/lua.h	/^#define LUA_OPMOD	/;"	d
LUA_OPMUL	liblua/lua.h	/^#define LUA_OPMUL	/;"	d
LUA_OPPOW	liblua/lua.h	/^#define LUA_OPPOW	/;"	d
LUA_OPSUB	liblua/lua.h	/^#define LUA_OPSUB	/;"	d
LUA_OPUNM	liblua/lua.h	/^#define LUA_OPUNM	/;"	d
LUA_OSLIBNAME	liblua/lualib.h	/^#define LUA_OSLIBNAME	/;"	d
LUA_PATH	liblua/loadlib.c	/^#define LUA_PATH	/;"	d	file:
LUA_PATHSUFFIX	liblua/loadlib.c	/^#define LUA_PATHSUFFIX	/;"	d	file:
LUA_PATHVERSION	liblua/loadlib.c	/^#define LUA_PATHVERSION	/;"	d	file:
LUA_PATH_DEFAULT	liblua/luaconf.h	/^#define LUA_PATH_DEFAULT /;"	d
LUA_PATH_MARK	liblua/loadlib.c	/^#define LUA_PATH_MARK	/;"	d	file:
LUA_PATH_SEP	liblua/loadlib.c	/^#define LUA_PATH_SEP	/;"	d	file:
LUA_POF	liblua/loadlib.c	/^#define LUA_POF	/;"	d	file:
LUA_PROGNAME	liblua/lua.c	/^#define LUA_PROGNAME	/;"	d	file:
LUA_PROMPT	liblua/lua.c	/^#define LUA_PROMPT	/;"	d	file:
LUA_PROMPT2	liblua/lua.c	/^#define LUA_PROMPT2	/;"	d	file:
LUA_QL	liblua/luaconf.h	/^#define LUA_QL(/;"	d
LUA_QS	liblua/luaconf.h	/^#define LUA_QS	/;"	d
LUA_REFNIL	liblua/lauxlib.h	/^#define LUA_REFNIL /;"	d
LUA_REGISTRYINDEX	liblua/lua.h	/^#define LUA_REGISTRYINDEX	/;"	d
LUA_RELEASE	liblua/lua.h	/^#define LUA_RELEASE	/;"	d
LUA_RIDX_GLOBALS	liblua/lua.h	/^#define LUA_RIDX_GLOBALS	/;"	d
LUA_RIDX_LAST	liblua/lua.h	/^#define LUA_RIDX_LAST	/;"	d
LUA_RIDX_MAINTHREAD	liblua/lua.h	/^#define LUA_RIDX_MAINTHREAD	/;"	d
LUA_ROOT	liblua/luaconf.h	/^#define LUA_ROOT	/;"	d
LUA_SIGNATURE	liblua/lua.h	/^#define LUA_SIGNATURE	/;"	d
LUA_STRFTIMEOPTIONS	liblua/loslib.c	/^#define LUA_STRFTIMEOPTIONS	/;"	d	file:
LUA_STRFTIMEOPTIONS	liblua/loslib.c	/^#define LUA_STRFTIMEOPTIONS /;"	d	file:
LUA_STRLIBNAME	liblua/lualib.h	/^#define LUA_STRLIBNAME	/;"	d
LUA_T	liblua/Makefile	/^LUA_T=	lua$/;"	m
LUA_TABLIBNAME	liblua/lualib.h	/^#define LUA_TABLIBNAME	/;"	d
LUA_TBOOLEAN	liblua/lua.h	/^#define LUA_TBOOLEAN	/;"	d
LUA_TCCL	liblua/lobject.h	/^#define LUA_TCCL	/;"	d
LUA_TDEADKEY	liblua/lobject.h	/^#define LUA_TDEADKEY	/;"	d
LUA_TFUNCTION	liblua/lua.h	/^#define LUA_TFUNCTION	/;"	d
LUA_TLCF	liblua/lobject.h	/^#define LUA_TLCF	/;"	d
LUA_TLCL	liblua/lobject.h	/^#define LUA_TLCL	/;"	d
LUA_TLIGHTUSERDATA	liblua/lua.h	/^#define LUA_TLIGHTUSERDATA	/;"	d
LUA_TLNGSTR	liblua/lobject.h	/^#define LUA_TLNGSTR	/;"	d
LUA_TMPNAMBUFSIZE	liblua/loslib.c	/^#define LUA_TMPNAMBUFSIZE	/;"	d	file:
LUA_TNIL	liblua/lua.h	/^#define LUA_TNIL	/;"	d
LUA_TNONE	liblua/lua.h	/^#define LUA_TNONE	/;"	d
LUA_TNUMBER	liblua/lua.h	/^#define LUA_TNUMBER	/;"	d
LUA_TOTALTAGS	liblua/lobject.h	/^#define LUA_TOTALTAGS	/;"	d
LUA_TPROTO	liblua/lobject.h	/^#define LUA_TPROTO	/;"	d
LUA_TSHRSTR	liblua/lobject.h	/^#define LUA_TSHRSTR	/;"	d
LUA_TSTRING	liblua/lua.h	/^#define LUA_TSTRING	/;"	d
LUA_TTABLE	liblua/lua.h	/^#define LUA_TTABLE	/;"	d
LUA_TTHREAD	liblua/lua.h	/^#define LUA_TTHREAD	/;"	d
LUA_TUPVAL	liblua/lobject.h	/^#define LUA_TUPVAL	/;"	d
LUA_TUSERDATA	liblua/lua.h	/^#define LUA_TUSERDATA	/;"	d
LUA_UINTEGER_MAX	client/pm3_bitlib.c	/^#define LUA_UINTEGER_MAX /;"	d	file:
LUA_UNSIGNED	liblua/luaconf.h	/^#define LUA_UNSIGNED	/;"	d
LUA_USE_AFORMAT	liblua/luaconf.h	/^#define LUA_USE_AFORMAT	/;"	d
LUA_USE_CTYPE	liblua/lctype.h	/^#define LUA_USE_CTYPE	/;"	d
LUA_USE_DLOPEN	liblua/luaconf.h	/^#define LUA_USE_DLOPEN	/;"	d
LUA_USE_GMTIME_R	liblua/luaconf.h	/^#define LUA_USE_GMTIME_R$/;"	d
LUA_USE_ISATTY	liblua/luaconf.h	/^#define LUA_USE_ISATTY$/;"	d
LUA_USE_LONGLONG	liblua/luaconf.h	/^#define LUA_USE_LONGLONG	/;"	d
LUA_USE_MKSTEMP	liblua/luaconf.h	/^#define LUA_USE_MKSTEMP$/;"	d
LUA_USE_POPEN	liblua/luaconf.h	/^#define LUA_USE_POPEN$/;"	d
LUA_USE_POSIX	liblua/luaconf.h	/^#define LUA_USE_POSIX$/;"	d
LUA_USE_READLINE	liblua/luaconf.h	/^#define LUA_USE_READLINE	/;"	d
LUA_USE_STRTODHEX	liblua/luaconf.h	/^#define LUA_USE_STRTODHEX	/;"	d
LUA_USE_ULONGJMP	liblua/luaconf.h	/^#define LUA_USE_ULONGJMP$/;"	d
LUA_VDIR	liblua/luaconf.h	/^#define LUA_VDIR	/;"	d
LUA_VERSION	liblua/lua.h	/^#define LUA_VERSION	/;"	d
LUA_VERSION_MAJOR	liblua/lua.h	/^#define LUA_VERSION_MAJOR	/;"	d
LUA_VERSION_MINOR	liblua/lua.h	/^#define LUA_VERSION_MINOR	/;"	d
LUA_VERSION_NUM	liblua/lua.h	/^#define LUA_VERSION_NUM	/;"	d
LUA_VERSION_RELEASE	liblua/lua.h	/^#define LUA_VERSION_RELEASE	/;"	d
LUA_WIN	liblua/luaconf.h	/^#define LUA_WIN	/;"	d
LUA_YIELD	liblua/lua.h	/^#define LUA_YIELD	/;"	d
LX	liblua/lstate.c	/^typedef struct LX {$/;"	s	file:
LX	liblua/lstate.c	/^} LX;$/;"	t	typeref:struct:LX	file:
L_ESC	liblua/lstrlib.c	/^#define L_ESC	/;"	d	file:
L_Umaxalign	liblua/llimits.h	/^typedef LUAI_USER_ALIGNMENT_T L_Umaxalign;$/;"	t
Labeldesc	liblua/lparser.h	/^typedef struct Labeldesc {$/;"	s
Labeldesc	liblua/lparser.h	/^} Labeldesc;$/;"	t	typeref:struct:Labeldesc
Labellist	liblua/lparser.h	/^typedef struct Labellist {$/;"	s
Labellist	liblua/lparser.h	/^} Labellist;$/;"	t	typeref:struct:Labellist
LastProxToAirDuration	armsrc/iso14443a.c	/^static uint32_t LastProxToAirDuration;$/;"	v	file:
LastTimeProxToAirStart	armsrc/iso14443a.c	/^static uint32_t LastTimeProxToAirStart;$/;"	v	file:
LegicCRC	armsrc/legicrf.c	/^static int LegicCRC(int byte_index, int value, int cmd_sz) {$/;"	f	file:
LegicCommonInit	armsrc/legicrf.c	/^static void LegicCommonInit(void) {$/;"	f	file:
LegicRfReader	armsrc/legicrf.c	/^int LegicRfReader(int offset, int bytes) {$/;"	f
LegicRfSimulate	armsrc/legicrf.c	/^void LegicRfSimulate(int phase, int frame, int reqresp)$/;"	f
LegicRfWriter	armsrc/legicrf.c	/^void LegicRfWriter(int bytes, int offset) {$/;"	f
LexState	liblua/llex.h	/^typedef struct LexState {$/;"	s
LexState	liblua/llex.h	/^} LexState;$/;"	t	typeref:struct:LexState
ListenReaderField	armsrc/appmain.c	/^void ListenReaderField(int limit)$/;"	f
LoadBlock	liblua/lundump.c	/^static void LoadBlock(LoadState* S, void* b, size_t size)$/;"	f	file:
LoadByte	liblua/lundump.c	/^#define LoadByte(/;"	d	file:
LoadChar	liblua/lundump.c	/^static int LoadChar(LoadState* S)$/;"	f	file:
LoadCode	liblua/lundump.c	/^static void LoadCode(LoadState* S, Proto* f)$/;"	f	file:
LoadConstants	liblua/lundump.c	/^static void LoadConstants(LoadState* S, Proto* f)$/;"	f	file:
LoadDebug	liblua/lundump.c	/^static void LoadDebug(LoadState* S, Proto* f)$/;"	f	file:
LoadEmulator	client/scripts/tnp3sim.lua	/^local function LoadEmulator(blocks)$/;"	f
LoadF	liblua/lauxlib.c	/^typedef struct LoadF {$/;"	s	file:
LoadF	liblua/lauxlib.c	/^} LoadF;$/;"	t	typeref:struct:LoadF	file:
LoadFunction	liblua/lundump.c	/^static void LoadFunction(LoadState* S, Proto* f)$/;"	f	file:
LoadHeader	liblua/lundump.c	/^static void LoadHeader(LoadState* S)$/;"	f	file:
LoadInt	liblua/lundump.c	/^static int LoadInt(LoadState* S)$/;"	f	file:
LoadMem	liblua/lundump.c	/^#define LoadMem(/;"	d	file:
LoadNumber	liblua/lundump.c	/^static lua_Number LoadNumber(LoadState* S)$/;"	f	file:
LoadS	liblua/lauxlib.c	/^typedef struct LoadS {$/;"	s	file:
LoadS	liblua/lauxlib.c	/^} LoadS;$/;"	t	typeref:struct:LoadS	file:
LoadState	liblua/lundump.c	/^} LoadState;$/;"	t	typeref:struct:__anon84	file:
LoadString	liblua/lundump.c	/^static TString* LoadString(LoadState* S)$/;"	f	file:
LoadUpvalues	liblua/lundump.c	/^static void LoadUpvalues(LoadState* S, Proto* f)$/;"	f	file:
LoadVar	liblua/lundump.c	/^#define LoadVar(/;"	d	file:
LoadVector	liblua/lundump.c	/^#define LoadVector(/;"	d	file:
LocVar	liblua/lobject.h	/^typedef struct LocVar {$/;"	s
LocVar	liblua/lobject.h	/^} LocVar;$/;"	t	typeref:struct:LocVar
LogReceiveTrace	armsrc/iso14443a.c	/^int LogReceiveTrace(){$/;"	f
LogTrace	armsrc/BigBuf.c	/^bool RAMFUNC LogTrace(const uint8_t *btBytes, uint16_t iLen, uint32_t timestamp_start, uint32_t timestamp_end, uint8_t *parity, bool readerToTag)$/;"	f
LogTraceHitag	armsrc/BigBuf.c	/^int LogTraceHitag(const uint8_t * btBytes, int iBits, int iSamples, uint32_t dwParity, int readerToTag)$/;"	f
LogTransmitTrace	armsrc/iso14443a.c	/^int LogTransmitTrace(){$/;"	f
Logic0	armsrc/iso15693.c	/^#define Logic0 /;"	d	file:
Logic0	client/cmdhf15.c	/^#define Logic0	/;"	d	file:
Logic1	armsrc/iso15693.c	/^#define Logic1 /;"	d	file:
Logic1	client/cmdhf15.c	/^#define Logic1	/;"	d	file:
MAC	client/loclass/cipher.c	/^void MAC(uint8_t* k, BitstreamIn input, BitstreamOut out)$/;"	f
MAGENTA	armsrc/LCD.h	/^#define MAGENTA	/;"	d
MAKE_SOFT_DECISION	armsrc/iso14443.c	/^#define MAKE_SOFT_DECISION(/;"	d	file:
MASK	liblua/lctype.h	/^#define MASK(/;"	d
MASK0	liblua/lopcodes.h	/^#define MASK0(/;"	d
MASK1	liblua/lopcodes.h	/^#define MASK1(/;"	d
MAX	client/util.h	/^# define MAX(/;"	d
MAX	common/usb_cdc.c	/^#define MAX(/;"	d	file:
MAX	include/common.h	/^# define MAX(/;"	d
MAXARG_A	liblua/lopcodes.h	/^#define MAXARG_A /;"	d
MAXARG_Ax	liblua/lopcodes.h	/^#define MAXARG_Ax	/;"	d
MAXARG_B	liblua/lopcodes.h	/^#define MAXARG_B /;"	d
MAXARG_Bx	liblua/lopcodes.h	/^#define MAXARG_Bx /;"	d
MAXARG_C	liblua/lopcodes.h	/^#define MAXARG_C /;"	d
MAXARG_sBx	liblua/lopcodes.h	/^#define MAXARG_sBx /;"	d
MAXASIZE	liblua/ltable.c	/^#define MAXASIZE	/;"	d	file:
MAXBITS	liblua/ltable.c	/^#define MAXBITS	/;"	d	file:
MAXCCALLS	liblua/lstrlib.c	/^#define MAXCCALLS	/;"	d	file:
MAXINDEXRK	liblua/lopcodes.h	/^#define MAXINDEXRK	/;"	d
MAXNBUF	armsrc/printf.c	/^#define MAXNBUF	/;"	d	file:
MAXSIZE	liblua/lstrlib.c	/^#define MAXSIZE	/;"	d	file:
MAXSTACK	liblua/llimits.h	/^#define MAXSTACK	/;"	d
MAXTAGLOOP	liblua/lvm.c	/^#define MAXTAGLOOP	/;"	d	file:
MAXUPVAL	liblua/llimits.h	/^#define MAXUPVAL	/;"	d
MAXVARS	liblua/lparser.c	/^#define MAXVARS	/;"	d	file:
MAX_ADC_HF_VOLTAGE	armsrc/apps.h	/^#define MAX_ADC_HF_VOLTAGE /;"	d
MAX_ADC_LF_VOLTAGE	armsrc/apps.h	/^#define MAX_ADC_LF_VOLTAGE /;"	d
MAX_DEMOD_BUF_LEN	client/cmddata.h	/^#define MAX_DEMOD_BUF_LEN /;"	d
MAX_FILES	client/flasher.c	/^#define MAX_FILES /;"	d	file:
MAX_FILES	client/hid-flasher/flasher.c	/^#define MAX_FILES /;"	d	file:
MAX_FORMAT	liblua/lstrlib.c	/^#define MAX_FORMAT	/;"	d	file:
MAX_FRAME_SIZE	armsrc/BigBuf.h	/^#define MAX_FRAME_SIZE	/;"	d
MAX_GRAPH_TRACE_LEN	client/graph.h	/^#define MAX_GRAPH_TRACE_LEN /;"	d
MAX_GRAPH_TRACE_LEN	client/proxgui.h	/^#define MAX_GRAPH_TRACE_LEN /;"	d
MAX_INT	liblua/llimits.h	/^#define MAX_INT /;"	d
MAX_ITEM	liblua/lstrlib.c	/^#define MAX_ITEM	/;"	d	file:
MAX_LMEM	liblua/llimits.h	/^#define MAX_LMEM	/;"	d
MAX_LUMEM	liblua/llimits.h	/^#define MAX_LUMEM	/;"	d
MAX_MIFARE_FRAME_SIZE	armsrc/BigBuf.h	/^#define MAX_MIFARE_FRAME_SIZE	/;"	d
MAX_MIFARE_PARITY_SIZE	armsrc/BigBuf.h	/^#define MAX_MIFARE_PARITY_SIZE	/;"	d
MAX_PARITY_SIZE	armsrc/BigBuf.h	/^#define MAX_PARITY_SIZE	/;"	d
MAX_SIZET	liblua/llimits.h	/^#define MAX_SIZET	/;"	d
MAX_SIZE_T	liblua/liolib.c	/^#define MAX_SIZE_T	/;"	d	file:
MAX_TIMEOUT	client/cmdhf14a.c	/^	    #define MAX_TIMEOUT /;"	d	file:
MAX_ULTRAC_BLOCKS	client/cmdhfmfu.c	/^#define MAX_ULTRAC_BLOCKS /;"	d	file:
MAX_ULTRA_BLOCKS	client/cmdhfmfu.c	/^#define MAX_ULTRA_BLOCKS /;"	d	file:
MC0_FCR	include/at91sam7s512.h	/^	AT91_REG	 MC0_FCR; 	\/\/ MC Flash Command Register$/;"	m	struct:_AT91S_MC
MC0_FMR	include/at91sam7s512.h	/^	AT91_REG	 MC0_FMR; 	\/\/ MC Flash Mode Register$/;"	m	struct:_AT91S_MC
MC0_FSR	include/at91sam7s512.h	/^	AT91_REG	 MC0_FSR; 	\/\/ MC Flash Status Register$/;"	m	struct:_AT91S_MC
MC0_VR	include/at91sam7s512.h	/^	AT91_REG	 MC0_VR; 	\/\/ MC Flash Version Register$/;"	m	struct:_AT91S_MC
MC1_FCR	include/at91sam7s512.h	/^	AT91_REG	 MC1_FCR; 	\/\/ MC Flash Command Register$/;"	m	struct:_AT91S_MC
MC1_FMR	include/at91sam7s512.h	/^	AT91_REG	 MC1_FMR; 	\/\/ MC Flash Mode Register$/;"	m	struct:_AT91S_MC
MC1_FSR	include/at91sam7s512.h	/^	AT91_REG	 MC1_FSR; 	\/\/ MC Flash Status Register$/;"	m	struct:_AT91S_MC
MC1_VR	include/at91sam7s512.h	/^	AT91_REG	 MC1_VR; 	\/\/ MC Flash Version Register$/;"	m	struct:_AT91S_MC
MC_AASR	include/at91sam7s512.h	/^	AT91_REG	 MC_AASR; 	\/\/ MC Abort Address Status Register$/;"	m	struct:_AT91S_MC
MC_AASR	include/at91sam7s512.h	/^#define MC_AASR /;"	d
MC_ASR	include/at91sam7s512.h	/^	AT91_REG	 MC_ASR; 	\/\/ MC Abort Status Register$/;"	m	struct:_AT91S_MC
MC_ASR	include/at91sam7s512.h	/^#define MC_ASR /;"	d
MC_FCR	include/at91sam7s512.h	/^#define MC_FCR /;"	d
MC_FLASH_COMMAND_KEY	include/proxmark3.h	/^#define MC_FLASH_COMMAND_KEY	/;"	d
MC_FLASH_COMMAND_PAGEN	include/proxmark3.h	/^#define MC_FLASH_COMMAND_PAGEN(/;"	d
MC_FLASH_MODE_FLASH_WAIT_STATES	include/proxmark3.h	/^#define MC_FLASH_MODE_FLASH_WAIT_STATES(/;"	d
MC_FLASH_MODE_MASTER_CLK_IN_MHZ	include/proxmark3.h	/^#define MC_FLASH_MODE_MASTER_CLK_IN_MHZ(/;"	d
MC_FMR	include/at91sam7s512.h	/^#define MC_FMR /;"	d
MC_FSR	include/at91sam7s512.h	/^#define MC_FSR /;"	d
MC_PUER	include/at91sam7s512.h	/^	AT91_REG	 MC_PUER; 	\/\/ MC Protection Unit Enable Register$/;"	m	struct:_AT91S_MC
MC_PUER	include/at91sam7s512.h	/^#define MC_PUER /;"	d
MC_PUIA	include/at91sam7s512.h	/^	AT91_REG	 MC_PUIA[16]; 	\/\/ MC Protection Unit Area$/;"	m	struct:_AT91S_MC
MC_PUIA	include/at91sam7s512.h	/^#define MC_PUIA /;"	d
MC_PUP	include/at91sam7s512.h	/^	AT91_REG	 MC_PUP; 	\/\/ MC Protection Unit Peripherals$/;"	m	struct:_AT91S_MC
MC_PUP	include/at91sam7s512.h	/^#define MC_PUP /;"	d
MC_RCR	include/at91sam7s512.h	/^	AT91_REG	 MC_RCR; 	\/\/ MC Remap Control Register$/;"	m	struct:_AT91S_MC
MC_RCR	include/at91sam7s512.h	/^#define MC_RCR /;"	d
MC_VR	include/at91sam7s512.h	/^#define MC_VR /;"	d
MEMERRMSG	liblua/lstate.c	/^#define MEMERRMSG	/;"	d	file:
MEM_CHUNK	client/mifarehost.h	/^#define MEM_CHUNK /;"	d
MFEMUL_AUTH1	armsrc/mifareutil.h	/^#define MFEMUL_AUTH1 /;"	d
MFEMUL_AUTH2	armsrc/mifareutil.h	/^#define MFEMUL_AUTH2 /;"	d
MFEMUL_HALTED	armsrc/mifareutil.h	/^#define MFEMUL_HALTED /;"	d
MFEMUL_IDLE	armsrc/mifareutil.h	/^#define MFEMUL_IDLE /;"	d
MFEMUL_INTREG_DEC	armsrc/mifareutil.h	/^#define MFEMUL_INTREG_DEC /;"	d
MFEMUL_INTREG_INC	armsrc/mifareutil.h	/^#define MFEMUL_INTREG_INC /;"	d
MFEMUL_INTREG_REST	armsrc/mifareutil.h	/^#define MFEMUL_INTREG_REST /;"	d
MFEMUL_NOFIELD	armsrc/mifareutil.h	/^#define MFEMUL_NOFIELD /;"	d
MFEMUL_SELECT1	armsrc/mifareutil.h	/^#define MFEMUL_SELECT1 /;"	d
MFEMUL_SELECT2	armsrc/mifareutil.h	/^#define MFEMUL_SELECT2 /;"	d
MFEMUL_WORK	armsrc/mifareutil.h	/^#define MFEMUL_WORK	/;"	d
MFEMUL_WRITEBL2	armsrc/mifareutil.h	/^#define MFEMUL_WRITEBL2 /;"	d
MF_DBGLEVEL	armsrc/mifareutil.c	/^int MF_DBGLEVEL = MF_DBG_ALL;$/;"	v
MF_DBG_ALL	armsrc/mifareutil.h	/^#define MF_DBG_ALL /;"	d
MF_DBG_ERROR	armsrc/mifareutil.h	/^#define MF_DBG_ERROR /;"	d
MF_DBG_EXTENDED	armsrc/mifareutil.h	/^#define MF_DBG_EXTENDED /;"	d
MF_DBG_NONE	armsrc/mifareutil.h	/^#define MF_DBG_NONE /;"	d
MF_MINFIELDV	armsrc/mifareutil.h	/^#define MF_MINFIELDV /;"	d
MIFARE_AUTH_KEYA	client/cmdhf.c	/^#define MIFARE_AUTH_KEYA	/;"	d	file:
MIFARE_AUTH_KEYB	client/cmdhf.c	/^#define MIFARE_AUTH_KEYB	/;"	d	file:
MIFARE_CMD_DEC	client/cmdhf.c	/^#define MIFARE_CMD_DEC /;"	d	file:
MIFARE_CMD_INC	client/cmdhf.c	/^#define MIFARE_CMD_INC /;"	d	file:
MIFARE_CMD_RESTORE	client/cmdhf.c	/^#define MIFARE_CMD_RESTORE /;"	d	file:
MIFARE_CMD_TRANSFER	client/cmdhf.c	/^#define MIFARE_CMD_TRANSFER /;"	d	file:
MIFARE_MAGICMODE	client/cmdhf.c	/^#define MIFARE_MAGICMODE	/;"	d	file:
MIFARE_ULC_AUTH_1	client/cmdhf.c	/^#define MIFARE_ULC_AUTH_1 /;"	d	file:
MIFARE_ULC_AUTH_2	client/cmdhf.c	/^#define MIFARE_ULC_AUTH_2 /;"	d	file:
MIFARE_ULC_WRITE	client/cmdhf.c	/^#define MIFARE_ULC_WRITE /;"	d	file:
MIN	client/util.h	/^# define MIN(/;"	d
MIN	common/usb_cdc.c	/^#define MIN(/;"	d	file:
MIN	include/common.h	/^# define MIN(/;"	d
MINSIZEARRAY	liblua/lmem.c	/^#define MINSIZEARRAY	/;"	d	file:
MINSTRTABSIZE	liblua/llimits.h	/^#define MINSTRTABSIZE	/;"	d
MOC	client/Makefile	/^MOC = $(QTDIR)\/bin\/moc$/;"	m
MOC	client/Makefile	/^MOC = $(shell pkg-config --variable=moc_location QtCore)$/;"	m
MOD_BOTH_HALVES	armsrc/iso14443a.h	/^	MOD_BOTH_HALVES$/;"	e	enum:__anon19
MOD_FIRST_HALF	armsrc/iso14443a.h	/^	MOD_FIRST_HALF,$/;"	e	enum:__anon19
MOD_NOMOD	armsrc/iso14443a.h	/^	MOD_NOMOD = 0,$/;"	e	enum:__anon19
MOD_SECOND_HALF	armsrc/iso14443a.h	/^	MOD_SECOND_HALF,$/;"	e	enum:__anon19
MONADIC	client/pm3_bitlib.c	/^#define MONADIC(/;"	d	file:
MUL	client/aes.c	/^#define MUL(/;"	d	file:
MYCFLAGS	liblua/Makefile	/^MYCFLAGS=$/;"	m
MYINT	liblua/lundump.c	/^#define MYINT(/;"	d	file:
MYK	liblua/luac.c	/^#define MYK(/;"	d	file:
MYLDFLAGS	liblua/Makefile	/^MYLDFLAGS=$/;"	m
MYLIBS	liblua/Makefile	/^MYLIBS=$/;"	m
MYOBJS	liblua/Makefile	/^MYOBJS=$/;"	m
MainGraphics	client/guidummy.c	/^void MainGraphics() {}$/;"	f
MainGraphics	client/proxgui.cpp	/^extern "C" void MainGraphics(void)$/;"	f
MainLoop	client/proxguiqt.cpp	/^void ProxGuiQT::MainLoop()$/;"	f	class:ProxGuiQT
ManchesterDecoding	armsrc/iclass.c	/^static RAMFUNC int ManchesterDecoding(int v)$/;"	f	file:
ManchesterDecoding	armsrc/iso14443a.c	/^static RAMFUNC int ManchesterDecoding(uint8_t bit, uint16_t offset, uint32_t non_real_time)$/;"	f	file:
ManchesterEncode	common/lfdemod.c	/^int ManchesterEncode(uint8_t *BitStream, size_t size)$/;"	f
MatchState	liblua/lstrlib.c	/^typedef struct MatchState {$/;"	s	file:
MatchState	liblua/lstrlib.c	/^} MatchState;$/;"	t	typeref:struct:MatchState	file:
Mbuffer	liblua/lzio.h	/^typedef struct Mbuffer {$/;"	s
Mbuffer	liblua/lzio.h	/^} Mbuffer;$/;"	t	typeref:struct:Mbuffer
MeasureAntennaTuning	armsrc/appmain.c	/^void MeasureAntennaTuning(void)$/;"	f
MeasureAntennaTuningHf	armsrc/appmain.c	/^void MeasureAntennaTuningHf(void)$/;"	f
MfSniffEnd	armsrc/mifaresniff.c	/^bool MfSniffEnd(void){$/;"	f
MfSniffInit	armsrc/mifaresniff.c	/^bool MfSniffInit(void){$/;"	f
MfSniffLogic	armsrc/mifaresniff.c	/^bool RAMFUNC MfSniffLogic(const uint8_t *data, uint16_t len, uint8_t *parity, uint16_t bitCnt, bool reader) {$/;"	f
MfSniffSend	armsrc/mifaresniff.c	/^bool RAMFUNC MfSniffSend(uint16_t maxTimeoutMs) {$/;"	f
Mifare1ksim	armsrc/iso14443a.c	/^void Mifare1ksim(uint8_t flags, uint8_t exitAfterNReads, uint8_t arg2, uint8_t *datain)$/;"	f
MifareCGetBlock	armsrc/mifarecmd.c	/^void MifareCGetBlock(uint32_t arg0, uint32_t arg1, uint32_t arg2, uint8_t *datain){$/;"	f
MifareCIdent	armsrc/mifarecmd.c	/^void MifareCIdent(){$/;"	f
MifareCSetBlock	armsrc/mifarecmd.c	/^void MifareCSetBlock(uint32_t arg0, uint32_t arg1, uint32_t arg2, uint8_t *datain){$/;"	f
MifareChkKeys	armsrc/mifarecmd.c	/^void MifareChkKeys(uint8_t arg0, uint8_t arg1, uint8_t arg2, uint8_t *datain)$/;"	f
MifareECardLoad	armsrc/mifarecmd.c	/^void MifareECardLoad(uint32_t arg0, uint32_t arg1, uint32_t arg2, uint8_t *datain){$/;"	f
MifareEMemClr	armsrc/mifarecmd.c	/^void MifareEMemClr(uint32_t arg0, uint32_t arg1, uint32_t arg2, uint8_t *datain){$/;"	f
MifareEMemGet	armsrc/mifarecmd.c	/^void MifareEMemGet(uint32_t arg0, uint32_t arg1, uint32_t arg2, uint8_t *datain){$/;"	f
MifareEMemSet	armsrc/mifarecmd.c	/^void MifareEMemSet(uint32_t arg0, uint32_t arg1, uint32_t arg2, uint8_t *datain){$/;"	f
MifareNested	armsrc/mifarecmd.c	/^void MifareNested(uint32_t arg0, uint32_t arg1, uint32_t calibrate, uint8_t *datain)$/;"	f
MifareReadBlock	armsrc/mifarecmd.c	/^void MifareReadBlock(uint8_t arg0, uint8_t arg1, uint8_t arg2, uint8_t *datain)$/;"	f
MifareReadSector	armsrc/mifarecmd.c	/^void MifareReadSector(uint8_t arg0, uint8_t arg1, uint8_t arg2, uint8_t *datain)$/;"	f
MifareSetDbgLvl	armsrc/mifarecmd.c	/^void MifareSetDbgLvl(uint32_t arg0, uint32_t arg1, uint32_t arg2, uint8_t *datain){$/;"	f
MifareUC_Auth1	armsrc/mifarecmd.c	/^void MifareUC_Auth1(uint8_t arg0, uint8_t *datain){$/;"	f
MifareUC_Auth2	armsrc/mifarecmd.c	/^void MifareUC_Auth2(uint32_t arg0, uint8_t *datain){$/;"	f
MifareUReadBlock	armsrc/mifarecmd.c	/^void MifareUReadBlock(uint8_t arg0,uint8_t *datain)$/;"	f
MifareUReadCard	armsrc/mifarecmd.c	/^void MifareUReadCard(uint8_t arg0, int arg1, uint8_t *datain)$/;"	f
MifareUWriteBlock	armsrc/mifarecmd.c	/^void MifareUWriteBlock(uint8_t arg0, uint8_t *datain)$/;"	f
MifareUWriteBlock_Special	armsrc/mifarecmd.c	/^void MifareUWriteBlock_Special(uint8_t arg0, uint8_t *datain)$/;"	f
MifareWriteBlock	armsrc/mifarecmd.c	/^void MifareWriteBlock(uint8_t arg0, uint8_t arg1, uint8_t arg2, uint8_t *datain)$/;"	f
Mifare_DES_Auth1	armsrc/mifarecmd.c	/^void Mifare_DES_Auth1(uint8_t arg0, uint8_t *datain){$/;"	f
Mifare_DES_Auth2	armsrc/mifarecmd.c	/^void Mifare_DES_Auth2(uint32_t arg0, uint8_t *datain){$/;"	f
MillerDecoding	armsrc/iso14443a.c	/^static RAMFUNC bool MillerDecoding(uint8_t bit, uint32_t non_real_time)$/;"	f	file:
ModThenAcquireRawAdcSamples125k	armsrc/lfops.c	/^void ModThenAcquireRawAdcSamples125k(int delay_off, int period_0, int period_1, uint8_t *command)$/;"	f
Mod_Manchester_LUT	armsrc/iso14443a.c	/^const bool Mod_Manchester_LUT[] = {$/;"	v
Mod_Miller_LUT	armsrc/iso14443a.c	/^const bool Mod_Miller_LUT[] = {$/;"	v
Mode	armsrc/aes.h	/^ unsigned char Mode;$/;"	m	struct:__anon1
Modulation_t	armsrc/iso14443a.h	/^	} Modulation_t;$/;"	t	typeref:enum:__anon19
N0	liblua/lundump.c	/^#define N0	/;"	d	file:
N1	liblua/lundump.c	/^#define N1	/;"	d	file:
N2	liblua/lundump.c	/^#define N2	/;"	d	file:
N3	liblua/lundump.c	/^#define N3	/;"	d	file:
NBBY	armsrc/printf.c	/^#define NBBY /;"	d	file:
NESTED_SECTOR_RETRY	client/mifarehost.h	/^#define NESTED_SECTOR_RETRY /;"	d
NILCONSTANT	liblua/lobject.h	/^#define NILCONSTANT	/;"	d
NILCONSTANT	liblua/lobject.h	/^#undef NILCONSTANT$/;"	d
NNMARK	liblua/lobject.h	/^#define NNMARK	/;"	d
NNMASK	liblua/lobject.h	/^#define NNMASK	/;"	d
NONVALIDVALUE	liblua/lapi.c	/^#define NONVALIDVALUE	/;"	d	file:
NO_JUMP	liblua/lcode.h	/^#define NO_JUMP /;"	d
NO_REG	liblua/lopcodes.h	/^#define NO_REG	/;"	d
NUM_CSNS	client/cmdhficlass.c	/^#define NUM_CSNS /;"	d	file:
NUM_OPCODES	liblua/lopcodes.h	/^#define NUM_OPCODES	/;"	d
NUM_RESERVED	liblua/llex.h	/^#define NUM_RESERVED	/;"	d
Name	client/cmdparser.h	/^  const char * Name;$/;"	m	struct:command_s
NextTransferTime	armsrc/iso14443a.c	/^static uint32_t NextTransferTime;$/;"	v	file:
Node	liblua/lobject.h	/^typedef struct Node {$/;"	s
Node	liblua/lobject.h	/^} Node;$/;"	t	typeref:struct:Node
Nr	armsrc/aes.h	/^ unsigned char Nr;$/;"	m	struct:__anon1
NrAr	armsrc/hitag2.c	/^static byte_t NrAr[8];$/;"	v	file:
NrAr	include/hitag2.h	/^	byte_t NrAr[8];$/;"	m	struct:__anon58
NumBlocksPerSector	armsrc/mifareutil.c	/^uint8_t NumBlocksPerSector(uint8_t sectorNo) $/;"	f
NumBlocksPerSector	client/cmdhfmf.c	/^uint8_t NumBlocksPerSector(uint8_t sectorNo)$/;"	f
OBJDIR	client/Makefile	/^OBJDIR = obj$/;"	m
OBJDIR	client/hid-flasher/Makefile	/^OBJDIR = obj$/;"	m
OBJS	armsrc/Makefile	/^OBJS = $(OBJDIR)\/osimage.s19 $(OBJDIR)\/fpgaimage.s19$/;"	m
OBJS	bootrom/Makefile	/^OBJS = $(OBJDIR)\/bootrom.s19$/;"	m
OBJS	tools/mfkey/Makefile	/^OBJS = crapto1.o crypto1.o$/;"	m
OBJS	tools/nonce2key/Makefile	/^OBJS = crypto1.o crapto1.o$/;"	m
ODD	client/util.h	/^#define ODD /;"	d
OFFSET_LOG	armsrc/legicrf.c	/^#define OFFSET_LOG /;"	d	file:
OLDBIT	liblua/lgc.h	/^#define OLDBIT	/;"	d
OPEN_COIL	armsrc/hitag2.c	/^#define OPEN_COIL(/;"	d	file:
OPEN_COIL	armsrc/lfops.c	/^#define OPEN_COIL(/;"	d	file:
OPR_ADD	liblua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_AND	liblua/lcode.h	/^  OPR_AND, OPR_OR,$/;"	e	enum:BinOpr
OPR_CONCAT	liblua/lcode.h	/^  OPR_CONCAT,$/;"	e	enum:BinOpr
OPR_DIV	liblua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_EQ	liblua/lcode.h	/^  OPR_EQ, OPR_LT, OPR_LE,$/;"	e	enum:BinOpr
OPR_GE	liblua/lcode.h	/^  OPR_NE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_GT	liblua/lcode.h	/^  OPR_NE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_LE	liblua/lcode.h	/^  OPR_EQ, OPR_LT, OPR_LE,$/;"	e	enum:BinOpr
OPR_LEN	liblua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_LT	liblua/lcode.h	/^  OPR_EQ, OPR_LT, OPR_LE,$/;"	e	enum:BinOpr
OPR_MINUS	liblua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_MOD	liblua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_MUL	liblua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_NE	liblua/lcode.h	/^  OPR_NE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_NOBINOPR	liblua/lcode.h	/^  OPR_NOBINOPR$/;"	e	enum:BinOpr
OPR_NOT	liblua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_NOUNOPR	liblua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_OR	liblua/lcode.h	/^  OPR_AND, OPR_OR,$/;"	e	enum:BinOpr
OPR_POW	liblua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_SUB	liblua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPTS	armsrc/appmain.c	/^#define OPTS /;"	d	file:
OP_ADD	liblua/lopcodes.h	/^OP_ADD,\/*	A B C	R(A) := RK(B) + RK(C)				*\/$/;"	e	enum:__anon73
OP_BIGENDIAN	client/pm3_binlib.c	/^#define	OP_BIGENDIAN	/;"	d	file:
OP_BSTRING	client/pm3_binlib.c	/^#define	OP_BSTRING	/;"	d	file:
OP_BYTE	client/pm3_binlib.c	/^#define	OP_BYTE	/;"	d	file:
OP_CALL	liblua/lopcodes.h	/^OP_CALL,\/*	A B C	R(A), ... ,R(A+C-2) := R(A)(R(A+1), ... ,R(A+B-1)) *\/$/;"	e	enum:__anon73
OP_CHAR	client/pm3_binlib.c	/^#define	OP_CHAR	/;"	d	file:
OP_CLOSURE	liblua/lopcodes.h	/^OP_CLOSURE,\/*	A Bx	R(A) := closure(KPROTO[Bx])			*\/$/;"	e	enum:__anon73
OP_CONCAT	liblua/lopcodes.h	/^OP_CONCAT,\/*	A B C	R(A) := R(B).. ... ..R(C)			*\/$/;"	e	enum:__anon73
OP_DIV	liblua/lopcodes.h	/^OP_DIV,\/*	A B C	R(A) := RK(B) \/ RK(C)				*\/$/;"	e	enum:__anon73
OP_DOUBLE	client/pm3_binlib.c	/^#define	OP_DOUBLE	/;"	d	file:
OP_EQ	liblua/lopcodes.h	/^OP_EQ,\/*	A B C	if ((RK(B) == RK(C)) ~= A) then pc++		*\/$/;"	e	enum:__anon73
OP_EXTRAARG	liblua/lopcodes.h	/^OP_EXTRAARG\/*	Ax	extra (larger) argument for previous opcode	*\/$/;"	e	enum:__anon73
OP_FLOAT	client/pm3_binlib.c	/^#define	OP_FLOAT	/;"	d	file:
OP_FORLOOP	liblua/lopcodes.h	/^OP_FORLOOP,\/*	A sBx	R(A)+=R(A+2);$/;"	e	enum:__anon73
OP_FORPREP	liblua/lopcodes.h	/^OP_FORPREP,\/*	A sBx	R(A)-=R(A+2); pc+=sBx				*\/$/;"	e	enum:__anon73
OP_GETTABLE	liblua/lopcodes.h	/^OP_GETTABLE,\/*	A B C	R(A) := R(B)[RK(C)]				*\/$/;"	e	enum:__anon73
OP_GETTABUP	liblua/lopcodes.h	/^OP_GETTABUP,\/*	A B C	R(A) := UpValue[B][RK(C)]			*\/$/;"	e	enum:__anon73
OP_GETUPVAL	liblua/lopcodes.h	/^OP_GETUPVAL,\/*	A B	R(A) := UpValue[B]				*\/$/;"	e	enum:__anon73
OP_HEX	client/pm3_binlib.c	/^#define OP_HEX /;"	d	file:
OP_INT	client/pm3_binlib.c	/^#define	OP_INT	/;"	d	file:
OP_JMP	liblua/lopcodes.h	/^OP_JMP,\/*	A sBx	pc+=sBx; if (A) close all upvalues >= R(A) + 1	*\/$/;"	e	enum:__anon73
OP_LE	liblua/lopcodes.h	/^OP_LE,\/*	A B C	if ((RK(B) <= RK(C)) ~= A) then pc++		*\/$/;"	e	enum:__anon73
OP_LEN	liblua/lopcodes.h	/^OP_LEN,\/*	A B	R(A) := length of R(B)				*\/$/;"	e	enum:__anon73
OP_LITTLEENDIAN	client/pm3_binlib.c	/^#define	OP_LITTLEENDIAN	/;"	d	file:
OP_LOADBOOL	liblua/lopcodes.h	/^OP_LOADBOOL,\/*	A B C	R(A) := (Bool)B; if (C) pc++			*\/$/;"	e	enum:__anon73
OP_LOADK	liblua/lopcodes.h	/^OP_LOADK,\/*	A Bx	R(A) := Kst(Bx)					*\/$/;"	e	enum:__anon73
OP_LOADKX	liblua/lopcodes.h	/^OP_LOADKX,\/*	A 	R(A) := Kst(extra arg)				*\/$/;"	e	enum:__anon73
OP_LOADNIL	liblua/lopcodes.h	/^OP_LOADNIL,\/*	A B	R(A), R(A+1), ..., R(A+B) := nil		*\/$/;"	e	enum:__anon73
OP_LONG	client/pm3_binlib.c	/^#define	OP_LONG	/;"	d	file:
OP_LT	liblua/lopcodes.h	/^OP_LT,\/*	A B C	if ((RK(B) <  RK(C)) ~= A) then pc++		*\/$/;"	e	enum:__anon73
OP_MOD	liblua/lopcodes.h	/^OP_MOD,\/*	A B C	R(A) := RK(B) % RK(C)				*\/$/;"	e	enum:__anon73
OP_MOVE	liblua/lopcodes.h	/^OP_MOVE,\/*	A B	R(A) := R(B)					*\/$/;"	e	enum:__anon73
OP_MUL	liblua/lopcodes.h	/^OP_MUL,\/*	A B C	R(A) := RK(B) * RK(C)				*\/$/;"	e	enum:__anon73
OP_NATIVE	client/pm3_binlib.c	/^#define	OP_NATIVE	/;"	d	file:
OP_NEWTABLE	liblua/lopcodes.h	/^OP_NEWTABLE,\/*	A B C	R(A) := {} (size = B,C)				*\/$/;"	e	enum:__anon73
OP_NOT	liblua/lopcodes.h	/^OP_NOT,\/*	A B	R(A) := not R(B)				*\/$/;"	e	enum:__anon73
OP_NUMBER	client/pm3_binlib.c	/^#define	OP_NUMBER	/;"	d	file:
OP_POW	liblua/lopcodes.h	/^OP_POW,\/*	A B C	R(A) := RK(B) ^ RK(C)				*\/$/;"	e	enum:__anon73
OP_RETURN	liblua/lopcodes.h	/^OP_RETURN,\/*	A B	return R(A), ... ,R(A+B-2)	(see note)	*\/$/;"	e	enum:__anon73
OP_SELF	liblua/lopcodes.h	/^OP_SELF,\/*	A B C	R(A+1) := R(B); R(A) := R(B)[RK(C)]		*\/$/;"	e	enum:__anon73
OP_SETLIST	liblua/lopcodes.h	/^OP_SETLIST,\/*	A B C	R(A)[(C-1)*FPF+i] := R(A+i), 1 <= i <= B	*\/$/;"	e	enum:__anon73
OP_SETTABLE	liblua/lopcodes.h	/^OP_SETTABLE,\/*	A B C	R(A)[RK(B)] := RK(C)				*\/$/;"	e	enum:__anon73
OP_SETTABUP	liblua/lopcodes.h	/^OP_SETTABUP,\/*	A B C	UpValue[A][RK(B)] := RK(C)			*\/$/;"	e	enum:__anon73
OP_SETUPVAL	liblua/lopcodes.h	/^OP_SETUPVAL,\/*	A B	UpValue[B] := R(A)				*\/$/;"	e	enum:__anon73
OP_SHORT	client/pm3_binlib.c	/^#define	OP_SHORT	/;"	d	file:
OP_SSTRING	client/pm3_binlib.c	/^#define	OP_SSTRING	/;"	d	file:
OP_STRING	client/pm3_binlib.c	/^#define	OP_STRING	/;"	d	file:
OP_SUB	liblua/lopcodes.h	/^OP_SUB,\/*	A B C	R(A) := RK(B) - RK(C)				*\/$/;"	e	enum:__anon73
OP_TAILCALL	liblua/lopcodes.h	/^OP_TAILCALL,\/*	A B C	return R(A)(R(A+1), ... ,R(A+B-1))		*\/$/;"	e	enum:__anon73
OP_TEST	liblua/lopcodes.h	/^OP_TEST,\/*	A C	if not (R(A) <=> C) then pc++			*\/$/;"	e	enum:__anon73
OP_TESTSET	liblua/lopcodes.h	/^OP_TESTSET,\/*	A B C	if (R(B) <=> C) then R(A) := R(B) else pc++	*\/$/;"	e	enum:__anon73
OP_TFORCALL	liblua/lopcodes.h	/^OP_TFORCALL,\/*	A C	R(A+3), ... ,R(A+2+C) := R(A)(R(A+1), R(A+2));	*\/$/;"	e	enum:__anon73
OP_TFORLOOP	liblua/lopcodes.h	/^OP_TFORLOOP,\/*	A sBx	if R(A+1) ~= nil then { R(A)=R(A+1); pc += sBx }*\/$/;"	e	enum:__anon73
OP_UINT	client/pm3_binlib.c	/^#define	OP_UINT	/;"	d	file:
OP_ULONG	client/pm3_binlib.c	/^#define	OP_ULONG	/;"	d	file:
OP_UNM	liblua/lopcodes.h	/^OP_UNM,\/*	A B	R(A) := -R(B)					*\/$/;"	e	enum:__anon73
OP_USHORT	client/pm3_binlib.c	/^#define	OP_USHORT	/;"	d	file:
OP_VARARG	liblua/lopcodes.h	/^OP_VARARG,\/*	A B	R(A), R(A+1), ..., R(A+B-2) = vararg		*\/$/;"	e	enum:__anon73
OP_WSTRING	client/pm3_binlib.c	/^#define	OP_WSTRING	/;"	d	file:
OP_ZSTRING	client/pm3_binlib.c	/^#define	OP_ZSTRING	/;"	d	file:
OUTPUT	liblua/luac.c	/^#define OUTPUT	/;"	d	file:
OddByteParity	armsrc/iso14443a.c	/^const uint8_t OddByteParity[256] = {$/;"	v
Offline	client/cmdparser.h	/^  int Offline;$/;"	m	struct:command_s
OpArgK	liblua/lopcodes.h	/^  OpArgK   \/* argument is a constant or register\/constant *\/$/;"	e	enum:OpArgMask
OpArgMask	liblua/lopcodes.h	/^enum OpArgMask {$/;"	g
OpArgN	liblua/lopcodes.h	/^  OpArgN,  \/* argument is not used *\/$/;"	e	enum:OpArgMask
OpArgR	liblua/lopcodes.h	/^  OpArgR,  \/* argument is a register or a jump offset *\/$/;"	e	enum:OpArgMask
OpArgU	liblua/lopcodes.h	/^  OpArgU,  \/* argument is used *\/$/;"	e	enum:OpArgMask
OpCode	liblua/lopcodes.h	/^} OpCode;$/;"	t	typeref:enum:__anon73
OpMode	liblua/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	g
OpenProxmark	client/flasher.c	/^int OpenProxmark(size_t i) {$/;"	f
OpenProxmark	client/hid-flasher/proxusb.c	/^usb_dev_handle* OpenProxmark(int verbose)$/;"	f
OutOfCnt	armsrc/iclass.c	/^    int     OutOfCnt;$/;"	m	struct:__anon8	file:
OutOfNDecoding	armsrc/iclass.c	/^static RAMFUNC int OutOfNDecoding(int bit)$/;"	f	file:
Output	liblua/luac.c	/^static char Output[]={ OUTPUT };	\/* default output file name *\/$/;"	v	file:
OutputBuffer	tools/findbits_test.py	/^class OutputBuffer(object):$/;"	c
PACKED	client/hid-flasher/usb_cmd.h	/^#define PACKED /;"	d
PACKED	client/hid-flasher/usb_cmd.h	/^#define PACKED$/;"	d
PACKED	include/usb_cmd.h	/^#define PACKED /;"	d
PACKED	include/usb_cmd.h	/^#define PACKED$/;"	d
PACKNUMBER	client/pm3_binlib.c	/^#define PACKNUMBER(/;"	d	file:
PACKSTRING	client/pm3_binlib.c	/^#define PACKSTRING(/;"	d	file:
PAUSEADJ	liblua/lgc.c	/^#define PAUSEADJ	/;"	d	file:
PBRS	armsrc/LCD.h	/^#define PBRS	/;"	d
PBSTROFF	armsrc/LCD.h	/^#define PBSTROFF	/;"	d
PBSTRON	armsrc/LCD.h	/^#define PBSTRON	/;"	d
PCASET	armsrc/LCD.h	/^#define PCASET	/;"	d
PCHAR	armsrc/printf.c	/^#define PCHAR(/;"	d	file:
PCHAR	armsrc/printf.c	/^#undef PCHAR$/;"	d	file:
PCOLMOD	armsrc/LCD.h	/^#define PCOLMOD	/;"	d
PDAL	armsrc/LCD.h	/^#define PDAL	/;"	d
PDALO	armsrc/LCD.h	/^#define PDALO	/;"	d
PDC_PTCR	include/at91sam7s512.h	/^	AT91_REG	 PDC_PTCR; 	\/\/ PDC Transfer Control Register$/;"	m	struct:_AT91S_PDC
PDC_PTCR	include/at91sam7s512.h	/^#define PDC_PTCR /;"	d
PDC_PTSR	include/at91sam7s512.h	/^	AT91_REG	 PDC_PTSR; 	\/\/ PDC Transfer Status Register$/;"	m	struct:_AT91S_PDC
PDC_PTSR	include/at91sam7s512.h	/^#define PDC_PTSR /;"	d
PDC_RCR	include/at91sam7s512.h	/^	AT91_REG	 PDC_RCR; 	\/\/ Receive Counter Register$/;"	m	struct:_AT91S_PDC
PDC_RCR	include/at91sam7s512.h	/^#define PDC_RCR /;"	d
PDC_RNCR	include/at91sam7s512.h	/^	AT91_REG	 PDC_RNCR; 	\/\/ Receive Next Counter Register$/;"	m	struct:_AT91S_PDC
PDC_RNCR	include/at91sam7s512.h	/^#define PDC_RNCR /;"	d
PDC_RNPR	include/at91sam7s512.h	/^	AT91_REG	 PDC_RNPR; 	\/\/ Receive Next Pointer Register$/;"	m	struct:_AT91S_PDC
PDC_RNPR	include/at91sam7s512.h	/^#define PDC_RNPR /;"	d
PDC_RPR	include/at91sam7s512.h	/^	AT91_REG	 PDC_RPR; 	\/\/ Receive Pointer Register$/;"	m	struct:_AT91S_PDC
PDC_RPR	include/at91sam7s512.h	/^#define PDC_RPR /;"	d
PDC_TCR	include/at91sam7s512.h	/^	AT91_REG	 PDC_TCR; 	\/\/ Transmit Counter Register$/;"	m	struct:_AT91S_PDC
PDC_TCR	include/at91sam7s512.h	/^#define PDC_TCR /;"	d
PDC_TNCR	include/at91sam7s512.h	/^	AT91_REG	 PDC_TNCR; 	\/\/ Transmit Next Counter Register$/;"	m	struct:_AT91S_PDC
PDC_TNCR	include/at91sam7s512.h	/^#define PDC_TNCR /;"	d
PDC_TNPR	include/at91sam7s512.h	/^	AT91_REG	 PDC_TNPR; 	\/\/ Transmit Next Pointer Register$/;"	m	struct:_AT91S_PDC
PDC_TNPR	include/at91sam7s512.h	/^#define PDC_TNPR /;"	d
PDC_TPR	include/at91sam7s512.h	/^	AT91_REG	 PDC_TPR; 	\/\/ Transmit Pointer Register$/;"	m	struct:_AT91S_PDC
PDC_TPR	include/at91sam7s512.h	/^#define PDC_TPR /;"	d
PDF8C	armsrc/LCD.h	/^#define PDF8C	/;"	d
PDISPOFF	armsrc/LCD.h	/^#define PDISPOFF	/;"	d
PDISPON	armsrc/LCD.h	/^#define PDISPON	/;"	d
PDOR	armsrc/LCD.h	/^#define PDOR	/;"	d
PEC	armsrc/LCD.h	/^#define PEC	/;"	d
PECM	armsrc/LCD.h	/^#define PECM	/;"	d
PFINV	armsrc/LCD.h	/^#define PFINV	/;"	d
PF_R	client/elf.h	/^#define PF_R /;"	d
PF_R	client/hid-flasher/elf.h	/^#define PF_R /;"	d
PF_W	client/elf.h	/^#define PF_W /;"	d
PF_W	client/hid-flasher/elf.h	/^#define PF_W /;"	d
PF_X	client/elf.h	/^#define PF_X /;"	d
PF_X	client/hid-flasher/elf.h	/^#define PF_X /;"	d
PI	liblua/lmathlib.c	/^#define PI	/;"	d	file:
PI	liblua/lmathlib.c	/^#undef PI$/;"	d	file:
PIDMOFF	armsrc/LCD.h	/^#define PIDMOFF	/;"	d
PIDMON	armsrc/LCD.h	/^#define PIDMON	/;"	d
PINVOFF	armsrc/LCD.h	/^#define PINVOFF	/;"	d
PINVON	armsrc/LCD.h	/^#define PINVON	/;"	d
PIN_BLOCKED	armsrc/emvdataels.c	/^const uint8_t PIN_BLOCKED[] = {0x69,0x84};$/;"	v
PIN_BLOCKED2	armsrc/emvdataels.c	/^const uint8_t PIN_BLOCKED2[] = {0x69,0x84};$/;"	v
PIN_WRONG	armsrc/emvdataels.c	/^const uint8_t PIN_WRONG[] = {0x63};$/;"	v
PIOA_ABSR	include/at91sam7s512.h	/^	AT91_REG	 PIOA_ABSR; 	\/\/ AB Select Status Register$/;"	m	struct:_AT91S_SYS
PIOA_ASR	include/at91sam7s512.h	/^	AT91_REG	 PIOA_ASR; 	\/\/ Select A Register$/;"	m	struct:_AT91S_SYS
PIOA_BSR	include/at91sam7s512.h	/^	AT91_REG	 PIOA_BSR; 	\/\/ Select B Register$/;"	m	struct:_AT91S_SYS
PIOA_CODR	include/at91sam7s512.h	/^	AT91_REG	 PIOA_CODR; 	\/\/ Clear Output Data Register$/;"	m	struct:_AT91S_SYS
PIOA_IDR	include/at91sam7s512.h	/^	AT91_REG	 PIOA_IDR; 	\/\/ Interrupt Disable Register$/;"	m	struct:_AT91S_SYS
PIOA_IER	include/at91sam7s512.h	/^	AT91_REG	 PIOA_IER; 	\/\/ Interrupt Enable Register$/;"	m	struct:_AT91S_SYS
PIOA_IFDR	include/at91sam7s512.h	/^	AT91_REG	 PIOA_IFDR; 	\/\/ Input Filter Disable Register$/;"	m	struct:_AT91S_SYS
PIOA_IFER	include/at91sam7s512.h	/^	AT91_REG	 PIOA_IFER; 	\/\/ Input Filter Enable Register$/;"	m	struct:_AT91S_SYS
PIOA_IFSR	include/at91sam7s512.h	/^	AT91_REG	 PIOA_IFSR; 	\/\/ Input Filter Status Register$/;"	m	struct:_AT91S_SYS
PIOA_IMR	include/at91sam7s512.h	/^	AT91_REG	 PIOA_IMR; 	\/\/ Interrupt Mask Register$/;"	m	struct:_AT91S_SYS
PIOA_ISR	include/at91sam7s512.h	/^	AT91_REG	 PIOA_ISR; 	\/\/ Interrupt Status Register$/;"	m	struct:_AT91S_SYS
PIOA_MDDR	include/at91sam7s512.h	/^	AT91_REG	 PIOA_MDDR; 	\/\/ Multi-driver Disable Register$/;"	m	struct:_AT91S_SYS
PIOA_MDER	include/at91sam7s512.h	/^	AT91_REG	 PIOA_MDER; 	\/\/ Multi-driver Enable Register$/;"	m	struct:_AT91S_SYS
PIOA_MDSR	include/at91sam7s512.h	/^	AT91_REG	 PIOA_MDSR; 	\/\/ Multi-driver Status Register$/;"	m	struct:_AT91S_SYS
PIOA_ODR	include/at91sam7s512.h	/^	AT91_REG	 PIOA_ODR; 	\/\/ Output Disable Registerr$/;"	m	struct:_AT91S_SYS
PIOA_ODSR	include/at91sam7s512.h	/^	AT91_REG	 PIOA_ODSR; 	\/\/ Output Data Status Register$/;"	m	struct:_AT91S_SYS
PIOA_OER	include/at91sam7s512.h	/^	AT91_REG	 PIOA_OER; 	\/\/ Output Enable Register$/;"	m	struct:_AT91S_SYS
PIOA_OSR	include/at91sam7s512.h	/^	AT91_REG	 PIOA_OSR; 	\/\/ Output Status Register$/;"	m	struct:_AT91S_SYS
PIOA_OWDR	include/at91sam7s512.h	/^	AT91_REG	 PIOA_OWDR; 	\/\/ Output Write Disable Register$/;"	m	struct:_AT91S_SYS
PIOA_OWER	include/at91sam7s512.h	/^	AT91_REG	 PIOA_OWER; 	\/\/ Output Write Enable Register$/;"	m	struct:_AT91S_SYS
PIOA_OWSR	include/at91sam7s512.h	/^	AT91_REG	 PIOA_OWSR; 	\/\/ Output Write Status Register$/;"	m	struct:_AT91S_SYS
PIOA_PDR	include/at91sam7s512.h	/^	AT91_REG	 PIOA_PDR; 	\/\/ PIO Disable Register$/;"	m	struct:_AT91S_SYS
PIOA_PDSR	include/at91sam7s512.h	/^	AT91_REG	 PIOA_PDSR; 	\/\/ Pin Data Status Register$/;"	m	struct:_AT91S_SYS
PIOA_PER	include/at91sam7s512.h	/^	AT91_REG	 PIOA_PER; 	\/\/ PIO Enable Register$/;"	m	struct:_AT91S_SYS
PIOA_PPUDR	include/at91sam7s512.h	/^	AT91_REG	 PIOA_PPUDR; 	\/\/ Pull-up Disable Register$/;"	m	struct:_AT91S_SYS
PIOA_PPUER	include/at91sam7s512.h	/^	AT91_REG	 PIOA_PPUER; 	\/\/ Pull-up Enable Register$/;"	m	struct:_AT91S_SYS
PIOA_PPUSR	include/at91sam7s512.h	/^	AT91_REG	 PIOA_PPUSR; 	\/\/ Pull-up Status Register$/;"	m	struct:_AT91S_SYS
PIOA_PSR	include/at91sam7s512.h	/^	AT91_REG	 PIOA_PSR; 	\/\/ PIO Status Register$/;"	m	struct:_AT91S_SYS
PIOA_SODR	include/at91sam7s512.h	/^	AT91_REG	 PIOA_SODR; 	\/\/ Set Output Data Register$/;"	m	struct:_AT91S_SYS
PIO_ABSR	include/at91sam7s512.h	/^	AT91_REG	 PIO_ABSR; 	\/\/ AB Select Status Register$/;"	m	struct:_AT91S_PIO
PIO_ABSR	include/at91sam7s512.h	/^#define PIO_ABSR /;"	d
PIO_ASR	include/at91sam7s512.h	/^	AT91_REG	 PIO_ASR; 	\/\/ Select A Register$/;"	m	struct:_AT91S_PIO
PIO_ASR	include/at91sam7s512.h	/^#define PIO_ASR /;"	d
PIO_BSR	include/at91sam7s512.h	/^	AT91_REG	 PIO_BSR; 	\/\/ Select B Register$/;"	m	struct:_AT91S_PIO
PIO_BSR	include/at91sam7s512.h	/^#define PIO_BSR /;"	d
PIO_CODR	include/at91sam7s512.h	/^	AT91_REG	 PIO_CODR; 	\/\/ Clear Output Data Register$/;"	m	struct:_AT91S_PIO
PIO_CODR	include/at91sam7s512.h	/^#define PIO_CODR /;"	d
PIO_IDR	include/at91sam7s512.h	/^	AT91_REG	 PIO_IDR; 	\/\/ Interrupt Disable Register$/;"	m	struct:_AT91S_PIO
PIO_IDR	include/at91sam7s512.h	/^#define PIO_IDR /;"	d
PIO_IER	include/at91sam7s512.h	/^	AT91_REG	 PIO_IER; 	\/\/ Interrupt Enable Register$/;"	m	struct:_AT91S_PIO
PIO_IER	include/at91sam7s512.h	/^#define PIO_IER /;"	d
PIO_IFDR	include/at91sam7s512.h	/^	AT91_REG	 PIO_IFDR; 	\/\/ Input Filter Disable Register$/;"	m	struct:_AT91S_PIO
PIO_IFDR	include/at91sam7s512.h	/^#define PIO_IFDR /;"	d
PIO_IFER	include/at91sam7s512.h	/^	AT91_REG	 PIO_IFER; 	\/\/ Input Filter Enable Register$/;"	m	struct:_AT91S_PIO
PIO_IFER	include/at91sam7s512.h	/^#define PIO_IFER /;"	d
PIO_IFSR	include/at91sam7s512.h	/^	AT91_REG	 PIO_IFSR; 	\/\/ Input Filter Status Register$/;"	m	struct:_AT91S_PIO
PIO_IFSR	include/at91sam7s512.h	/^#define PIO_IFSR /;"	d
PIO_IMR	include/at91sam7s512.h	/^	AT91_REG	 PIO_IMR; 	\/\/ Interrupt Mask Register$/;"	m	struct:_AT91S_PIO
PIO_IMR	include/at91sam7s512.h	/^#define PIO_IMR /;"	d
PIO_ISR	include/at91sam7s512.h	/^	AT91_REG	 PIO_ISR; 	\/\/ Interrupt Status Register$/;"	m	struct:_AT91S_PIO
PIO_ISR	include/at91sam7s512.h	/^#define PIO_ISR /;"	d
PIO_MDDR	include/at91sam7s512.h	/^	AT91_REG	 PIO_MDDR; 	\/\/ Multi-driver Disable Register$/;"	m	struct:_AT91S_PIO
PIO_MDDR	include/at91sam7s512.h	/^#define PIO_MDDR /;"	d
PIO_MDER	include/at91sam7s512.h	/^	AT91_REG	 PIO_MDER; 	\/\/ Multi-driver Enable Register$/;"	m	struct:_AT91S_PIO
PIO_MDER	include/at91sam7s512.h	/^#define PIO_MDER /;"	d
PIO_MDSR	include/at91sam7s512.h	/^	AT91_REG	 PIO_MDSR; 	\/\/ Multi-driver Status Register$/;"	m	struct:_AT91S_PIO
PIO_MDSR	include/at91sam7s512.h	/^#define PIO_MDSR /;"	d
PIO_ODR	include/at91sam7s512.h	/^	AT91_REG	 PIO_ODR; 	\/\/ Output Disable Registerr$/;"	m	struct:_AT91S_PIO
PIO_ODR	include/at91sam7s512.h	/^#define PIO_ODR /;"	d
PIO_ODSR	include/at91sam7s512.h	/^	AT91_REG	 PIO_ODSR; 	\/\/ Output Data Status Register$/;"	m	struct:_AT91S_PIO
PIO_ODSR	include/at91sam7s512.h	/^#define PIO_ODSR /;"	d
PIO_OER	include/at91sam7s512.h	/^	AT91_REG	 PIO_OER; 	\/\/ Output Enable Register$/;"	m	struct:_AT91S_PIO
PIO_OER	include/at91sam7s512.h	/^#define PIO_OER /;"	d
PIO_OSR	include/at91sam7s512.h	/^	AT91_REG	 PIO_OSR; 	\/\/ Output Status Register$/;"	m	struct:_AT91S_PIO
PIO_OSR	include/at91sam7s512.h	/^#define PIO_OSR /;"	d
PIO_OWDR	include/at91sam7s512.h	/^	AT91_REG	 PIO_OWDR; 	\/\/ Output Write Disable Register$/;"	m	struct:_AT91S_PIO
PIO_OWDR	include/at91sam7s512.h	/^#define PIO_OWDR /;"	d
PIO_OWER	include/at91sam7s512.h	/^	AT91_REG	 PIO_OWER; 	\/\/ Output Write Enable Register$/;"	m	struct:_AT91S_PIO
PIO_OWER	include/at91sam7s512.h	/^#define PIO_OWER /;"	d
PIO_OWSR	include/at91sam7s512.h	/^	AT91_REG	 PIO_OWSR; 	\/\/ Output Write Status Register$/;"	m	struct:_AT91S_PIO
PIO_OWSR	include/at91sam7s512.h	/^#define PIO_OWSR /;"	d
PIO_PDR	include/at91sam7s512.h	/^	AT91_REG	 PIO_PDR; 	\/\/ PIO Disable Register$/;"	m	struct:_AT91S_PIO
PIO_PDR	include/at91sam7s512.h	/^#define PIO_PDR /;"	d
PIO_PDSR	include/at91sam7s512.h	/^	AT91_REG	 PIO_PDSR; 	\/\/ Pin Data Status Register$/;"	m	struct:_AT91S_PIO
PIO_PDSR	include/at91sam7s512.h	/^#define PIO_PDSR /;"	d
PIO_PER	include/at91sam7s512.h	/^	AT91_REG	 PIO_PER; 	\/\/ PIO Enable Register$/;"	m	struct:_AT91S_PIO
PIO_PER	include/at91sam7s512.h	/^#define PIO_PER /;"	d
PIO_PPUDR	include/at91sam7s512.h	/^	AT91_REG	 PIO_PPUDR; 	\/\/ Pull-up Disable Register$/;"	m	struct:_AT91S_PIO
PIO_PPUDR	include/at91sam7s512.h	/^#define PIO_PPUDR /;"	d
PIO_PPUER	include/at91sam7s512.h	/^	AT91_REG	 PIO_PPUER; 	\/\/ Pull-up Enable Register$/;"	m	struct:_AT91S_PIO
PIO_PPUER	include/at91sam7s512.h	/^#define PIO_PPUER /;"	d
PIO_PPUSR	include/at91sam7s512.h	/^	AT91_REG	 PIO_PPUSR; 	\/\/ Pull-up Status Register$/;"	m	struct:_AT91S_PIO
PIO_PPUSR	include/at91sam7s512.h	/^#define PIO_PPUSR /;"	d
PIO_PSR	include/at91sam7s512.h	/^	AT91_REG	 PIO_PSR; 	\/\/ PIO Status Register$/;"	m	struct:_AT91S_PIO
PIO_PSR	include/at91sam7s512.h	/^#define PIO_PSR /;"	d
PIO_SODR	include/at91sam7s512.h	/^	AT91_REG	 PIO_SODR; 	\/\/ Set Output Data Register$/;"	m	struct:_AT91S_PIO
PIO_SODR	include/at91sam7s512.h	/^#define PIO_SODR /;"	d
PITC_PIIR	include/at91sam7s512.h	/^	AT91_REG	 PITC_PIIR; 	\/\/ Period Interval Image Register$/;"	m	struct:_AT91S_PITC
PITC_PIIR	include/at91sam7s512.h	/^	AT91_REG	 PITC_PIIR; 	\/\/ Period Interval Image Register$/;"	m	struct:_AT91S_SYS
PITC_PIIR	include/at91sam7s512.h	/^#define PITC_PIIR /;"	d
PITC_PIMR	include/at91sam7s512.h	/^	AT91_REG	 PITC_PIMR; 	\/\/ Period Interval Mode Register$/;"	m	struct:_AT91S_PITC
PITC_PIMR	include/at91sam7s512.h	/^	AT91_REG	 PITC_PIMR; 	\/\/ Period Interval Mode Register$/;"	m	struct:_AT91S_SYS
PITC_PIMR	include/at91sam7s512.h	/^#define PITC_PIMR /;"	d
PITC_PISR	include/at91sam7s512.h	/^	AT91_REG	 PITC_PISR; 	\/\/ Period Interval Status Register$/;"	m	struct:_AT91S_PITC
PITC_PISR	include/at91sam7s512.h	/^	AT91_REG	 PITC_PISR; 	\/\/ Period Interval Status Register$/;"	m	struct:_AT91S_SYS
PITC_PISR	include/at91sam7s512.h	/^#define PITC_PISR /;"	d
PITC_PIVR	include/at91sam7s512.h	/^	AT91_REG	 PITC_PIVR; 	\/\/ Period Interval Value Register$/;"	m	struct:_AT91S_PITC
PITC_PIVR	include/at91sam7s512.h	/^	AT91_REG	 PITC_PIVR; 	\/\/ Period Interval Value Register$/;"	m	struct:_AT91S_SYS
PITC_PIVR	include/at91sam7s512.h	/^#define PITC_PIVR /;"	d
PLAT	liblua/Makefile	/^PLAT= none$/;"	m
PLATS	liblua/Makefile	/^PLATS= aix ansi bsd freebsd generic linux macosx mingw posix solaris$/;"	m
PM3_BINLIB	client/pm3_binlib.h	/^#define PM3_BINLIB$/;"	d
PM3_BITLIB	client/pm3_bitlib.h	/^#define PM3_BITLIB$/;"	d
PMADCTL	armsrc/LCD.h	/^#define PMADCTL	/;"	d
PMC_IDR	include/at91sam7s512.h	/^	AT91_REG	 PMC_IDR; 	\/\/ Interrupt Disable Register$/;"	m	struct:_AT91S_PMC
PMC_IDR	include/at91sam7s512.h	/^	AT91_REG	 PMC_IDR; 	\/\/ Interrupt Disable Register$/;"	m	struct:_AT91S_SYS
PMC_IDR	include/at91sam7s512.h	/^#define PMC_IDR /;"	d
PMC_IER	include/at91sam7s512.h	/^	AT91_REG	 PMC_IER; 	\/\/ Interrupt Enable Register$/;"	m	struct:_AT91S_PMC
PMC_IER	include/at91sam7s512.h	/^	AT91_REG	 PMC_IER; 	\/\/ Interrupt Enable Register$/;"	m	struct:_AT91S_SYS
PMC_IER	include/at91sam7s512.h	/^#define PMC_IER /;"	d
PMC_IMR	include/at91sam7s512.h	/^	AT91_REG	 PMC_IMR; 	\/\/ Interrupt Mask Register$/;"	m	struct:_AT91S_PMC
PMC_IMR	include/at91sam7s512.h	/^	AT91_REG	 PMC_IMR; 	\/\/ Interrupt Mask Register$/;"	m	struct:_AT91S_SYS
PMC_IMR	include/at91sam7s512.h	/^#define PMC_IMR /;"	d
PMC_MAIN_OSC_STARTUP_DELAY	include/proxmark3.h	/^#define PMC_MAIN_OSC_STARTUP_DELAY(/;"	d
PMC_MCFR	include/at91sam7s512.h	/^	AT91_REG	 PMC_MCFR; 	\/\/ Main Clock  Frequency Register$/;"	m	struct:_AT91S_PMC
PMC_MCFR	include/at91sam7s512.h	/^	AT91_REG	 PMC_MCFR; 	\/\/ Main Clock  Frequency Register$/;"	m	struct:_AT91S_SYS
PMC_MCKR	include/at91sam7s512.h	/^	AT91_REG	 PMC_MCKR; 	\/\/ Master Clock Register$/;"	m	struct:_AT91S_PMC
PMC_MCKR	include/at91sam7s512.h	/^	AT91_REG	 PMC_MCKR; 	\/\/ Master Clock Register$/;"	m	struct:_AT91S_SYS
PMC_MCKR	include/at91sam7s512.h	/^#define PMC_MCKR /;"	d
PMC_MOR	include/at91sam7s512.h	/^	AT91_REG	 PMC_MOR; 	\/\/ Main Oscillator Register$/;"	m	struct:_AT91S_PMC
PMC_MOR	include/at91sam7s512.h	/^	AT91_REG	 PMC_MOR; 	\/\/ Main Oscillator Register$/;"	m	struct:_AT91S_SYS
PMC_PCDR	include/at91sam7s512.h	/^	AT91_REG	 PMC_PCDR; 	\/\/ Peripheral Clock Disable Register$/;"	m	struct:_AT91S_PMC
PMC_PCDR	include/at91sam7s512.h	/^	AT91_REG	 PMC_PCDR; 	\/\/ Peripheral Clock Disable Register$/;"	m	struct:_AT91S_SYS
PMC_PCDR	include/at91sam7s512.h	/^#define PMC_PCDR /;"	d
PMC_PCER	include/at91sam7s512.h	/^	AT91_REG	 PMC_PCER; 	\/\/ Peripheral Clock Enable Register$/;"	m	struct:_AT91S_PMC
PMC_PCER	include/at91sam7s512.h	/^	AT91_REG	 PMC_PCER; 	\/\/ Peripheral Clock Enable Register$/;"	m	struct:_AT91S_SYS
PMC_PCER	include/at91sam7s512.h	/^#define PMC_PCER /;"	d
PMC_PCKR	include/at91sam7s512.h	/^	AT91_REG	 PMC_PCKR[3]; 	\/\/ Programmable Clock Register$/;"	m	struct:_AT91S_PMC
PMC_PCKR	include/at91sam7s512.h	/^	AT91_REG	 PMC_PCKR[3]; 	\/\/ Programmable Clock Register$/;"	m	struct:_AT91S_SYS
PMC_PCKR	include/at91sam7s512.h	/^#define PMC_PCKR /;"	d
PMC_PCSR	include/at91sam7s512.h	/^	AT91_REG	 PMC_PCSR; 	\/\/ Peripheral Clock Status Register$/;"	m	struct:_AT91S_PMC
PMC_PCSR	include/at91sam7s512.h	/^	AT91_REG	 PMC_PCSR; 	\/\/ Peripheral Clock Status Register$/;"	m	struct:_AT91S_SYS
PMC_PCSR	include/at91sam7s512.h	/^#define PMC_PCSR /;"	d
PMC_PLLR	include/at91sam7s512.h	/^	AT91_REG	 PMC_PLLR; 	\/\/ PLL Register$/;"	m	struct:_AT91S_PMC
PMC_PLLR	include/at91sam7s512.h	/^	AT91_REG	 PMC_PLLR; 	\/\/ PLL Register$/;"	m	struct:_AT91S_SYS
PMC_PLL_COUNT_BEFORE_LOCK	include/proxmark3.h	/^#define PMC_PLL_COUNT_BEFORE_LOCK(/;"	d
PMC_PLL_DIVISOR	include/proxmark3.h	/^#define PMC_PLL_DIVISOR(/;"	d
PMC_PLL_FREQUENCY_RANGE	include/proxmark3.h	/^#define PMC_PLL_FREQUENCY_RANGE(/;"	d
PMC_PLL_MULTIPLIER	include/proxmark3.h	/^#define PMC_PLL_MULTIPLIER(/;"	d
PMC_PLL_USB_DIVISOR	include/proxmark3.h	/^#define PMC_PLL_USB_DIVISOR(/;"	d
PMC_SCDR	include/at91sam7s512.h	/^	AT91_REG	 PMC_SCDR; 	\/\/ System Clock Disable Register$/;"	m	struct:_AT91S_PMC
PMC_SCDR	include/at91sam7s512.h	/^	AT91_REG	 PMC_SCDR; 	\/\/ System Clock Disable Register$/;"	m	struct:_AT91S_SYS
PMC_SCDR	include/at91sam7s512.h	/^#define PMC_SCDR /;"	d
PMC_SCER	include/at91sam7s512.h	/^	AT91_REG	 PMC_SCER; 	\/\/ System Clock Enable Register$/;"	m	struct:_AT91S_PMC
PMC_SCER	include/at91sam7s512.h	/^	AT91_REG	 PMC_SCER; 	\/\/ System Clock Enable Register$/;"	m	struct:_AT91S_SYS
PMC_SCER	include/at91sam7s512.h	/^#define PMC_SCER /;"	d
PMC_SCSR	include/at91sam7s512.h	/^	AT91_REG	 PMC_SCSR; 	\/\/ System Clock Status Register$/;"	m	struct:_AT91S_PMC
PMC_SCSR	include/at91sam7s512.h	/^	AT91_REG	 PMC_SCSR; 	\/\/ System Clock Status Register$/;"	m	struct:_AT91S_SYS
PMC_SCSR	include/at91sam7s512.h	/^#define PMC_SCSR /;"	d
PMC_SR	include/at91sam7s512.h	/^	AT91_REG	 PMC_SR; 	\/\/ Status Register$/;"	m	struct:_AT91S_PMC
PMC_SR	include/at91sam7s512.h	/^	AT91_REG	 PMC_SR; 	\/\/ Status Register$/;"	m	struct:_AT91S_SYS
PMC_SR	include/at91sam7s512.h	/^#define PMC_SR /;"	d
PNLI	armsrc/LCD.h	/^#define PNLI	/;"	d
PNOP	armsrc/LCD.h	/^#define PNOP	/;"	d
PNORON	armsrc/LCD.h	/^#define PNORON	/;"	d
POLARSSL_AES_C	client/polarssl_config.h	/^#define POLARSSL_AES_C$/;"	d
POLARSSL_AES_H	client/aes.h	/^#define POLARSSL_AES_H$/;"	d
POLARSSL_ARC4_C	client/polarssl_config.h	/^#define POLARSSL_ARC4_C$/;"	d
POLARSSL_ASN1_PARSE_C	client/polarssl_config.h	/^#define POLARSSL_ASN1_PARSE_C$/;"	d
POLARSSL_ASN1_WRITE_C	client/polarssl_config.h	/^#define POLARSSL_ASN1_WRITE_C$/;"	d
POLARSSL_BASE64_C	client/polarssl_config.h	/^#define POLARSSL_BASE64_C$/;"	d
POLARSSL_BIGNUM_C	client/polarssl_config.h	/^#define POLARSSL_BIGNUM_C$/;"	d
POLARSSL_BLOWFISH_C	client/polarssl_config.h	/^#define POLARSSL_BLOWFISH_C$/;"	d
POLARSSL_CAMELLIA_C	client/polarssl_config.h	/^#define POLARSSL_CAMELLIA_C$/;"	d
POLARSSL_CCM_C	client/polarssl_config.h	/^#define POLARSSL_CCM_C$/;"	d
POLARSSL_CERTS_C	client/polarssl_config.h	/^#define POLARSSL_CERTS_C$/;"	d
POLARSSL_CIPHER_C	client/polarssl_config.h	/^#define POLARSSL_CIPHER_C$/;"	d
POLARSSL_CIPHER_MODE_CBC	client/loclass/des.h	/^#define POLARSSL_CIPHER_MODE_CBC$/;"	d
POLARSSL_CIPHER_MODE_CBC	client/polarssl_config.h	/^#define POLARSSL_CIPHER_MODE_CBC$/;"	d
POLARSSL_CIPHER_MODE_CFB	client/polarssl_config.h	/^#define POLARSSL_CIPHER_MODE_CFB$/;"	d
POLARSSL_CIPHER_MODE_CTR	client/polarssl_config.h	/^#define POLARSSL_CIPHER_MODE_CTR$/;"	d
POLARSSL_CIPHER_PADDING_ONE_AND_ZEROS	client/polarssl_config.h	/^#define POLARSSL_CIPHER_PADDING_ONE_AND_ZEROS$/;"	d
POLARSSL_CIPHER_PADDING_PKCS7	client/polarssl_config.h	/^#define POLARSSL_CIPHER_PADDING_PKCS7$/;"	d
POLARSSL_CIPHER_PADDING_ZEROS	client/polarssl_config.h	/^#define POLARSSL_CIPHER_PADDING_ZEROS$/;"	d
POLARSSL_CIPHER_PADDING_ZEROS_AND_LEN	client/polarssl_config.h	/^#define POLARSSL_CIPHER_PADDING_ZEROS_AND_LEN$/;"	d
POLARSSL_CONFIG_H	client/polarssl_config.h	/^#define POLARSSL_CONFIG_H$/;"	d
POLARSSL_CTR_DRBG_C	client/polarssl_config.h	/^#define POLARSSL_CTR_DRBG_C$/;"	d
POLARSSL_DEBUG_C	client/polarssl_config.h	/^#define POLARSSL_DEBUG_C$/;"	d
POLARSSL_DES_C	client/loclass/des.c	/^#define POLARSSL_DES_C$/;"	d	file:
POLARSSL_DES_C	client/polarssl_config.h	/^#define POLARSSL_DES_C$/;"	d
POLARSSL_DES_H	client/loclass/des.h	/^#define POLARSSL_DES_H$/;"	d
POLARSSL_DHM_C	client/polarssl_config.h	/^#define POLARSSL_DHM_C$/;"	d
POLARSSL_ECDH_C	client/polarssl_config.h	/^#define POLARSSL_ECDH_C$/;"	d
POLARSSL_ECDSA_C	client/polarssl_config.h	/^#define POLARSSL_ECDSA_C$/;"	d
POLARSSL_ECDSA_DETERMINISTIC	client/polarssl_config.h	/^#define POLARSSL_ECDSA_DETERMINISTIC$/;"	d
POLARSSL_ECP_C	client/polarssl_config.h	/^#define POLARSSL_ECP_C$/;"	d
POLARSSL_ECP_DP_BP256R1_ENABLED	client/polarssl_config.h	/^#define POLARSSL_ECP_DP_BP256R1_ENABLED$/;"	d
POLARSSL_ECP_DP_BP384R1_ENABLED	client/polarssl_config.h	/^#define POLARSSL_ECP_DP_BP384R1_ENABLED$/;"	d
POLARSSL_ECP_DP_BP512R1_ENABLED	client/polarssl_config.h	/^#define POLARSSL_ECP_DP_BP512R1_ENABLED$/;"	d
POLARSSL_ECP_DP_M255_ENABLED	client/polarssl_config.h	/^#define POLARSSL_ECP_DP_M255_ENABLED$/;"	d
POLARSSL_ECP_DP_SECP192K1_ENABLED	client/polarssl_config.h	/^#define POLARSSL_ECP_DP_SECP192K1_ENABLED$/;"	d
POLARSSL_ECP_DP_SECP192R1_ENABLED	client/polarssl_config.h	/^#define POLARSSL_ECP_DP_SECP192R1_ENABLED$/;"	d
POLARSSL_ECP_DP_SECP224K1_ENABLED	client/polarssl_config.h	/^#define POLARSSL_ECP_DP_SECP224K1_ENABLED$/;"	d
POLARSSL_ECP_DP_SECP224R1_ENABLED	client/polarssl_config.h	/^#define POLARSSL_ECP_DP_SECP224R1_ENABLED$/;"	d
POLARSSL_ECP_DP_SECP256K1_ENABLED	client/polarssl_config.h	/^#define POLARSSL_ECP_DP_SECP256K1_ENABLED$/;"	d
POLARSSL_ECP_DP_SECP256R1_ENABLED	client/polarssl_config.h	/^#define POLARSSL_ECP_DP_SECP256R1_ENABLED$/;"	d
POLARSSL_ECP_DP_SECP384R1_ENABLED	client/polarssl_config.h	/^#define POLARSSL_ECP_DP_SECP384R1_ENABLED$/;"	d
POLARSSL_ECP_DP_SECP521R1_ENABLED	client/polarssl_config.h	/^#define POLARSSL_ECP_DP_SECP521R1_ENABLED$/;"	d
POLARSSL_ECP_NIST_OPTIM	client/polarssl_config.h	/^#define POLARSSL_ECP_NIST_OPTIM$/;"	d
POLARSSL_ENTROPY_C	client/polarssl_config.h	/^#define POLARSSL_ENTROPY_C$/;"	d
POLARSSL_ERROR_C	client/polarssl_config.h	/^#define POLARSSL_ERROR_C$/;"	d
POLARSSL_ERROR_STRERROR_BC	client/polarssl_config.h	/^#define POLARSSL_ERROR_STRERROR_BC$/;"	d
POLARSSL_ERROR_STRERROR_DUMMY	client/polarssl_config.h	/^#define POLARSSL_ERROR_STRERROR_DUMMY$/;"	d
POLARSSL_ERR_AES_INVALID_INPUT_LENGTH	client/aes.h	/^#define POLARSSL_ERR_AES_INVALID_INPUT_LENGTH /;"	d
POLARSSL_ERR_AES_INVALID_KEY_LENGTH	client/aes.h	/^#define POLARSSL_ERR_AES_INVALID_KEY_LENGTH /;"	d
POLARSSL_ERR_DES_INVALID_INPUT_LENGTH	client/loclass/des.h	/^#define POLARSSL_ERR_DES_INVALID_INPUT_LENGTH /;"	d
POLARSSL_FS_IO	client/polarssl_config.h	/^#define POLARSSL_FS_IO$/;"	d
POLARSSL_GCM_C	client/polarssl_config.h	/^#define POLARSSL_GCM_C$/;"	d
POLARSSL_GENPRIME	client/polarssl_config.h	/^#define POLARSSL_GENPRIME$/;"	d
POLARSSL_HAVE_ASM	client/polarssl_config.h	/^#define POLARSSL_HAVE_ASM$/;"	d
POLARSSL_HAVE_IPV6	client/polarssl_config.h	/^#define POLARSSL_HAVE_IPV6$/;"	d
POLARSSL_HAVE_LONGLONG	client/polarssl_config.h	/^#define POLARSSL_HAVE_LONGLONG$/;"	d
POLARSSL_HAVE_TIME	client/polarssl_config.h	/^#define POLARSSL_HAVE_TIME$/;"	d
POLARSSL_HMAC_DRBG_C	client/polarssl_config.h	/^#define POLARSSL_HMAC_DRBG_C$/;"	d
POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED	client/polarssl_config.h	/^#define POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED$/;"	d
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED	client/polarssl_config.h	/^#define POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED$/;"	d
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED	client/polarssl_config.h	/^#define POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED$/;"	d
POLARSSL_KEY_EXCHANGE_ECDHE_PSK_ENABLED	client/polarssl_config.h	/^#define POLARSSL_KEY_EXCHANGE_ECDHE_PSK_ENABLED$/;"	d
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED	client/polarssl_config.h	/^#define POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED$/;"	d
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA_ENABLED	client/polarssl_config.h	/^#define POLARSSL_KEY_EXCHANGE_ECDH_ECDSA_ENABLED$/;"	d
POLARSSL_KEY_EXCHANGE_ECDH_RSA_ENABLED	client/polarssl_config.h	/^#define POLARSSL_KEY_EXCHANGE_ECDH_RSA_ENABLED$/;"	d
POLARSSL_KEY_EXCHANGE_PSK_ENABLED	client/polarssl_config.h	/^#define POLARSSL_KEY_EXCHANGE_PSK_ENABLED$/;"	d
POLARSSL_KEY_EXCHANGE_RSA_ENABLED	client/polarssl_config.h	/^#define POLARSSL_KEY_EXCHANGE_RSA_ENABLED$/;"	d
POLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED	client/polarssl_config.h	/^#define POLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED$/;"	d
POLARSSL_MD5_C	client/polarssl_config.h	/^#define POLARSSL_MD5_C$/;"	d
POLARSSL_MD_C	client/polarssl_config.h	/^#define POLARSSL_MD_C$/;"	d
POLARSSL_NET_C	client/polarssl_config.h	/^#define POLARSSL_NET_C$/;"	d
POLARSSL_OID_C	client/polarssl_config.h	/^#define POLARSSL_OID_C$/;"	d
POLARSSL_PBKDF2_C	client/polarssl_config.h	/^#define POLARSSL_PBKDF2_C$/;"	d
POLARSSL_PEM_PARSE_C	client/polarssl_config.h	/^#define POLARSSL_PEM_PARSE_C$/;"	d
POLARSSL_PEM_WRITE_C	client/polarssl_config.h	/^#define POLARSSL_PEM_WRITE_C$/;"	d
POLARSSL_PKCS12_C	client/polarssl_config.h	/^#define POLARSSL_PKCS12_C$/;"	d
POLARSSL_PKCS1_V15	client/polarssl_config.h	/^#define POLARSSL_PKCS1_V15$/;"	d
POLARSSL_PKCS1_V21	client/polarssl_config.h	/^#define POLARSSL_PKCS1_V21$/;"	d
POLARSSL_PKCS5_C	client/polarssl_config.h	/^#define POLARSSL_PKCS5_C$/;"	d
POLARSSL_PK_C	client/polarssl_config.h	/^#define POLARSSL_PK_C$/;"	d
POLARSSL_PK_PARSE_C	client/polarssl_config.h	/^#define POLARSSL_PK_PARSE_C$/;"	d
POLARSSL_PK_PARSE_EC_EXTENDED	client/polarssl_config.h	/^#define POLARSSL_PK_PARSE_EC_EXTENDED$/;"	d
POLARSSL_PK_WRITE_C	client/polarssl_config.h	/^#define POLARSSL_PK_WRITE_C$/;"	d
POLARSSL_RIPEMD160_C	client/polarssl_config.h	/^#define POLARSSL_RIPEMD160_C$/;"	d
POLARSSL_RSA_C	client/polarssl_config.h	/^#define POLARSSL_RSA_C$/;"	d
POLARSSL_SELF_TEST	client/polarssl_config.h	/^#define POLARSSL_SELF_TEST$/;"	d
POLARSSL_SHA1_C	client/polarssl_config.h	/^#define POLARSSL_SHA1_C$/;"	d
POLARSSL_SHA256_C	client/polarssl_config.h	/^#define POLARSSL_SHA256_C$/;"	d
POLARSSL_SHA512_C	client/polarssl_config.h	/^#define POLARSSL_SHA512_C$/;"	d
POLARSSL_SSL_ALERT_MESSAGES	client/polarssl_config.h	/^#define POLARSSL_SSL_ALERT_MESSAGES$/;"	d
POLARSSL_SSL_ALPN	client/polarssl_config.h	/^#define POLARSSL_SSL_ALPN$/;"	d
POLARSSL_SSL_CACHE_C	client/polarssl_config.h	/^#define POLARSSL_SSL_CACHE_C$/;"	d
POLARSSL_SSL_CLI_C	client/polarssl_config.h	/^#define POLARSSL_SSL_CLI_C$/;"	d
POLARSSL_SSL_MAX_FRAGMENT_LENGTH	client/polarssl_config.h	/^#define POLARSSL_SSL_MAX_FRAGMENT_LENGTH$/;"	d
POLARSSL_SSL_PROTO_SSL3	client/polarssl_config.h	/^#define POLARSSL_SSL_PROTO_SSL3$/;"	d
POLARSSL_SSL_PROTO_TLS1	client/polarssl_config.h	/^#define POLARSSL_SSL_PROTO_TLS1$/;"	d
POLARSSL_SSL_PROTO_TLS1_1	client/polarssl_config.h	/^#define POLARSSL_SSL_PROTO_TLS1_1$/;"	d
POLARSSL_SSL_PROTO_TLS1_2	client/polarssl_config.h	/^#define POLARSSL_SSL_PROTO_TLS1_2$/;"	d
POLARSSL_SSL_SERVER_NAME_INDICATION	client/polarssl_config.h	/^#define POLARSSL_SSL_SERVER_NAME_INDICATION$/;"	d
POLARSSL_SSL_SESSION_TICKETS	client/polarssl_config.h	/^#define POLARSSL_SSL_SESSION_TICKETS$/;"	d
POLARSSL_SSL_SRV_C	client/polarssl_config.h	/^#define POLARSSL_SSL_SRV_C$/;"	d
POLARSSL_SSL_SRV_SUPPORT_SSLV2_CLIENT_HELLO	client/polarssl_config.h	/^#define POLARSSL_SSL_SRV_SUPPORT_SSLV2_CLIENT_HELLO$/;"	d
POLARSSL_SSL_TLS_C	client/polarssl_config.h	/^#define POLARSSL_SSL_TLS_C$/;"	d
POLARSSL_SSL_TRUNCATED_HMAC	client/polarssl_config.h	/^#define POLARSSL_SSL_TRUNCATED_HMAC$/;"	d
POLARSSL_TIMING_C	client/polarssl_config.h	/^#define POLARSSL_TIMING_C$/;"	d
POLARSSL_VERSION_C	client/polarssl_config.h	/^#define POLARSSL_VERSION_C$/;"	d
POLARSSL_VERSION_FEATURES	client/polarssl_config.h	/^#define POLARSSL_VERSION_FEATURES$/;"	d
POLARSSL_X509_CHECK_EXTENDED_KEY_USAGE	client/polarssl_config.h	/^#define POLARSSL_X509_CHECK_EXTENDED_KEY_USAGE$/;"	d
POLARSSL_X509_CHECK_KEY_USAGE	client/polarssl_config.h	/^#define POLARSSL_X509_CHECK_KEY_USAGE$/;"	d
POLARSSL_X509_CREATE_C	client/polarssl_config.h	/^#define POLARSSL_X509_CREATE_C$/;"	d
POLARSSL_X509_CRL_PARSE_C	client/polarssl_config.h	/^#define POLARSSL_X509_CRL_PARSE_C$/;"	d
POLARSSL_X509_CRT_PARSE_C	client/polarssl_config.h	/^#define POLARSSL_X509_CRT_PARSE_C$/;"	d
POLARSSL_X509_CRT_WRITE_C	client/polarssl_config.h	/^#define POLARSSL_X509_CRT_WRITE_C$/;"	d
POLARSSL_X509_CSR_PARSE_C	client/polarssl_config.h	/^#define POLARSSL_X509_CSR_PARSE_C$/;"	d
POLARSSL_X509_CSR_WRITE_C	client/polarssl_config.h	/^#define POLARSSL_X509_CSR_WRITE_C$/;"	d
POLARSSL_X509_RSASSA_PSS_SUPPORT	client/polarssl_config.h	/^#define POLARSSL_X509_RSASSA_PSS_SUPPORT$/;"	d
POLARSSL_X509_USE_C	client/polarssl_config.h	/^#define POLARSSL_X509_USE_C$/;"	d
POLARSSL_XTEA_C	client/polarssl_config.h	/^#define POLARSSL_XTEA_C$/;"	d
POLY	common/iso15693tools.c	/^#define POLY /;"	d	file:
POS	liblua/lobject.c	/^#define POS	/;"	d	file:
POS_A	liblua/lopcodes.h	/^#define POS_A	/;"	d
POS_Ax	liblua/lopcodes.h	/^#define POS_Ax	/;"	d
POS_B	liblua/lopcodes.h	/^#define POS_B	/;"	d
POS_Bx	liblua/lopcodes.h	/^#define POS_Bx	/;"	d
POS_C	liblua/lopcodes.h	/^#define POS_C	/;"	d
POS_OP	liblua/lopcodes.h	/^#define POS_OP	/;"	d
PPASET	armsrc/LCD.h	/^#define PPASET	/;"	d
PPSS	armsrc/emvcard.h	/^    uint8_t PPSS;$/;"	m	struct:__anon2
PPTLAR	armsrc/LCD.h	/^#define PPTLAR	/;"	d
PPTLON	armsrc/LCD.h	/^#define PPTLON	/;"	d
PRAMWR	armsrc/LCD.h	/^#define PRAMWR	/;"	d
PRDDIDIF	armsrc/LCD.h	/^#define PRDDIDIF	/;"	d
PRDDST	armsrc/LCD.h	/^#define PRDDST	/;"	d
PRDID1	armsrc/LCD.h	/^#define PRDID1	/;"	d
PRDID2	armsrc/LCD.h	/^#define PRDID2	/;"	d
PRDID3	armsrc/LCD.h	/^#define PRDID3	/;"	d
PRDTEMP	armsrc/LCD.h	/^#define PRDTEMP	/;"	d
PRE	liblua/lobject.c	/^#define PRE	/;"	d	file:
PRGBSET	armsrc/LCD.h	/^#define PRGBSET	/;"	d
PRINTBIT	liblua/lctype.h	/^#define PRINTBIT	/;"	d
PROGNAME	liblua/luac.c	/^#define PROGNAME	/;"	d	file:
PROXENDIAN_H__	client/hid-flasher/proxendian.h	/^#define PROXENDIAN_H__$/;"	d
PROXENDIAN_H__	client/proxendian.h	/^#define PROXENDIAN_H__$/;"	d
PROXMARK3_H__	client/hid-flasher/proxmark3.h	/^#define PROXMARK3_H__$/;"	d
PROXMARK3_H__	client/proxmark3.h	/^#define PROXMARK3_H__$/;"	d
PROXPROMPT	client/hid-flasher/proxmark3.h	/^#define PROXPROMPT /;"	d
PROXPROMPT	client/proxmark3.h	/^#define PROXPROMPT /;"	d
PROXUSB_H__	client/hid-flasher/proxusb.h	/^#define PROXUSB_H__$/;"	d
PSEP	armsrc/LCD.h	/^#define PSEP	/;"	d
PSETBS	armsrc/LCD.h	/^#define PSETBS	/;"	d
PSETCON	armsrc/LCD.h	/^#define PSETCON	/;"	d
PSETMUL	armsrc/LCD.h	/^#define PSETMUL	/;"	d
PSETVOP	armsrc/LCD.h	/^#define PSETVOP	/;"	d
PSFD	armsrc/LCD.h	/^#define PSFD	/;"	d
PSKDemod	client/cmddata.c	/^int PSKDemod(const char *Cmd, uint8_t verbose)$/;"	f
PSLEEPIN	armsrc/LCD.h	/^#define PSLEEPIN	/;"	d
PSLEEPOUT	armsrc/LCD.h	/^#define PSLEEPOUT	/;"	d
PSWRESET	armsrc/LCD.h	/^#define PSWRESET	/;"	d
PTCDF	armsrc/LCD.h	/^#define PTCDF	/;"	d
PTCDFE	armsrc/LCD.h	/^#define PTCDFE	/;"	d
PTCVOPAB	armsrc/LCD.h	/^#define PTCVOPAB	/;"	d
PTCVOPCD	armsrc/LCD.h	/^#define PTCVOPCD	/;"	d
PTCVOPE	armsrc/LCD.h	/^#define PTCVOPE	/;"	d
PTEOFF	armsrc/LCD.h	/^#define PTEOFF	/;"	d
PTEON	armsrc/LCD.h	/^#define PTEON	/;"	d
PTRS	armsrc/LCD.h	/^#define PTRS	/;"	d
PT_DYNAMIC	client/elf.h	/^#define PT_DYNAMIC /;"	d
PT_DYNAMIC	client/hid-flasher/elf.h	/^#define PT_DYNAMIC /;"	d
PT_INTERP	client/elf.h	/^#define PT_INTERP /;"	d
PT_INTERP	client/hid-flasher/elf.h	/^#define PT_INTERP /;"	d
PT_LOAD	client/elf.h	/^#define PT_LOAD /;"	d
PT_LOAD	client/hid-flasher/elf.h	/^#define PT_LOAD /;"	d
PT_NOTE	client/elf.h	/^#define PT_NOTE /;"	d
PT_NOTE	client/hid-flasher/elf.h	/^#define PT_NOTE /;"	d
PT_NULL	client/elf.h	/^#define PT_NULL /;"	d
PT_NULL	client/hid-flasher/elf.h	/^#define PT_NULL /;"	d
PT_PHDR	client/elf.h	/^#define PT_PHDR /;"	d
PT_PHDR	client/hid-flasher/elf.h	/^#define PT_PHDR /;"	d
PT_SHLIB	client/elf.h	/^#define PT_SHLIB /;"	d
PT_SHLIB	client/hid-flasher/elf.h	/^#define PT_SHLIB /;"	d
PUTU32	armsrc/aes.c	/^#define PUTU32(/;"	d	file:
PUT_UINT32_BE	client/loclass/des.c	/^#define PUT_UINT32_BE(/;"	d	file:
PUT_UINT32_LE	client/aes.c	/^#define PUT_UINT32_LE(/;"	d	file:
PVSCRDEF	armsrc/LCD.h	/^#define PVSCRDEF	/;"	d
PWMC_CCNTR	include/at91sam7s512.h	/^	AT91_REG	 PWMC_CCNTR; 	\/\/ Channel Counter Register$/;"	m	struct:_AT91S_PWMC_CH
PWMC_CCNTR	include/at91sam7s512.h	/^#define PWMC_CCNTR /;"	d
PWMC_CDTYR	include/at91sam7s512.h	/^	AT91_REG	 PWMC_CDTYR; 	\/\/ Channel Duty Cycle Register$/;"	m	struct:_AT91S_PWMC_CH
PWMC_CDTYR	include/at91sam7s512.h	/^#define PWMC_CDTYR /;"	d
PWMC_CH	include/at91sam7s512.h	/^	AT91S_PWMC_CH	 PWMC_CH[4]; 	\/\/ PWMC Channel$/;"	m	struct:_AT91S_PWMC
PWMC_CMR	include/at91sam7s512.h	/^	AT91_REG	 PWMC_CMR; 	\/\/ Channel Mode Register$/;"	m	struct:_AT91S_PWMC_CH
PWMC_CMR	include/at91sam7s512.h	/^#define PWMC_CMR /;"	d
PWMC_CPRDR	include/at91sam7s512.h	/^	AT91_REG	 PWMC_CPRDR; 	\/\/ Channel Period Register$/;"	m	struct:_AT91S_PWMC_CH
PWMC_CPRDR	include/at91sam7s512.h	/^#define PWMC_CPRDR /;"	d
PWMC_CUPDR	include/at91sam7s512.h	/^	AT91_REG	 PWMC_CUPDR; 	\/\/ Channel Update Register$/;"	m	struct:_AT91S_PWMC_CH
PWMC_CUPDR	include/at91sam7s512.h	/^#define PWMC_CUPDR /;"	d
PWMC_DIS	include/at91sam7s512.h	/^	AT91_REG	 PWMC_DIS; 	\/\/ PWMC Disable Register$/;"	m	struct:_AT91S_PWMC
PWMC_DIS	include/at91sam7s512.h	/^#define PWMC_DIS /;"	d
PWMC_ENA	include/at91sam7s512.h	/^	AT91_REG	 PWMC_ENA; 	\/\/ PWMC Enable Register$/;"	m	struct:_AT91S_PWMC
PWMC_ENA	include/at91sam7s512.h	/^#define PWMC_ENA /;"	d
PWMC_IDR	include/at91sam7s512.h	/^	AT91_REG	 PWMC_IDR; 	\/\/ PWMC Interrupt Disable Register$/;"	m	struct:_AT91S_PWMC
PWMC_IDR	include/at91sam7s512.h	/^#define PWMC_IDR /;"	d
PWMC_IER	include/at91sam7s512.h	/^	AT91_REG	 PWMC_IER; 	\/\/ PWMC Interrupt Enable Register$/;"	m	struct:_AT91S_PWMC
PWMC_IER	include/at91sam7s512.h	/^#define PWMC_IER /;"	d
PWMC_IMR	include/at91sam7s512.h	/^	AT91_REG	 PWMC_IMR; 	\/\/ PWMC Interrupt Mask Register$/;"	m	struct:_AT91S_PWMC
PWMC_IMR	include/at91sam7s512.h	/^#define PWMC_IMR /;"	d
PWMC_ISR	include/at91sam7s512.h	/^	AT91_REG	 PWMC_ISR; 	\/\/ PWMC Interrupt Status Register$/;"	m	struct:_AT91S_PWMC
PWMC_ISR	include/at91sam7s512.h	/^#define PWMC_ISR /;"	d
PWMC_MR	include/at91sam7s512.h	/^	AT91_REG	 PWMC_MR; 	\/\/ PWMC Mode Register$/;"	m	struct:_AT91S_PWMC
PWMC_MR	include/at91sam7s512.h	/^#define PWMC_MR /;"	d
PWMC_Reserved	include/at91sam7s512.h	/^	AT91_REG	 PWMC_Reserved[3]; 	\/\/ Reserved$/;"	m	struct:_AT91S_PWMC_CH
PWMC_SR	include/at91sam7s512.h	/^	AT91_REG	 PWMC_SR; 	\/\/ PWMC Status Register$/;"	m	struct:_AT91S_PWMC
PWMC_SR	include/at91sam7s512.h	/^#define PWMC_SR /;"	d
PWMC_VR	include/at91sam7s512.h	/^	AT91_REG	 PWMC_VR; 	\/\/ PWMC Version Register$/;"	m	struct:_AT91S_PWMC
PWMC_VR	include/at91sam7s512.h	/^#define PWMC_VR /;"	d
PWM_CHANNEL	include/proxmark3.h	/^#define PWM_CHANNEL(/;"	d
PWM_CH_MODE_PRESCALER	include/proxmark3.h	/^#define PWM_CH_MODE_PRESCALER(/;"	d
PageWidth	client/proxguiqt.cpp	/^int PageWidth;$/;"	v
ParadoxdemodFSK	common/lfdemod.c	/^int ParadoxdemodFSK(uint8_t *dest, size_t *size, uint32_t *hi2, uint32_t *hi, uint32_t *lo)$/;"	f
Parse	client/cmdparser.h	/^  int (*Parse)(const char *Cmd);$/;"	m	struct:command_s
Pfunc	liblua/ldo.h	/^typedef void (*Pfunc) (lua_State *L, void *ud);$/;"	t
PlotGridX	client/ui.c	/^int PlotGridX, PlotGridY, PlotGridXdefault= 64, PlotGridYdefault= 64;$/;"	v
PlotGridXdefault	client/ui.c	/^int PlotGridX, PlotGridY, PlotGridXdefault= 64, PlotGridYdefault= 64;$/;"	v
PlotGridY	client/ui.c	/^int PlotGridX, PlotGridY, PlotGridXdefault= 64, PlotGridYdefault= 64;$/;"	v
PlotGridYdefault	client/ui.c	/^int PlotGridX, PlotGridY, PlotGridXdefault= 64, PlotGridYdefault= 64;$/;"	v
PrepareDelayedTransfer	armsrc/iso14443a.c	/^void PrepareDelayedTransfer(uint16_t delay)$/;"	f
Prepare_Addr	armsrc/lfops.c	/^uint8_t Prepare_Addr( uint8_t addr ) {$/;"	f
Prepare_Cmd	armsrc/lfops.c	/^uint8_t Prepare_Cmd( uint8_t cmd ) {$/;"	f
Prepare_Data	armsrc/lfops.c	/^uint8_t Prepare_Data( uint16_t data_low, uint16_t data_hi) {$/;"	f
PrintAndLog	client/ui.c	/^void PrintAndLog(char *fmt, ...)$/;"	f
PrintCode	liblua/luac.c	/^static void PrintCode(const Proto* f)$/;"	f	file:
PrintConstant	liblua/luac.c	/^static void PrintConstant(const Proto* f, int i)$/;"	f	file:
PrintDebug	liblua/luac.c	/^static void PrintDebug(const Proto* f)$/;"	f	file:
PrintFunction	liblua/luac.c	/^static void PrintFunction(const Proto* f, int full)$/;"	f	file:
PrintHeader	liblua/luac.c	/^static void PrintHeader(const Proto* f)$/;"	f	file:
PrintString	liblua/luac.c	/^static void PrintString(const TString* ts)$/;"	f	file:
Protect	liblua/lvm.c	/^#define Protect(/;"	d	file:
Proto	liblua/lobject.h	/^typedef struct Proto {$/;"	s
Proto	liblua/lobject.h	/^} Proto;$/;"	t	typeref:struct:Proto
ProxGuiQT	client/proxguiqt.cpp	/^ProxGuiQT::ProxGuiQT(int argc, char **argv) : plotapp(NULL), plotwidget(NULL),$/;"	f	class:ProxGuiQT
ProxGuiQT	client/proxguiqt.h	/^class ProxGuiQT : public QObject$/;"	c
ProxToAirDuration	armsrc/iso14443a.h	/^  uint32_t ProxToAirDuration;$/;"	m	struct:__anon22
ProxWidget	client/proxguiqt.cpp	/^ProxWidget::ProxWidget(QWidget *parent) : QWidget(parent), GraphStart(0), GraphPixelsPerPoint(1)$/;"	f	class:ProxWidget
ProxWidget	client/proxguiqt.h	/^class ProxWidget : public QWidget$/;"	c
PyramiddemodFSK	common/lfdemod.c	/^int PyramiddemodFSK(uint8_t *dest, size_t *size)$/;"	f
QTGUI	client/Makefile	/^QTGUI = $(OBJDIR)\/proxgui.o $(OBJDIR)\/proxguiqt.o $(OBJDIR)\/proxguiqt.moc.o$/;"	m
QTGUI	client/Makefile	/^QTGUI = guidummy.o$/;"	m
QTLDLIBS	client/Makefile	/^QTLDLIBS = $(shell pkg-config --libs QtCore QtGui 2>\/dev\/null)$/;"	m
QTLDLIBS	client/Makefile	/^QTLDLIBS = -L$(QTDIR)\/lib -lQtCore4 -lQtGui4$/;"	m
QTLDLIBS	client/hid-flasher/Makefile	/^QTLDLIBS =$/;"	m
Q_OBJECT	client/proxguiqt.h	/^	Q_OBJECT;$/;"	m	class:ProxGuiQT
Q_OBJECT	client/proxguiqt.h	/^	Q_OBJECT;$/;"	m	class:ProxWidget
R	armsrc/des.c	/^#define R /;"	d	file:
RA	liblua/lvm.c	/^#define RA(/;"	d	file:
RADIANS_PER_DEGREE	liblua/lmathlib.c	/^#define RADIANS_PER_DEGREE	/;"	d	file:
RAMFUNC	armsrc/apps.h	/^#define RAMFUNC /;"	d
RAMFUNC	include/common.h	/^#define RAMFUNC /;"	d
RANLIB	liblua/Makefile	/^RANLIB= ranlib$/;"	m
RB	liblua/lvm.c	/^#define RB(/;"	d	file:
RC	liblua/lvm.c	/^#define RC(/;"	d	file:
RCON	client/aes.c	/^static const uint32_t RCON[10] =$/;"	v	file:
RCON	client/aes.c	/^static uint32_t RCON[10];$/;"	v	file:
READER_LISTEN	fpga/hi_iso14443a.v	/^`define READER_LISTEN	3'b011$/;"	c
READER_MOD	fpga/hi_iso14443a.v	/^`define READER_MOD		3'b100$/;"	c
READ_BLOCKSIZE	client/pm3_mfd2eml.py	/^READ_BLOCKSIZE = 16$/;"	v
RED	armsrc/LCD.h	/^#define RED	/;"	d
RELAY_OFF	include/proxmark3.h	/^#define RELAY_OFF(/;"	d
RELAY_ON	include/proxmark3.h	/^#define RELAY_ON(/;"	d
REPORT_CHANGE	armsrc/appmain.c	/^#define REPORT_CHANGE	/;"	d	file:
REQUEST_GUARD_TIME	armsrc/iso14443a.c	/^#define REQUEST_GUARD_TIME /;"	d	file:
RESERVED	liblua/llex.h	/^enum RESERVED {$/;"	g
RESERVEDSLOT	liblua/lbaselib.c	/^#define RESERVEDSLOT	/;"	d	file:
RETS	liblua/lobject.c	/^#define RETS	/;"	d	file:
REVERSE_CASES	tools/findbits_test.py	/^	REVERSE_CASES = [$/;"	v	class:TestFindBits
RHT2F_AUTHENTICATE	include/hitag2.h	/^	RHT2F_AUTHENTICATE        = 22,$/;"	e	enum:__anon56
RHT2F_CRYPTO	include/hitag2.h	/^	RHT2F_CRYPTO              = 23,$/;"	e	enum:__anon56
RHT2F_PASSWORD	include/hitag2.h	/^	RHT2F_PASSWORD            = 21,$/;"	e	enum:__anon56
RHT2F_TEST_AUTH_ATTEMPTS	include/hitag2.h	/^	RHT2F_TEST_AUTH_ATTEMPTS  = 25,$/;"	e	enum:__anon56
RHs	client/loclass/des.c	/^static const uint32_t RHs[16] =$/;"	v	file:
RKASK	liblua/lopcodes.h	/^#define RKASK(/;"	d
RKB	liblua/lvm.c	/^#define RKB(/;"	d	file:
RKC	liblua/lvm.c	/^#define RKC(/;"	d	file:
RM	client/Makefile	/^RM = rm -f$/;"	m
RM	client/hid-flasher/Makefile	/^RM = rm -f$/;"	m
RM	liblua/Makefile	/^RM= rm -f$/;"	m
ROTL8	client/aes.c	/^#define ROTL8(/;"	d	file:
ROTTABLE	armsrc/des.c	/^#define ROTTABLE /;"	d	file:
ROTTABLE_INV	armsrc/des.c	/^#define ROTTABLE_INV /;"	d	file:
RSTC_RCR	include/at91sam7s512.h	/^	AT91_REG	 RSTC_RCR; 	\/\/ Reset Control Register$/;"	m	struct:_AT91S_RSTC
RSTC_RCR	include/at91sam7s512.h	/^	AT91_REG	 RSTC_RCR; 	\/\/ Reset Control Register$/;"	m	struct:_AT91S_SYS
RSTC_RCR	include/at91sam7s512.h	/^#define RSTC_RCR /;"	d
RSTC_RMR	include/at91sam7s512.h	/^	AT91_REG	 RSTC_RMR; 	\/\/ Reset Mode Register$/;"	m	struct:_AT91S_RSTC
RSTC_RMR	include/at91sam7s512.h	/^	AT91_REG	 RSTC_RMR; 	\/\/ Reset Mode Register$/;"	m	struct:_AT91S_SYS
RSTC_RMR	include/at91sam7s512.h	/^#define RSTC_RMR /;"	d
RSTC_RSR	include/at91sam7s512.h	/^	AT91_REG	 RSTC_RSR; 	\/\/ Reset Status Register$/;"	m	struct:_AT91S_RSTC
RSTC_RSR	include/at91sam7s512.h	/^	AT91_REG	 RSTC_RSR; 	\/\/ Reset Status Register$/;"	m	struct:_AT91S_SYS
RSTC_RSR	include/at91sam7s512.h	/^#define RSTC_RSR /;"	d
RST_CONTROL_KEY	include/proxmark3.h	/^#define RST_CONTROL_KEY	/;"	d
RSb	client/aes.c	/^static const unsigned char RSb[256] =$/;"	v	file:
RSb	client/aes.c	/^static unsigned char RSb[256];$/;"	v	file:
RT	client/aes.c	/^#define RT /;"	d	file:
RT	client/aes.c	/^#undef RT$/;"	d	file:
RT0	client/aes.c	/^static const uint32_t RT0[256] = { RT };$/;"	v	file:
RT0	client/aes.c	/^static uint32_t RT0[256];$/;"	v	file:
RT1	client/aes.c	/^static const uint32_t RT1[256] = { RT };$/;"	v	file:
RT1	client/aes.c	/^static uint32_t RT1[256];$/;"	v	file:
RT2	client/aes.c	/^static const uint32_t RT2[256] = { RT };$/;"	v	file:
RT2	client/aes.c	/^static uint32_t RT2[256];$/;"	v	file:
RT3	client/aes.c	/^static const uint32_t RT3[256] = { RT };$/;"	v	file:
RT3	client/aes.c	/^static uint32_t RT3[256];$/;"	v	file:
RTTC_RTAR	include/at91sam7s512.h	/^	AT91_REG	 RTTC_RTAR; 	\/\/ Real-time Alarm Register$/;"	m	struct:_AT91S_RTTC
RTTC_RTAR	include/at91sam7s512.h	/^	AT91_REG	 RTTC_RTAR; 	\/\/ Real-time Alarm Register$/;"	m	struct:_AT91S_SYS
RTTC_RTAR	include/at91sam7s512.h	/^#define RTTC_RTAR /;"	d
RTTC_RTMR	include/at91sam7s512.h	/^	AT91_REG	 RTTC_RTMR; 	\/\/ Real-time Mode Register$/;"	m	struct:_AT91S_RTTC
RTTC_RTMR	include/at91sam7s512.h	/^	AT91_REG	 RTTC_RTMR; 	\/\/ Real-time Mode Register$/;"	m	struct:_AT91S_SYS
RTTC_RTMR	include/at91sam7s512.h	/^#define RTTC_RTMR /;"	d
RTTC_RTSR	include/at91sam7s512.h	/^	AT91_REG	 RTTC_RTSR; 	\/\/ Real-time Status Register$/;"	m	struct:_AT91S_RTTC
RTTC_RTSR	include/at91sam7s512.h	/^	AT91_REG	 RTTC_RTSR; 	\/\/ Real-time Status Register$/;"	m	struct:_AT91S_SYS
RTTC_RTSR	include/at91sam7s512.h	/^#define RTTC_RTSR /;"	d
RTTC_RTVR	include/at91sam7s512.h	/^	AT91_REG	 RTTC_RTVR; 	\/\/ Real-time Value Register$/;"	m	struct:_AT91S_RTTC
RTTC_RTVR	include/at91sam7s512.h	/^	AT91_REG	 RTTC_RTVR; 	\/\/ Real-time Value Register$/;"	m	struct:_AT91S_SYS
RTTC_RTVR	include/at91sam7s512.h	/^#define RTTC_RTVR /;"	d
RWD_TIME_0	armsrc/legicrf.c	/^#define RWD_TIME_0 /;"	d	file:
RWD_TIME_1	armsrc/legicrf.c	/^#define	RWD_TIME_1 /;"	d	file:
RWD_TIME_FUZZ	armsrc/legicrf.c	/^#define RWD_TIME_FUZZ /;"	d	file:
RWD_TIME_PAUSE	armsrc/legicrf.c	/^#define RWD_TIME_PAUSE /;"	d	file:
ReadAdc	armsrc/appmain.c	/^static int ReadAdc(int ch)$/;"	f	file:
ReadDumpFile 	client/lualibs/utils.lua	/^	ReadDumpFile = function (filename)$/;"	f
ReadLF	armsrc/lfsampling.c	/^uint32_t ReadLF(bool activeField)$/;"	f
ReadMem	armsrc/appmain.c	/^void ReadMem(int addr)$/;"	f
ReadPCF7931	armsrc/lfops.c	/^void ReadPCF7931() {$/;"	f
ReadSTMemoryIso14443	armsrc/iso14443.c	/^void ReadSTMemoryIso14443(uint32_t dwLast)$/;"	f
ReadTItag	armsrc/lfops.c	/^void ReadTItag(void)$/;"	f
ReaderHitag	armsrc/hitag2.c	/^void ReaderHitag(hitag_function htf, hitag_data* htd) {$/;"	f
ReaderIClass	armsrc/iclass.c	/^void ReaderIClass(uint8_t arg0) {$/;"	f
ReaderIClass_Replay	armsrc/iclass.c	/^void ReaderIClass_Replay(uint8_t arg0, uint8_t *MAC) {$/;"	f
ReaderIso14443a	armsrc/iso14443a.c	/^void ReaderIso14443a(UsbCommand *c)$/;"	f
ReaderIso15693	armsrc/iso15693.c	/^void ReaderIso15693(uint32_t parameter)$/;"	f
ReaderMifare	armsrc/iso14443a.c	/^void ReaderMifare(bool first_try)$/;"	f
ReaderReceive	armsrc/iso14443a.c	/^int ReaderReceive(uint8_t *receivedAnswer, uint8_t *parity)$/;"	f
ReaderReceiveIClass	armsrc/iclass.c	/^int ReaderReceiveIClass(uint8_t* receivedAnswer)$/;"	f
ReaderReceiveOffset	armsrc/iso14443a.c	/^int ReaderReceiveOffset(uint8_t* receivedAnswer, uint16_t offset, uint8_t *parity)$/;"	f
ReaderTransmit	armsrc/iso14443a.c	/^void ReaderTransmit(uint8_t* frame, uint16_t len, uint32_t *timing)$/;"	f
ReaderTransmitBits	armsrc/iso14443a.c	/^void ReaderTransmitBits(uint8_t* frame, uint16_t len, uint32_t *timing)$/;"	f
ReaderTransmitBitsPar	armsrc/iso14443a.c	/^void ReaderTransmitBitsPar(uint8_t* frame, uint16_t bits, uint8_t *par, uint32_t *timing)$/;"	f
ReaderTransmitIClass	armsrc/iclass.c	/^void ReaderTransmitIClass(uint8_t* frame, int len)$/;"	f
ReaderTransmitPar	armsrc/iso14443a.c	/^void ReaderTransmitPar(uint8_t* frame, uint16_t len, uint8_t *par, uint32_t *timing)$/;"	f
ReceiveCommand	client/flasher.c	/^void ReceiveCommand(UsbCommand* rxcmd) {$/;"	f
ReceiveCommand	client/hid-flasher/proxusb.c	/^void ReceiveCommand(UsbCommand *c)$/;"	f
ReceiveCommandPoll	client/hid-flasher/proxusb.c	/^bool ReceiveCommandPoll(UsbCommand *c)$/;"	f
RecordRawAdcSamplesIso15693	armsrc/iso15693.c	/^void RecordRawAdcSamplesIso15693(void)$/;"	f
RepaintGraphWindow	client/guidummy.c	/^void RepaintGraphWindow(void) {}$/;"	f
RepaintGraphWindow	client/proxgui.cpp	/^extern "C" void RepaintGraphWindow(void)$/;"	f
RepaintGraphWindow	client/proxguiqt.cpp	/^void ProxGuiQT::RepaintGraphWindow(void)$/;"	f	class:ProxGuiQT
RepaintGraphWindowSignal	client/proxguiqt.moc.cpp	/^void ProxGuiQT::RepaintGraphWindowSignal()$/;"	f	class:ProxGuiQT
Reserved	include/at91sam7s512.h	/^#define Reserved /;"	d
Reserved0	include/at91sam7s512.h	/^	AT91_REG	 Reserved0[1]; 	\/\/$/;"	m	struct:_AT91S_CKGR
Reserved0	include/at91sam7s512.h	/^	AT91_REG	 Reserved0[1]; 	\/\/$/;"	m	struct:_AT91S_MC
Reserved0	include/at91sam7s512.h	/^	AT91_REG	 Reserved0[1]; 	\/\/$/;"	m	struct:_AT91S_PIO
Reserved0	include/at91sam7s512.h	/^	AT91_REG	 Reserved0[1]; 	\/\/$/;"	m	struct:_AT91S_PMC
Reserved0	include/at91sam7s512.h	/^	AT91_REG	 Reserved0[1]; 	\/\/$/;"	m	struct:_AT91S_TWI
Reserved0	include/at91sam7s512.h	/^	AT91_REG	 Reserved0[1]; 	\/\/$/;"	m	struct:_AT91S_UDP
Reserved0	include/at91sam7s512.h	/^	AT91_REG	 Reserved0[2]; 	\/\/$/;"	m	struct:_AT91S_ADC
Reserved0	include/at91sam7s512.h	/^	AT91_REG	 Reserved0[2]; 	\/\/$/;"	m	struct:_AT91S_AIC
Reserved0	include/at91sam7s512.h	/^	AT91_REG	 Reserved0[2]; 	\/\/$/;"	m	struct:_AT91S_SSC
Reserved0	include/at91sam7s512.h	/^	AT91_REG	 Reserved0[2]; 	\/\/$/;"	m	struct:_AT91S_SYS
Reserved0	include/at91sam7s512.h	/^	AT91_REG	 Reserved0[2]; 	\/\/$/;"	m	struct:_AT91S_TC
Reserved0	include/at91sam7s512.h	/^	AT91_REG	 Reserved0[4]; 	\/\/$/;"	m	struct:_AT91S_SPI
Reserved0	include/at91sam7s512.h	/^	AT91_REG	 Reserved0[4]; 	\/\/$/;"	m	struct:_AT91S_TCB
Reserved0	include/at91sam7s512.h	/^	AT91_REG	 Reserved0[55]; 	\/\/$/;"	m	struct:_AT91S_PWMC
Reserved0	include/at91sam7s512.h	/^	AT91_REG	 Reserved0[5]; 	\/\/$/;"	m	struct:_AT91S_USART
Reserved0	include/at91sam7s512.h	/^	AT91_REG	 Reserved0[7]; 	\/\/$/;"	m	struct:_AT91S_DBGU
Reserved1	include/at91sam7s512.h	/^	AT91_REG	 Reserved1[1]; 	\/\/$/;"	m	struct:_AT91S_AIC
Reserved1	include/at91sam7s512.h	/^	AT91_REG	 Reserved1[1]; 	\/\/$/;"	m	struct:_AT91S_PIO
Reserved1	include/at91sam7s512.h	/^	AT91_REG	 Reserved1[1]; 	\/\/$/;"	m	struct:_AT91S_PMC
Reserved1	include/at91sam7s512.h	/^	AT91_REG	 Reserved1[1]; 	\/\/$/;"	m	struct:_AT91S_SYS
Reserved1	include/at91sam7s512.h	/^	AT91_REG	 Reserved1[1]; 	\/\/$/;"	m	struct:_AT91S_UDP
Reserved1	include/at91sam7s512.h	/^	AT91_REG	 Reserved1[1]; 	\/\/$/;"	m	struct:_AT91S_USART
Reserved1	include/at91sam7s512.h	/^	AT91_REG	 Reserved1[2]; 	\/\/$/;"	m	struct:_AT91S_MC
Reserved1	include/at91sam7s512.h	/^	AT91_REG	 Reserved1[2]; 	\/\/$/;"	m	struct:_AT91S_SSC
Reserved1	include/at91sam7s512.h	/^	AT91_REG	 Reserved1[3]; 	\/\/$/;"	m	struct:_AT91S_TWI
Reserved1	include/at91sam7s512.h	/^	AT91_REG	 Reserved1[44]; 	\/\/$/;"	m	struct:_AT91S_ADC
Reserved1	include/at91sam7s512.h	/^	AT91_REG	 Reserved1[45]; 	\/\/$/;"	m	struct:_AT91S_DBGU
Reserved1	include/at91sam7s512.h	/^	AT91_REG	 Reserved1[48]; 	\/\/$/;"	m	struct:_AT91S_SPI
Reserved1	include/at91sam7s512.h	/^	AT91_REG	 Reserved1[4]; 	\/\/$/;"	m	struct:_AT91S_TCB
Reserved1	include/at91sam7s512.h	/^	AT91_REG	 Reserved1[64]; 	\/\/$/;"	m	struct:_AT91S_PWMC
Reserved10	include/at91sam7s512.h	/^	AT91_REG	 Reserved10[1]; 	\/\/$/;"	m	struct:_AT91S_SYS
Reserved11	include/at91sam7s512.h	/^	AT91_REG	 Reserved11[9]; 	\/\/$/;"	m	struct:_AT91S_SYS
Reserved12	include/at91sam7s512.h	/^	AT91_REG	 Reserved12[469]; 	\/\/$/;"	m	struct:_AT91S_SYS
Reserved13	include/at91sam7s512.h	/^	AT91_REG	 Reserved13[1]; 	\/\/$/;"	m	struct:_AT91S_SYS
Reserved14	include/at91sam7s512.h	/^	AT91_REG	 Reserved14[1]; 	\/\/$/;"	m	struct:_AT91S_SYS
Reserved15	include/at91sam7s512.h	/^	AT91_REG	 Reserved15[1]; 	\/\/$/;"	m	struct:_AT91S_SYS
Reserved16	include/at91sam7s512.h	/^	AT91_REG	 Reserved16[3]; 	\/\/$/;"	m	struct:_AT91S_SYS
Reserved17	include/at91sam7s512.h	/^	AT91_REG	 Reserved17[5]; 	\/\/$/;"	m	struct:_AT91S_SYS
Reserved18	include/at91sam7s512.h	/^	AT91_REG	 Reserved18[36]; 	\/\/$/;"	m	struct:_AT91S_SYS
Reserved19	include/at91sam7s512.h	/^	AT91_REG	 Reserved19[5]; 	\/\/$/;"	m	struct:_AT91S_SYS
Reserved2	include/at91sam7s512.h	/^	AT91_REG	 Reserved2[1]; 	\/\/$/;"	m	struct:_AT91S_PIO
Reserved2	include/at91sam7s512.h	/^	AT91_REG	 Reserved2[1]; 	\/\/$/;"	m	struct:_AT91S_PMC
Reserved2	include/at91sam7s512.h	/^	AT91_REG	 Reserved2[1]; 	\/\/$/;"	m	struct:_AT91S_UDP
Reserved2	include/at91sam7s512.h	/^	AT91_REG	 Reserved2[2]; 	\/\/$/;"	m	struct:_AT91S_SSC
Reserved2	include/at91sam7s512.h	/^	AT91_REG	 Reserved2[44]; 	\/\/$/;"	m	struct:_AT91S_USART
Reserved2	include/at91sam7s512.h	/^	AT91_REG	 Reserved2[45]; 	\/\/$/;"	m	struct:_AT91S_SYS
Reserved2	include/at91sam7s512.h	/^	AT91_REG	 Reserved2[4]; 	\/\/$/;"	m	struct:_AT91S_TCB
Reserved2	include/at91sam7s512.h	/^	AT91_REG	 Reserved2[50]; 	\/\/$/;"	m	struct:_AT91S_TWI
Reserved20	include/at91sam7s512.h	/^	AT91_REG	 Reserved20[5]; 	\/\/$/;"	m	struct:_AT91S_SYS
Reserved3	include/at91sam7s512.h	/^	AT91_REG	 Reserved3[1]; 	\/\/$/;"	m	struct:_AT91S_PIO
Reserved3	include/at91sam7s512.h	/^	AT91_REG	 Reserved3[3]; 	\/\/$/;"	m	struct:_AT91S_PMC
Reserved3	include/at91sam7s512.h	/^	AT91_REG	 Reserved3[44]; 	\/\/$/;"	m	struct:_AT91S_SSC
Reserved3	include/at91sam7s512.h	/^	AT91_REG	 Reserved3[4]; 	\/\/$/;"	m	struct:_AT91S_UDP
Reserved3	include/at91sam7s512.h	/^	AT91_REG	 Reserved3[7]; 	\/\/$/;"	m	struct:_AT91S_SYS
Reserved4	include/at91sam7s512.h	/^	AT91_REG	 Reserved4[1]; 	\/\/$/;"	m	struct:_AT91S_PIO
Reserved4	include/at91sam7s512.h	/^	AT91_REG	 Reserved4[45]; 	\/\/$/;"	m	struct:_AT91S_SYS
Reserved4	include/at91sam7s512.h	/^	AT91_REG	 Reserved4[5]; 	\/\/$/;"	m	struct:_AT91S_PMC
Reserved4	include/at91sam7s512.h	/^	AT91_REG	 Reserved4[5]; 	\/\/$/;"	m	struct:_AT91S_UDP
Reserved5	include/at91sam7s512.h	/^	AT91_REG	 Reserved5[54]; 	\/\/$/;"	m	struct:_AT91S_SYS
Reserved5	include/at91sam7s512.h	/^	AT91_REG	 Reserved5[9]; 	\/\/$/;"	m	struct:_AT91S_PIO
Reserved6	include/at91sam7s512.h	/^	AT91_REG	 Reserved6[1]; 	\/\/$/;"	m	struct:_AT91S_SYS
Reserved7	include/at91sam7s512.h	/^	AT91_REG	 Reserved7[1]; 	\/\/$/;"	m	struct:_AT91S_SYS
Reserved8	include/at91sam7s512.h	/^	AT91_REG	 Reserved8[1]; 	\/\/$/;"	m	struct:_AT91S_SYS
Reserved9	include/at91sam7s512.h	/^	AT91_REG	 Reserved9[1]; 	\/\/$/;"	m	struct:_AT91S_SYS
S	liblua/luac.c	/^#define S(/;"	d	file:
S1	armsrc/crapto1.c	/^static const uint32_t S1[] = {     0x62141, 0x310A0, 0x18850, 0x0C428, 0x06214,$/;"	v	file:
S1	client/nonce2key/crapto1.c	/^static const uint32_t S1[] = {     0x62141, 0x310A0, 0x18850, 0x0C428, 0x06214,$/;"	v	file:
S1	tools/mfkey/crapto1.c	/^static const uint32_t S1[] = {     0x62141, 0x310A0, 0x18850, 0x0C428, 0x06214,$/;"	v	file:
S1	tools/nonce2key/crapto1.c	/^static const uint32_t S1[] = {     0x62141, 0x310A0, 0x18850, 0x0C428, 0x06214,$/;"	v	file:
S2	armsrc/crapto1.c	/^static const uint32_t S2[] = {  0x3A557B00, 0x5D2ABD80, 0x2E955EC0, 0x174AAF60,$/;"	v	file:
S2	client/nonce2key/crapto1.c	/^static const uint32_t S2[] = {  0x3A557B00, 0x5D2ABD80, 0x2E955EC0, 0x174AAF60,$/;"	v	file:
S2	tools/mfkey/crapto1.c	/^static const uint32_t S2[] = {  0x3A557B00, 0x5D2ABD80, 0x2E955EC0, 0x174AAF60,$/;"	v	file:
S2	tools/nonce2key/crapto1.c	/^static const uint32_t S2[] = {  0x3A557B00, 0x5D2ABD80, 0x2E955EC0, 0x174AAF60,$/;"	v	file:
SAK	armsrc/emvcard.h	/^    uint8_t SAK; $/;"	m	struct:__anon2
SAK	armsrc/emvcard.h	/^    uint8_t SAK; $/;"	m	struct:__anon3
SB1	client/loclass/des.c	/^static const uint32_t SB1[64] =$/;"	v	file:
SB2	client/loclass/des.c	/^static const uint32_t SB2[64] =$/;"	v	file:
SB3	client/loclass/des.c	/^static const uint32_t SB3[64] =$/;"	v	file:
SB4	client/loclass/des.c	/^static const uint32_t SB4[64] =$/;"	v	file:
SB5	client/loclass/des.c	/^static const uint32_t SB5[64] =$/;"	v	file:
SB6	client/loclass/des.c	/^static const uint32_t SB6[64] =$/;"	v	file:
SB7	client/loclass/des.c	/^static const uint32_t SB7[64] =$/;"	v	file:
SB8	client/loclass/des.c	/^static const uint32_t SB8[64] =$/;"	v	file:
SCRIPTING_H__	client/scripting.h	/^#define SCRIPTING_H__$/;"	d
SEARCH_CASES	tools/findbits_test.py	/^	SEARCH_CASES = [$/;"	v	class:TestFindBits
SEC_D	armsrc/iso14443a.c	/^#define	SEC_D /;"	d	file:
SEC_E	armsrc/iso14443a.c	/^#define	SEC_E /;"	d	file:
SEC_F	armsrc/iso14443a.c	/^#define	SEC_F /;"	d	file:
SEC_X	armsrc/iso14443a.c	/^#define	SEC_X /;"	d	file:
SEC_Y	armsrc/iso14443a.c	/^#define	SEC_Y /;"	d	file:
SEC_Z	armsrc/iso14443a.c	/^#define	SEC_Z /;"	d	file:
SEND_BIT	armsrc/fpgaloader.c	/^#define SEND_BIT(/;"	d	file:
SEPARATED	liblua/lgc.h	/^#define SEPARATED	/;"	d
SESSION_IV	armsrc/legicrf.c	/^#define SESSION_IV /;"	d	file:
SETARG_A	liblua/lopcodes.h	/^#define SETARG_A(/;"	d
SETARG_Ax	liblua/lopcodes.h	/^#define SETARG_Ax(/;"	d
SETARG_B	liblua/lopcodes.h	/^#define SETARG_B(/;"	d
SETARG_Bx	liblua/lopcodes.h	/^#define SETARG_Bx(/;"	d
SETARG_C	liblua/lopcodes.h	/^#define SETARG_C(/;"	d
SETARG_sBx	liblua/lopcodes.h	/^#define SETARG_sBx(/;"	d
SETBIT	include/proxmark3.h	/^#define SETBIT(/;"	d
SET_CONTROL_LINE_STATE	common/usb_cdc.c	/^#define SET_CONTROL_LINE_STATE /;"	d	file:
SET_LINE_CODING	common/usb_cdc.c	/^#define SET_LINE_CODING /;"	d	file:
SET_OPCODE	liblua/lopcodes.h	/^#define SET_OPCODE(/;"	d
SHORT_COIL	armsrc/hitag2.c	/^#define SHORT_COIL(/;"	d	file:
SHORT_COIL	armsrc/lfops.c	/^#define SHORT_COIL(/;"	d	file:
SIM_DIVISOR	armsrc/legicrf.c	/^#define SIM_DIVISOR /;"	d	file:
SIM_SHIFT	armsrc/legicrf.c	/^#define SIM_SHIFT /;"	d	file:
SIZE_A	liblua/lopcodes.h	/^#define SIZE_A	/;"	d
SIZE_Ax	liblua/lopcodes.h	/^#define SIZE_Ax	/;"	d
SIZE_B	liblua/lopcodes.h	/^#define SIZE_B	/;"	d
SIZE_Bx	liblua/lopcodes.h	/^#define SIZE_Bx	/;"	d
SIZE_C	liblua/lopcodes.h	/^#define SIZE_C	/;"	d
SIZE_OP	liblua/lopcodes.h	/^#define SIZE_OP	/;"	d
SLEEP_H__	client/hid-flasher/sleep.h	/^#define SLEEP_H__$/;"	d
SLEEP_H__	client/sleep.h	/^#define SLEEP_H__$/;"	d
SNF_ANTICOL1	armsrc/mifaresniff.h	/^#define SNF_ANTICOL1	/;"	d
SNF_ANTICOL2	armsrc/mifaresniff.h	/^#define SNF_ANTICOL2	/;"	d
SNF_ATQA	armsrc/mifaresniff.h	/^#define SNF_ATQA	/;"	d
SNF_CARD_CMD	armsrc/mifaresniff.h	/^#define SNF_CARD_CMD	/;"	d
SNF_CARD_IDLE	armsrc/mifaresniff.h	/^#define SNF_CARD_IDLE	/;"	d
SNF_CARD_RESP	armsrc/mifaresniff.h	/^#define SNF_CARD_RESP	/;"	d
SNF_INIT	armsrc/mifaresniff.h	/^#define SNF_INIT	/;"	d
SNF_NO_FIELD	armsrc/mifaresniff.h	/^#define SNF_NO_FIELD	/;"	d
SNF_SAK	armsrc/mifaresniff.h	/^#define SNF_SAK	/;"	d
SNF_UID1	armsrc/mifaresniff.h	/^#define SNF_UID1	/;"	d
SNF_UID2	armsrc/mifaresniff.h	/^#define SNF_UID2	/;"	d
SNF_UID_4	armsrc/mifaresniff.h	/^#define SNF_UID_4	/;"	d
SNF_UID_7	armsrc/mifaresniff.h	/^#define SNF_UID_7	/;"	d
SNF_WUPREQ	armsrc/mifaresniff.h	/^#define SNF_WUPREQ	/;"	d
SNIFFER	fpga/hi_iso14443a.v	/^`define SNIFFER			3'b000$/;"	c
SPACEBIT	liblua/lctype.h	/^#define SPACEBIT	/;"	d
SPACECHARS	liblua/lbaselib.c	/^#define SPACECHARS	/;"	d	file:
SPECIALS	liblua/lstrlib.c	/^#define SPECIALS	/;"	d	file:
SPI_CR	include/at91sam7s512.h	/^	AT91_REG	 SPI_CR; 	\/\/ Control Register$/;"	m	struct:_AT91S_SPI
SPI_CR	include/at91sam7s512.h	/^#define SPI_CR /;"	d
SPI_CSR	include/at91sam7s512.h	/^	AT91_REG	 SPI_CSR[4]; 	\/\/ Chip Select Register$/;"	m	struct:_AT91S_SPI
SPI_CSR	include/at91sam7s512.h	/^#define SPI_CSR /;"	d
SPI_FPGA_MODE	include/proxmark3.h	/^#define SPI_FPGA_MODE	/;"	d
SPI_IDR	include/at91sam7s512.h	/^	AT91_REG	 SPI_IDR; 	\/\/ Interrupt Disable Register$/;"	m	struct:_AT91S_SPI
SPI_IDR	include/at91sam7s512.h	/^#define SPI_IDR /;"	d
SPI_IER	include/at91sam7s512.h	/^	AT91_REG	 SPI_IER; 	\/\/ Interrupt Enable Register$/;"	m	struct:_AT91S_SPI
SPI_IER	include/at91sam7s512.h	/^#define SPI_IER /;"	d
SPI_IMR	include/at91sam7s512.h	/^	AT91_REG	 SPI_IMR; 	\/\/ Interrupt Mask Register$/;"	m	struct:_AT91S_SPI
SPI_IMR	include/at91sam7s512.h	/^#define SPI_IMR /;"	d
SPI_LCD_MODE	include/proxmark3.h	/^#define SPI_LCD_MODE	/;"	d
SPI_MR	include/at91sam7s512.h	/^	AT91_REG	 SPI_MR; 	\/\/ Mode Register$/;"	m	struct:_AT91S_SPI
SPI_MR	include/at91sam7s512.h	/^#define SPI_MR /;"	d
SPI_PTCR	include/at91sam7s512.h	/^	AT91_REG	 SPI_PTCR; 	\/\/ PDC Transfer Control Register$/;"	m	struct:_AT91S_SPI
SPI_PTSR	include/at91sam7s512.h	/^	AT91_REG	 SPI_PTSR; 	\/\/ PDC Transfer Status Register$/;"	m	struct:_AT91S_SPI
SPI_RCR	include/at91sam7s512.h	/^	AT91_REG	 SPI_RCR; 	\/\/ Receive Counter Register$/;"	m	struct:_AT91S_SPI
SPI_RDR	include/at91sam7s512.h	/^	AT91_REG	 SPI_RDR; 	\/\/ Receive Data Register$/;"	m	struct:_AT91S_SPI
SPI_RDR	include/at91sam7s512.h	/^#define SPI_RDR /;"	d
SPI_RNCR	include/at91sam7s512.h	/^	AT91_REG	 SPI_RNCR; 	\/\/ Receive Next Counter Register$/;"	m	struct:_AT91S_SPI
SPI_RNPR	include/at91sam7s512.h	/^	AT91_REG	 SPI_RNPR; 	\/\/ Receive Next Pointer Register$/;"	m	struct:_AT91S_SPI
SPI_RPR	include/at91sam7s512.h	/^	AT91_REG	 SPI_RPR; 	\/\/ Receive Pointer Register$/;"	m	struct:_AT91S_SPI
SPI_SR	include/at91sam7s512.h	/^	AT91_REG	 SPI_SR; 	\/\/ Status Register$/;"	m	struct:_AT91S_SPI
SPI_SR	include/at91sam7s512.h	/^#define SPI_SR /;"	d
SPI_TCR	include/at91sam7s512.h	/^	AT91_REG	 SPI_TCR; 	\/\/ Transmit Counter Register$/;"	m	struct:_AT91S_SPI
SPI_TDR	include/at91sam7s512.h	/^	AT91_REG	 SPI_TDR; 	\/\/ Transmit Data Register$/;"	m	struct:_AT91S_SPI
SPI_TDR	include/at91sam7s512.h	/^#define SPI_TDR /;"	d
SPI_TNCR	include/at91sam7s512.h	/^	AT91_REG	 SPI_TNCR; 	\/\/ Transmit Next Counter Register$/;"	m	struct:_AT91S_SPI
SPI_TNPR	include/at91sam7s512.h	/^	AT91_REG	 SPI_TNPR; 	\/\/ Transmit Next Pointer Register$/;"	m	struct:_AT91S_SPI
SPI_TPR	include/at91sam7s512.h	/^	AT91_REG	 SPI_TPR; 	\/\/ Transmit Pointer Register$/;"	m	struct:_AT91S_SPI
SP_EVEN	client/uart.h	/^  SP_EVEN    = 0x02, \/\/ even parity$/;"	e	enum:__anon54
SP_INVALID	client/uart.h	/^  SP_INVALID = 0x00, \/\/ invalid value, error occured$/;"	e	enum:__anon54
SP_NONE	client/uart.h	/^  SP_NONE    = 0x01, \/\/ no parity (default)$/;"	e	enum:__anon54
SP_ODD	client/uart.h	/^  SP_ODD     = 0x03  \/\/ odd parity$/;"	e	enum:__anon54
SParser	liblua/ldo.c	/^struct SParser {  \/* data to `f_parser' *\/$/;"	s	file:
SRC_CRAPTO1	armsrc/Makefile	/^SRC_CRAPTO1 = crapto1.c crypto1.c des.c aes.c $/;"	m
SRC_CRC	armsrc/Makefile	/^SRC_CRC = iso14443crc.c crc.c crc16.c crc32.c $/;"	m
SRC_EMV	armsrc/Makefile	/^SRC_EMV = tlv.c emvdataels.c emvutil.c emvcmd.c $/;"	m
SRC_ISO14443a	armsrc/Makefile	/^SRC_ISO14443a = epa.c iso14443a.c mifareutil.c mifarecmd.c mifaresniff.c$/;"	m
SRC_ISO14443b	armsrc/Makefile	/^SRC_ISO14443b = iso14443.c$/;"	m
SRC_ISO15693	armsrc/Makefile	/^SRC_ISO15693 = iso15693.c iso15693tools.c $/;"	m
SRC_LF	armsrc/Makefile	/^SRC_LF = lfops.c hitag2.c lfsampling.c$/;"	m
SS	liblua/luac.c	/^#define SS(/;"	d	file:
SSC_CLOCK_MODE_SELECT	include/proxmark3.h	/^#define SSC_CLOCK_MODE_SELECT(/;"	d
SSC_CLOCK_MODE_START	include/proxmark3.h	/^#define SSC_CLOCK_MODE_START(/;"	d
SSC_CMR	include/at91sam7s512.h	/^	AT91_REG	 SSC_CMR; 	\/\/ Clock Mode Register$/;"	m	struct:_AT91S_SSC
SSC_CMR	include/at91sam7s512.h	/^#define SSC_CMR /;"	d
SSC_CR	include/at91sam7s512.h	/^	AT91_REG	 SSC_CR; 	\/\/ Control Register$/;"	m	struct:_AT91S_SSC
SSC_CR	include/at91sam7s512.h	/^#define SSC_CR /;"	d
SSC_FRAME_MODE_BITS_IN_WORD	include/proxmark3.h	/^#define SSC_FRAME_MODE_BITS_IN_WORD(/;"	d
SSC_FRAME_MODE_WORDS_PER_TRANSFER	include/proxmark3.h	/^#define SSC_FRAME_MODE_WORDS_PER_TRANSFER(/;"	d
SSC_IDR	include/at91sam7s512.h	/^	AT91_REG	 SSC_IDR; 	\/\/ Interrupt Disable Register$/;"	m	struct:_AT91S_SSC
SSC_IDR	include/at91sam7s512.h	/^#define SSC_IDR /;"	d
SSC_IER	include/at91sam7s512.h	/^	AT91_REG	 SSC_IER; 	\/\/ Interrupt Enable Register$/;"	m	struct:_AT91S_SSC
SSC_IER	include/at91sam7s512.h	/^#define SSC_IER /;"	d
SSC_IMR	include/at91sam7s512.h	/^	AT91_REG	 SSC_IMR; 	\/\/ Interrupt Mask Register$/;"	m	struct:_AT91S_SSC
SSC_IMR	include/at91sam7s512.h	/^#define SSC_IMR /;"	d
SSC_PTCR	include/at91sam7s512.h	/^	AT91_REG	 SSC_PTCR; 	\/\/ PDC Transfer Control Register$/;"	m	struct:_AT91S_SSC
SSC_PTSR	include/at91sam7s512.h	/^	AT91_REG	 SSC_PTSR; 	\/\/ PDC Transfer Status Register$/;"	m	struct:_AT91S_SSC
SSC_RCMR	include/at91sam7s512.h	/^	AT91_REG	 SSC_RCMR; 	\/\/ Receive Clock ModeRegister$/;"	m	struct:_AT91S_SSC
SSC_RCMR	include/at91sam7s512.h	/^#define SSC_RCMR /;"	d
SSC_RCR	include/at91sam7s512.h	/^	AT91_REG	 SSC_RCR; 	\/\/ Receive Counter Register$/;"	m	struct:_AT91S_SSC
SSC_RFMR	include/at91sam7s512.h	/^	AT91_REG	 SSC_RFMR; 	\/\/ Receive Frame Mode Register$/;"	m	struct:_AT91S_SSC
SSC_RFMR	include/at91sam7s512.h	/^#define SSC_RFMR /;"	d
SSC_RHR	include/at91sam7s512.h	/^	AT91_REG	 SSC_RHR; 	\/\/ Receive Holding Register$/;"	m	struct:_AT91S_SSC
SSC_RHR	include/at91sam7s512.h	/^#define SSC_RHR /;"	d
SSC_RNCR	include/at91sam7s512.h	/^	AT91_REG	 SSC_RNCR; 	\/\/ Receive Next Counter Register$/;"	m	struct:_AT91S_SSC
SSC_RNPR	include/at91sam7s512.h	/^	AT91_REG	 SSC_RNPR; 	\/\/ Receive Next Pointer Register$/;"	m	struct:_AT91S_SSC
SSC_RPR	include/at91sam7s512.h	/^	AT91_REG	 SSC_RPR; 	\/\/ Receive Pointer Register$/;"	m	struct:_AT91S_SSC
SSC_RSHR	include/at91sam7s512.h	/^	AT91_REG	 SSC_RSHR; 	\/\/ Receive Sync Holding Register$/;"	m	struct:_AT91S_SSC
SSC_RSHR	include/at91sam7s512.h	/^#define SSC_RSHR /;"	d
SSC_SR	include/at91sam7s512.h	/^	AT91_REG	 SSC_SR; 	\/\/ Status Register$/;"	m	struct:_AT91S_SSC
SSC_SR	include/at91sam7s512.h	/^#define SSC_SR /;"	d
SSC_TCMR	include/at91sam7s512.h	/^	AT91_REG	 SSC_TCMR; 	\/\/ Transmit Clock Mode Register$/;"	m	struct:_AT91S_SSC
SSC_TCMR	include/at91sam7s512.h	/^#define SSC_TCMR /;"	d
SSC_TCR	include/at91sam7s512.h	/^	AT91_REG	 SSC_TCR; 	\/\/ Transmit Counter Register$/;"	m	struct:_AT91S_SSC
SSC_TFMR	include/at91sam7s512.h	/^	AT91_REG	 SSC_TFMR; 	\/\/ Transmit Frame Mode Register$/;"	m	struct:_AT91S_SSC
SSC_TFMR	include/at91sam7s512.h	/^#define SSC_TFMR /;"	d
SSC_THR	include/at91sam7s512.h	/^	AT91_REG	 SSC_THR; 	\/\/ Transmit Holding Register$/;"	m	struct:_AT91S_SSC
SSC_THR	include/at91sam7s512.h	/^#define SSC_THR /;"	d
SSC_TNCR	include/at91sam7s512.h	/^	AT91_REG	 SSC_TNCR; 	\/\/ Transmit Next Counter Register$/;"	m	struct:_AT91S_SSC
SSC_TNPR	include/at91sam7s512.h	/^	AT91_REG	 SSC_TNPR; 	\/\/ Transmit Next Pointer Register$/;"	m	struct:_AT91S_SSC
SSC_TPR	include/at91sam7s512.h	/^	AT91_REG	 SSC_TPR; 	\/\/ Transmit Pointer Register$/;"	m	struct:_AT91S_SSC
SSC_TSHR	include/at91sam7s512.h	/^	AT91_REG	 SSC_TSHR; 	\/\/ Transmit Sync Holding Register$/;"	m	struct:_AT91S_SSC
SSC_TSHR	include/at91sam7s512.h	/^#define SSC_TSHR /;"	d
START_FLASH_MAGIC	client/hid-flasher/usb_cmd.h	/^#define START_FLASH_MAGIC /;"	d
START_FLASH_MAGIC	include/usb_cmd.h	/^#define START_FLASH_MAGIC /;"	d
START_GAP	armsrc/lfops.c	/^#define START_GAP /;"	d	file:
STATE_AWAITING_START_BIT	armsrc/iso14443.c	/^		STATE_AWAITING_START_BIT,$/;"	e	enum:__anon13::__anon14	file:
STATE_CON	armsrc/legicrf.c	/^  STATE_CON,$/;"	e	enum:__anon23	file:
STATE_DISCON	armsrc/legicrf.c	/^  STATE_DISCON,$/;"	e	enum:__anon23	file:
STATE_ERROR_WAIT	armsrc/iso14443.c	/^		STATE_ERROR_WAIT$/;"	e	enum:__anon13::__anon14	file:
STATE_GOT_FALLING_EDGE_OF_SOF	armsrc/iso14443.c	/^		STATE_GOT_FALLING_EDGE_OF_SOF,$/;"	e	enum:__anon13::__anon14	file:
STATE_IV	armsrc/legicrf.c	/^  STATE_IV,$/;"	e	enum:__anon23	file:
STATE_MILLER_X	armsrc/iso14443a.h	/^		STATE_MILLER_X,$/;"	e	enum:__anon20::__anon21
STATE_MILLER_Y	armsrc/iso14443a.h	/^		STATE_MILLER_Y,$/;"	e	enum:__anon20::__anon21
STATE_MILLER_Z	armsrc/iso14443a.h	/^		STATE_MILLER_Z,$/;"	e	enum:__anon20::__anon21
STATE_RECEIVING	armsrc/iclass.c	/^	STATE_RECEIVING$/;"	e	enum:__anon8::__anon9	file:
STATE_RECEIVING_DATA	armsrc/iso14443.c	/^		STATE_RECEIVING_DATA,$/;"	e	enum:__anon13::__anon14	file:
STATE_START_OF_COMMUNICATION	armsrc/iclass.c	/^        STATE_START_OF_COMMUNICATION,$/;"	e	enum:__anon8::__anon9	file:
STATE_START_OF_COMMUNICATION	armsrc/iso14443a.h	/^		STATE_START_OF_COMMUNICATION,$/;"	e	enum:__anon20::__anon21
STATE_UNSYNCD	armsrc/iclass.c	/^        STATE_UNSYNCD,$/;"	e	enum:__anon8::__anon9	file:
STATE_UNSYNCD	armsrc/iso14443.c	/^		STATE_UNSYNCD,$/;"	e	enum:__anon13::__anon14	file:
STATE_UNSYNCD	armsrc/iso14443a.h	/^		STATE_UNSYNCD,$/;"	e	enum:__anon20::__anon21
STD_CLEAR_FEATURE_ENDPOINT	common/usb_cdc.c	/^#define STD_CLEAR_FEATURE_ENDPOINT /;"	d	file:
STD_CLEAR_FEATURE_INTERFACE	common/usb_cdc.c	/^#define STD_CLEAR_FEATURE_INTERFACE /;"	d	file:
STD_CLEAR_FEATURE_ZERO	common/usb_cdc.c	/^#define STD_CLEAR_FEATURE_ZERO /;"	d	file:
STD_GET_CONFIGURATION	common/usb_cdc.c	/^#define STD_GET_CONFIGURATION /;"	d	file:
STD_GET_DESCRIPTOR	common/usb_cdc.c	/^#define STD_GET_DESCRIPTOR /;"	d	file:
STD_GET_INTERFACE	common/usb_cdc.c	/^#define STD_GET_INTERFACE /;"	d	file:
STD_GET_STATUS_ENDPOINT	common/usb_cdc.c	/^#define STD_GET_STATUS_ENDPOINT /;"	d	file:
STD_GET_STATUS_INTERFACE	common/usb_cdc.c	/^#define STD_GET_STATUS_INTERFACE /;"	d	file:
STD_GET_STATUS_ZERO	common/usb_cdc.c	/^#define STD_GET_STATUS_ZERO /;"	d	file:
STD_SET_ADDRESS	common/usb_cdc.c	/^#define STD_SET_ADDRESS /;"	d	file:
STD_SET_CONFIGURATION	common/usb_cdc.c	/^#define STD_SET_CONFIGURATION /;"	d	file:
STD_SET_DESCRIPTOR	common/usb_cdc.c	/^#define STD_SET_DESCRIPTOR /;"	d	file:
STD_SET_FEATURE_ENDPOINT	common/usb_cdc.c	/^#define STD_SET_FEATURE_ENDPOINT /;"	d	file:
STD_SET_FEATURE_INTERFACE	common/usb_cdc.c	/^#define STD_SET_FEATURE_INTERFACE /;"	d	file:
STD_SET_FEATURE_ZERO	common/usb_cdc.c	/^#define STD_SET_FEATURE_ZERO /;"	d	file:
STD_SET_INTERFACE	common/usb_cdc.c	/^#define STD_SET_INTERFACE /;"	d	file:
STD_SYNCH_FRAME	common/usb_cdc.c	/^#define STD_SYNCH_FRAME /;"	d	file:
STEPMULADJ	liblua/lgc.c	/^#define STEPMULADJ	/;"	d	file:
SUB_BOTH	armsrc/iclass.c	/^		SUB_BOTH$/;"	e	enum:__anon10::__anon12	file:
SUB_FIRST_HALF	armsrc/iclass.c	/^		SUB_FIRST_HALF,$/;"	e	enum:__anon10::__anon12	file:
SUB_NONE	armsrc/iclass.c	/^		SUB_NONE,$/;"	e	enum:__anon10::__anon12	file:
SUB_SECOND_HALF	armsrc/iclass.c	/^		SUB_SECOND_HALF,$/;"	e	enum:__anon10::__anon12	file:
SUPUNSIGNED	liblua/llimits.h	/^#define SUPUNSIGNED	/;"	d
SW12_COND_NOT_SAT	armsrc/emvdataels.c	/^const uint8_t SW12_COND_NOT_SAT[] = {0x69,0x83};$/;"	v
SW12_NOT_FOUND	armsrc/emvdataels.c	/^const uint8_t SW12_NOT_FOUND[] = {0x6a,0x82};$/;"	v
SW12_NOT_SUPPORTED	armsrc/emvdataels.c	/^const uint8_t SW12_NOT_SUPPORTED[] = {0x6a,0x81};$/;"	v
SW12_OK	armsrc/emvdataels.c	/^const uint8_t SW12_OK[] = {0x90,0x00};$/;"	v
SW1_RESPONSE_BYTES	armsrc/emvdataels.c	/^const uint8_t SW1_RESPONSE_BYTES[] = {0x61};$/;"	v
SW1_WRONG_LENGTH	armsrc/emvdataels.c	/^const uint8_t SW1_WRONG_LENGTH[] = {0x6c};$/;"	v
SWAP	client/loclass/des.c	/^#define SWAP(/;"	d	file:
SWAPENDIAN	armsrc/crypto1.c	/^#define SWAPENDIAN(/;"	d	file:
SWAPENDIAN	client/nonce2key/crapto1.h	/^#define SWAPENDIAN(/;"	d
SWAPENDIAN	client/nonce2key/crypto1.c	/^#define SWAPENDIAN(/;"	d	file:
SWAPENDIAN	tools/mfkey/crypto1.c	/^#define SWAPENDIAN(/;"	d	file:
SWAPENDIAN	tools/nonce2key/crypto1.c	/^#define SWAPENDIAN(/;"	d	file:
SYSCFLAGS	liblua/Makefile	/^SYSCFLAGS=$/;"	m
SYSLDFLAGS	liblua/Makefile	/^SYSLDFLAGS=$/;"	m
SYSLIBS	liblua/Makefile	/^SYSLIBS=$/;"	m
SampleLF	armsrc/lfsampling.c	/^uint32_t SampleLF()$/;"	f
SamyRun	armsrc/appmain.c	/^void SamyRun()$/;"	f
SemInfo	liblua/llex.h	/^} SemInfo;  \/* semantics information *\/$/;"	t	typeref:union:__anon67
SendCommand	client/flasher.c	/^void SendCommand(UsbCommand* txcmd) {$/;"	f
SendCommand	client/hid-flasher/proxusb.c	/^void SendCommand(UsbCommand *c)$/;"	f
SendCommand	client/proxmark3.c	/^void SendCommand(UsbCommand *c) {$/;"	f
SendDataTag	armsrc/iso15693.c	/^int SendDataTag(uint8_t *send, int sendlen, int init, int speed, uint8_t **recv) {$/;"	f
SendForward	armsrc/lfops.c	/^void SendForward(uint8_t fwd_bit_count) {$/;"	f
SendIClassAnswer	armsrc/iclass.c	/^static int SendIClassAnswer(uint8_t *resp, int respLen, int delay)$/;"	f	file:
SendRawCommand14443B	armsrc/iso14443.c	/^void SendRawCommand14443B(uint32_t datalen, uint32_t recv,uint8_t powerfield, uint8_t data[])$/;"	f
SendVersion	armsrc/appmain.c	/^void SendVersion(void)$/;"	f
SetAdcMuxFor	armsrc/fpgaloader.c	/^void SetAdcMuxFor(uint32_t whichGpio)$/;"	f
SetCheckSum	client/scripts/tnp3sim.lua	/^local function SetCheckSum(blocks, chksumtype)$/;"	f
SetDebugIso15693	armsrc/iso15693.c	/^void SetDebugIso15693(uint32_t debug) {$/;"	f
SetLogFilename	client/ui.c	/^void SetLogFilename(char *fn)$/;"	f
SetupSpi	armsrc/fpgaloader.c	/^void SetupSpi(int mode)$/;"	f
ShowGraphWindow	client/guidummy.c	/^void ShowGraphWindow(void)$/;"	f
ShowGraphWindow	client/proxgui.cpp	/^extern "C" void ShowGraphWindow(void)$/;"	f
ShowGraphWindow	client/proxguiqt.cpp	/^void ProxGuiQT::ShowGraphWindow(void)$/;"	f	class:ProxGuiQT
ShowGraphWindowSignal	client/proxguiqt.moc.cpp	/^void ProxGuiQT::ShowGraphWindowSignal()$/;"	f	class:ProxGuiQT
SimTagIso15693	armsrc/iso15693.c	/^void SimTagIso15693(uint32_t parameter, uint8_t *uid)$/;"	f
SimulateHitagTag	armsrc/hitag2.c	/^void SimulateHitagTag(bool tag_mem_supplied, byte_t* data) {$/;"	f
SimulateIClass	armsrc/iclass.c	/^void SimulateIClass(uint32_t arg0, uint32_t arg1, uint32_t arg2, uint8_t *datain)$/;"	f
SimulateIso14443Tag	armsrc/iso14443.c	/^void SimulateIso14443Tag(void)$/;"	f
SimulateIso14443aTag	armsrc/iso14443a.c	/^void SimulateIso14443aTag(int tagType, int uid_1st, int uid_2nd, byte_t* data)$/;"	f
SimulateTagHfListen	armsrc/appmain.c	/^void SimulateTagHfListen(void)$/;"	f
SimulateTagLowFrequency	armsrc/lfops.c	/^void SimulateTagLowFrequency(int period, int gap, int ledcontrol)$/;"	f
SimulateTagLowFrequencyBidir	armsrc/lfops.c	/^void SimulateTagLowFrequencyBidir(int divisor, int t0)$/;"	f
SniffMifare	armsrc/iso14443a.c	/^void RAMFUNC SniffMifare(uint8_t param) {$/;"	f
SnoopHitag	armsrc/hitag2.c	/^void SnoopHitag(uint32_t type) {$/;"	f
SnoopIClass	armsrc/iclass.c	/^void RAMFUNC SnoopIClass(void)$/;"	f
SnoopIso14443	armsrc/iso14443.c	/^void RAMFUNC SnoopIso14443(void)$/;"	f
SnoopIso14443a	armsrc/iso14443a.c	/^void RAMFUNC SnoopIso14443a(uint8_t param) {$/;"	f
SnoopLF	armsrc/lfsampling.c	/^uint32_t SnoopLF()$/;"	f
SpinDelay	armsrc/util.c	/^void SpinDelay(int ms)$/;"	f
SpinDelayUs	armsrc/util.c	/^void SpinDelayUs(int us)$/;"	f
Split 	client/lualibs/utils.lua	/^	Split = function( inSplitPattern, outResults )$/;"	f
StartCountSspClk	armsrc/util.c	/^void StartCountSspClk()$/;"	f
StartCountUS	armsrc/util.c	/^void StartCountUS()$/;"	f
StartTickCount	armsrc/util.c	/^void StartTickCount()$/;"	f
State	client/loclass/cipher.c	/^} State;$/;"	t	typeref:struct:__anon40	file:
StateList_t	client/mifarehost.c	/^	} StateList_t;$/;"	t	typeref:struct:__anon47	file:
StkId	liblua/lobject.h	/^typedef TValue *StkId;  \/* index to stack elements *\/$/;"	t
SwapBits	armsrc/util.c	/^uint32_t SwapBits(uint32_t value, int nrbits) {$/;"	f
SwapEndianness 	client/lualibs/utils.lua	/^	SwapEndianness = function(s, len)$/;"	f
SwapEndiannessStr 	client/lualibs/utils.lua	/^	SwapEndiannessStr = function(s, len)$/;"	f
T	client/loclass/cipher.c	/^bool T(State state)$/;"	f
T0	armsrc/emvcard.h	/^    uint8_t T0;$/;"	m	struct:__anon2
T0	armsrc/hitag2.c	/^#define T0 /;"	d	file:
T1	armsrc/crapto1.c	/^static const uint32_t T1[] = {$/;"	v	file:
T1	client/nonce2key/crapto1.c	/^static const uint32_t T1[] = {$/;"	v	file:
T1	tools/mfkey/crapto1.c	/^static const uint32_t T1[] = {$/;"	v	file:
T1	tools/nonce2key/crapto1.c	/^static const uint32_t T1[] = {$/;"	v	file:
T2	armsrc/crapto1.c	/^static const uint32_t T2[] = {  0x3C88B810, 0x5E445C08, 0x2982A580, 0x14C152C0,$/;"	v	file:
T2	client/nonce2key/crapto1.c	/^static const uint32_t T2[] = {  0x3C88B810, 0x5E445C08, 0x2982A580, 0x14C152C0,$/;"	v	file:
T2	tools/mfkey/crapto1.c	/^static const uint32_t T2[] = {  0x3C88B810, 0x5E445C08, 0x2982A580, 0x14C152C0,$/;"	v	file:
T2	tools/nonce2key/crapto1.c	/^static const uint32_t T2[] = {  0x3C88B810, 0x5E445C08, 0x2982A580, 0x14C152C0,$/;"	v	file:
T5555_BITRATE_SHIFT	armsrc/lfops.c	/^#define T5555_BITRATE_SHIFT	/;"	d	file:
T5555_FAST_WRITE	armsrc/lfops.c	/^#define T5555_FAST_WRITE	/;"	d	file:
T5555_INVERT_OUTPUT	armsrc/lfops.c	/^#define T5555_INVERT_OUTPUT	/;"	d	file:
T5555_MAXBLOCK_SHIFT	armsrc/lfops.c	/^#define T5555_MAXBLOCK_SHIFT	/;"	d	file:
T5555_MODULATION_BIPHASE	armsrc/lfops.c	/^#define T5555_MODULATION_BIPHASE	/;"	d	file:
T5555_MODULATION_DIRECT	armsrc/lfops.c	/^#define T5555_MODULATION_DIRECT	/;"	d	file:
T5555_MODULATION_FSK1	armsrc/lfops.c	/^#define T5555_MODULATION_FSK1	/;"	d	file:
T5555_MODULATION_FSK2	armsrc/lfops.c	/^#define T5555_MODULATION_FSK2	/;"	d	file:
T5555_MODULATION_MANCHESTER	armsrc/lfops.c	/^#define T5555_MODULATION_MANCHESTER	/;"	d	file:
T5555_MODULATION_PSK1	armsrc/lfops.c	/^#define T5555_MODULATION_PSK1	/;"	d	file:
T5555_MODULATION_PSK2	armsrc/lfops.c	/^#define T5555_MODULATION_PSK2	/;"	d	file:
T5555_MODULATION_PSK3	armsrc/lfops.c	/^#define T5555_MODULATION_PSK3	/;"	d	file:
T5555_PAGE_SELECT	armsrc/lfops.c	/^#define T5555_PAGE_SELECT	/;"	d	file:
T5555_PSK_RF_2	armsrc/lfops.c	/^#define T5555_PSK_RF_2	/;"	d	file:
T5555_PSK_RF_4	armsrc/lfops.c	/^#define T5555_PSK_RF_4	/;"	d	file:
T5555_PSK_RF_8	armsrc/lfops.c	/^#define T5555_PSK_RF_8	/;"	d	file:
T5555_ST_TERMINATOR	armsrc/lfops.c	/^#define T5555_ST_TERMINATOR	/;"	d	file:
T5555_USE_AOR	armsrc/lfops.c	/^#define T5555_USE_AOR	/;"	d	file:
T5555_USE_PWD	armsrc/lfops.c	/^#define T5555_USE_PWD	/;"	d	file:
T55x7_AOR	armsrc/lfops.c	/^#define T55x7_AOR	/;"	d	file:
T55x7_BITRATE_RF_100	armsrc/lfops.c	/^#define T55x7_BITRATE_RF_100	/;"	d	file:
T55x7_BITRATE_RF_128	armsrc/lfops.c	/^#define T55x7_BITRATE_RF_128	/;"	d	file:
T55x7_BITRATE_RF_16	armsrc/lfops.c	/^#define T55x7_BITRATE_RF_16	/;"	d	file:
T55x7_BITRATE_RF_32	armsrc/lfops.c	/^#define T55x7_BITRATE_RF_32	/;"	d	file:
T55x7_BITRATE_RF_40	armsrc/lfops.c	/^#define T55x7_BITRATE_RF_40	/;"	d	file:
T55x7_BITRATE_RF_50	armsrc/lfops.c	/^#define T55x7_BITRATE_RF_50	/;"	d	file:
T55x7_BITRATE_RF_64	armsrc/lfops.c	/^#define T55x7_BITRATE_RF_64	/;"	d	file:
T55x7_BITRATE_RF_8	armsrc/lfops.c	/^#define T55x7_BITRATE_RF_8	/;"	d	file:
T55x7_MAXBLOCK_SHIFT	armsrc/lfops.c	/^#define T55x7_MAXBLOCK_SHIFT	/;"	d	file:
T55x7_MODULATION_BIPHASE	armsrc/lfops.c	/^#define T55x7_MODULATION_BIPHASE	/;"	d	file:
T55x7_MODULATION_DIRECT	armsrc/lfops.c	/^#define T55x7_MODULATION_DIRECT	/;"	d	file:
T55x7_MODULATION_FSK1	armsrc/lfops.c	/^#define T55x7_MODULATION_FSK1	/;"	d	file:
T55x7_MODULATION_FSK1a	armsrc/lfops.c	/^#define T55x7_MODULATION_FSK1a	/;"	d	file:
T55x7_MODULATION_FSK2	armsrc/lfops.c	/^#define T55x7_MODULATION_FSK2	/;"	d	file:
T55x7_MODULATION_FSK2a	armsrc/lfops.c	/^#define T55x7_MODULATION_FSK2a	/;"	d	file:
T55x7_MODULATION_MANCHESTER	armsrc/lfops.c	/^#define T55x7_MODULATION_MANCHESTER	/;"	d	file:
T55x7_MODULATION_PSK1	armsrc/lfops.c	/^#define T55x7_MODULATION_PSK1	/;"	d	file:
T55x7_MODULATION_PSK2	armsrc/lfops.c	/^#define T55x7_MODULATION_PSK2	/;"	d	file:
T55x7_MODULATION_PSK3	armsrc/lfops.c	/^#define T55x7_MODULATION_PSK3	/;"	d	file:
T55x7_POR_DELAY	armsrc/lfops.c	/^#define T55x7_POR_DELAY	/;"	d	file:
T55x7_PSKCF_RF_2	armsrc/lfops.c	/^#define T55x7_PSKCF_RF_2	/;"	d	file:
T55x7_PSKCF_RF_4	armsrc/lfops.c	/^#define T55x7_PSKCF_RF_4	/;"	d	file:
T55x7_PSKCF_RF_8	armsrc/lfops.c	/^#define T55x7_PSKCF_RF_8	/;"	d	file:
T55x7_PWD	armsrc/lfops.c	/^#define T55x7_PWD	/;"	d	file:
T55x7_ST_TERMINATOR	armsrc/lfops.c	/^#define T55x7_ST_TERMINATOR	/;"	d	file:
T55xxReadBlock	armsrc/lfops.c	/^void T55xxReadBlock(uint32_t Block, uint32_t Pwd, uint8_t PwdMode)$/;"	f
T55xxReadTrace	armsrc/lfops.c	/^void T55xxReadTrace(void){$/;"	f
T55xxWriteBit	armsrc/lfops.c	/^void T55xxWriteBit(int bit)$/;"	f
T55xxWriteBlock	armsrc/lfops.c	/^void T55xxWriteBlock(uint32_t Data, uint32_t Block, uint32_t Pwd, uint8_t PwdMode)$/;"	f
T91C_TC_ACPA_NONE	include/at91sam7s512.h	/^#define T91C_TC_ACPA_NONE /;"	d
T91C_TC_LDRA_NONE	include/at91sam7s512.h	/^#define T91C_TC_LDRA_NONE /;"	d
TA1	armsrc/emvcard.h	/^    uint8_t TA1;$/;"	m	struct:__anon2
TAGSIM_LISTEN	fpga/hi_iso14443a.v	/^`define TAGSIM_LISTEN	3'b001$/;"	c
TAGSIM_MOD	fpga/hi_iso14443a.v	/^`define TAGSIM_MOD		3'b010$/;"	c
TAG_LENGTH	armsrc/tlv.h	/^#define TAG_LENGTH /;"	d
TAG_RESPONSE_COUNT	armsrc/iso14443a.c	/^	#define TAG_RESPONSE_COUNT /;"	d	file:
TAG_STATE_ACTIVATED	armsrc/hitag2.c	/^		TAG_STATE_ACTIVATED  = 0x03,       \/\/ Activation complete, awaiting read\/write commands$/;"	e	enum:hitag2_tag::__anon7	file:
TAG_STATE_ACTIVATING	armsrc/hitag2.c	/^		TAG_STATE_ACTIVATING = 0x02 ,      \/\/ In activation phase (password mode), sent UID, awaiting reader password$/;"	e	enum:hitag2_tag::__anon7	file:
TAG_STATE_RESET	armsrc/hitag2.c	/^		TAG_STATE_RESET      = 0x01,       \/\/ Just powered up, awaiting GetSnr$/;"	e	enum:hitag2_tag::__anon7	file:
TAG_STATE_WRITING	armsrc/hitag2.c	/^		TAG_STATE_WRITING    = 0x04,       \/\/ In write command, awaiting sector contents to be written$/;"	e	enum:hitag2_tag::__anon7	file:
TAG_TIME_BIT	armsrc/legicrf.c	/^#define TAG_TIME_BIT /;"	d	file:
TAG_TIME_WAIT	armsrc/legicrf.c	/^#define TAG_TIME_WAIT /;"	d	file:
TB1	armsrc/emvcard.h	/^    uint8_t TB1;$/;"	m	struct:__anon2
TBS	fpga/tests/Makefile	/^TBS = $(TB_SOURCES:.v=.vvp)$/;"	m
TB_DATA	fpga/tests/Makefile	/^TB_DATA = \\$/;"	m
TB_SOURCES	fpga/tests/Makefile	/^TB_SOURCES = \\$/;"	m
TC1	armsrc/emvcard.h	/^    uint8_t TC1;$/;"	m	struct:__anon2
TCB_BCR	include/at91sam7s512.h	/^	AT91_REG	 TCB_BCR; 	\/\/ TC Block Control Register$/;"	m	struct:_AT91S_TCB
TCB_BCR	include/at91sam7s512.h	/^#define TCB_BCR /;"	d
TCB_BMR	include/at91sam7s512.h	/^	AT91_REG	 TCB_BMR; 	\/\/ TC Block Mode Register$/;"	m	struct:_AT91S_TCB
TCB_BMR	include/at91sam7s512.h	/^#define TCB_BMR /;"	d
TCB_TC0	include/at91sam7s512.h	/^	AT91S_TC	 TCB_TC0; 	\/\/ TC Channel 0$/;"	m	struct:_AT91S_TCB
TCB_TC1	include/at91sam7s512.h	/^	AT91S_TC	 TCB_TC1; 	\/\/ TC Channel 1$/;"	m	struct:_AT91S_TCB
TCB_TC2	include/at91sam7s512.h	/^	AT91S_TC	 TCB_TC2; 	\/\/ TC Channel 2$/;"	m	struct:_AT91S_TCB
TC_CCR	include/at91sam7s512.h	/^	AT91_REG	 TC_CCR; 	\/\/ Channel Control Register$/;"	m	struct:_AT91S_TC
TC_CCR	include/at91sam7s512.h	/^#define TC_CCR /;"	d
TC_CMR	include/at91sam7s512.h	/^	AT91_REG	 TC_CMR; 	\/\/ Channel Mode Register (Capture Mode \/ Waveform Mode)$/;"	m	struct:_AT91S_TC
TC_CMR	include/at91sam7s512.h	/^#define TC_CMR /;"	d
TC_CV	include/at91sam7s512.h	/^	AT91_REG	 TC_CV; 	\/\/ Counter Value$/;"	m	struct:_AT91S_TC
TC_CV	include/at91sam7s512.h	/^#define TC_CV /;"	d
TC_IDR	include/at91sam7s512.h	/^	AT91_REG	 TC_IDR; 	\/\/ Interrupt Disable Register$/;"	m	struct:_AT91S_TC
TC_IDR	include/at91sam7s512.h	/^#define TC_IDR /;"	d
TC_IER	include/at91sam7s512.h	/^	AT91_REG	 TC_IER; 	\/\/ Interrupt Enable Register$/;"	m	struct:_AT91S_TC
TC_IER	include/at91sam7s512.h	/^#define TC_IER /;"	d
TC_IMR	include/at91sam7s512.h	/^	AT91_REG	 TC_IMR; 	\/\/ Interrupt Mask Register$/;"	m	struct:_AT91S_TC
TC_IMR	include/at91sam7s512.h	/^#define TC_IMR /;"	d
TC_RA	include/at91sam7s512.h	/^	AT91_REG	 TC_RA; 	\/\/ Register A$/;"	m	struct:_AT91S_TC
TC_RA	include/at91sam7s512.h	/^#define TC_RA /;"	d
TC_RB	include/at91sam7s512.h	/^	AT91_REG	 TC_RB; 	\/\/ Register B$/;"	m	struct:_AT91S_TC
TC_RB	include/at91sam7s512.h	/^#define TC_RB /;"	d
TC_RC	include/at91sam7s512.h	/^	AT91_REG	 TC_RC; 	\/\/ Register C$/;"	m	struct:_AT91S_TC
TC_RC	include/at91sam7s512.h	/^#define TC_RC /;"	d
TC_SR	include/at91sam7s512.h	/^	AT91_REG	 TC_SR; 	\/\/ Status Register$/;"	m	struct:_AT91S_TC
TC_SR	include/at91sam7s512.h	/^#define TC_SR /;"	d
TEST_OUTDIR	fpga/tests/Makefile	/^TEST_OUTDIR = tb_tmp$/;"	m
THUMBSRC	armsrc/Makefile	/^THUMBSRC = start.c \\$/;"	m
THUMBSRC	bootrom/Makefile	/^THUMBSRC = cmd.c usb_cdc.c bootrom.c$/;"	m
TIBUFLEN	armsrc/lfops.c	/^ #define TIBUFLEN /;"	d	file:
TK_AND	liblua/llex.h	/^  TK_AND = FIRST_RESERVED, TK_BREAK,$/;"	e	enum:RESERVED
TK_BREAK	liblua/llex.h	/^  TK_AND = FIRST_RESERVED, TK_BREAK,$/;"	e	enum:RESERVED
TK_CONCAT	liblua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_DBCOLON	liblua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_DO	liblua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_DOTS	liblua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_ELSE	liblua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_ELSEIF	liblua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_END	liblua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_EOS	liblua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_EQ	liblua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_FALSE	liblua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_FOR	liblua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_FUNCTION	liblua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_GE	liblua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_GOTO	liblua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_IF	liblua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_IN	liblua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_LE	liblua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_LOCAL	liblua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NAME	liblua/llex.h	/^  TK_NUMBER, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_NE	liblua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_NIL	liblua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NOT	liblua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NUMBER	liblua/llex.h	/^  TK_NUMBER, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_OR	liblua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_REPEAT	liblua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_RETURN	liblua/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_STRING	liblua/llex.h	/^  TK_NUMBER, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_THEN	liblua/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_TRUE	liblua/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_UNTIL	liblua/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_WHILE	liblua/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TKey	liblua/lobject.h	/^typedef union TKey {$/;"	u
TKey	liblua/lobject.h	/^} TKey;$/;"	t	typeref:union:TKey
TL	armsrc/emvcard.h	/^    uint8_t TL;$/;"	m	struct:__anon2
TLV_DATA_MASK	armsrc/tlv.h	/^#define TLV_DATA_MASK /;"	d
TLV_LENGTH_MASK	armsrc/tlv.h	/^#define TLV_LENGTH_MASK /;"	d
TLV_TAG_MASK	armsrc/tlv.h	/^#define TLV_TAG_MASK /;"	d
TLV_TAG_NUMBER_MASK	armsrc/tlv.h	/^#define TLV_TAG_NUMBER_MASK /;"	d
TMS	liblua/ltm.h	/^} TMS;$/;"	t	typeref:enum:__anon83
TM_ADD	liblua/ltm.h	/^  TM_ADD,$/;"	e	enum:__anon83
TM_CALL	liblua/ltm.h	/^  TM_CALL,$/;"	e	enum:__anon83
TM_CONCAT	liblua/ltm.h	/^  TM_CONCAT,$/;"	e	enum:__anon83
TM_DIV	liblua/ltm.h	/^  TM_DIV,$/;"	e	enum:__anon83
TM_EQ	liblua/ltm.h	/^  TM_EQ,  \/* last tag method with `fast' access *\/$/;"	e	enum:__anon83
TM_GC	liblua/ltm.h	/^  TM_GC,$/;"	e	enum:__anon83
TM_INDEX	liblua/ltm.h	/^  TM_INDEX,$/;"	e	enum:__anon83
TM_LE	liblua/ltm.h	/^  TM_LE,$/;"	e	enum:__anon83
TM_LEN	liblua/ltm.h	/^  TM_LEN,$/;"	e	enum:__anon83
TM_LT	liblua/ltm.h	/^  TM_LT,$/;"	e	enum:__anon83
TM_MOD	liblua/ltm.h	/^  TM_MOD,$/;"	e	enum:__anon83
TM_MODE	liblua/ltm.h	/^  TM_MODE,$/;"	e	enum:__anon83
TM_MUL	liblua/ltm.h	/^  TM_MUL,$/;"	e	enum:__anon83
TM_N	liblua/ltm.h	/^  TM_N		\/* number of elements in the enum *\/$/;"	e	enum:__anon83
TM_NEWINDEX	liblua/ltm.h	/^  TM_NEWINDEX,$/;"	e	enum:__anon83
TM_POW	liblua/ltm.h	/^  TM_POW,$/;"	e	enum:__anon83
TM_SUB	liblua/ltm.h	/^  TM_SUB,$/;"	e	enum:__anon83
TM_UNM	liblua/ltm.h	/^  TM_UNM,$/;"	e	enum:__anon83
TOBIT	client/pm3_bitlib.c	/^#define TOBIT(/;"	d	file:
TOSEND_BUFFER_SIZE	armsrc/appmain.c	/^#define TOSEND_BUFFER_SIZE /;"	d	file:
TRACE_AUTH1	client/mifarehost.h	/^#define TRACE_AUTH1	/;"	d
TRACE_AUTH2	client/mifarehost.h	/^#define TRACE_AUTH2	/;"	d
TRACE_AUTH_OK	client/mifarehost.h	/^#define TRACE_AUTH_OK	/;"	d
TRACE_ERROR	client/mifarehost.h	/^#define TRACE_ERROR	/;"	d
TRACE_IDLE	client/mifarehost.h	/^#define TRACE_IDLE	/;"	d
TRACE_READ_DATA	client/mifarehost.h	/^#define TRACE_READ_DATA /;"	d
TRACE_WRITE_DATA	client/mifarehost.h	/^#define TRACE_WRITE_DATA	/;"	d
TRACE_WRITE_OK	client/mifarehost.h	/^#define TRACE_WRITE_OK	/;"	d
TRUE	client/util.h	/^#define TRUE /;"	d
TRUE	include/proxmark3.h	/^#define TRUE /;"	d
TString	liblua/lobject.h	/^typedef union TString {$/;"	u
TString	liblua/lobject.h	/^} TString;$/;"	t	typeref:union:TString
TValue	liblua/lobject.h	/^typedef struct lua_TValue TValue;$/;"	t	typeref:struct:lua_TValue
TValuefields	liblua/lobject.h	/^    TValuefields;$/;"	m	struct:TKey::__anon72
TValuefields	liblua/lobject.h	/^  TValuefields;$/;"	m	struct:lua_TValue
TValuefields	liblua/lobject.h	/^#define TValuefields	/;"	d
TValuefields	liblua/lobject.h	/^#define TValuefields /;"	d
TValuefields	liblua/lobject.h	/^#undef TValuefields$/;"	d
TWI_CR	include/at91sam7s512.h	/^	AT91_REG	 TWI_CR; 	\/\/ Control Register$/;"	m	struct:_AT91S_TWI
TWI_CR	include/at91sam7s512.h	/^#define TWI_CR /;"	d
TWI_CWGR	include/at91sam7s512.h	/^	AT91_REG	 TWI_CWGR; 	\/\/ Clock Waveform Generator Register$/;"	m	struct:_AT91S_TWI
TWI_CWGR	include/at91sam7s512.h	/^#define TWI_CWGR /;"	d
TWI_IADR	include/at91sam7s512.h	/^	AT91_REG	 TWI_IADR; 	\/\/ Internal Address Register$/;"	m	struct:_AT91S_TWI
TWI_IADR	include/at91sam7s512.h	/^#define TWI_IADR /;"	d
TWI_IDR	include/at91sam7s512.h	/^	AT91_REG	 TWI_IDR; 	\/\/ Interrupt Disable Register$/;"	m	struct:_AT91S_TWI
TWI_IDR	include/at91sam7s512.h	/^#define TWI_IDR /;"	d
TWI_IER	include/at91sam7s512.h	/^	AT91_REG	 TWI_IER; 	\/\/ Interrupt Enable Register$/;"	m	struct:_AT91S_TWI
TWI_IER	include/at91sam7s512.h	/^#define TWI_IER /;"	d
TWI_IMR	include/at91sam7s512.h	/^	AT91_REG	 TWI_IMR; 	\/\/ Interrupt Mask Register$/;"	m	struct:_AT91S_TWI
TWI_IMR	include/at91sam7s512.h	/^#define TWI_IMR /;"	d
TWI_MMR	include/at91sam7s512.h	/^	AT91_REG	 TWI_MMR; 	\/\/ Master Mode Register$/;"	m	struct:_AT91S_TWI
TWI_MMR	include/at91sam7s512.h	/^#define TWI_MMR /;"	d
TWI_PTCR	include/at91sam7s512.h	/^	AT91_REG	 TWI_PTCR; 	\/\/ PDC Transfer Control Register$/;"	m	struct:_AT91S_TWI
TWI_PTSR	include/at91sam7s512.h	/^	AT91_REG	 TWI_PTSR; 	\/\/ PDC Transfer Status Register$/;"	m	struct:_AT91S_TWI
TWI_RCR	include/at91sam7s512.h	/^	AT91_REG	 TWI_RCR; 	\/\/ Receive Counter Register$/;"	m	struct:_AT91S_TWI
TWI_RHR	include/at91sam7s512.h	/^	AT91_REG	 TWI_RHR; 	\/\/ Receive Holding Register$/;"	m	struct:_AT91S_TWI
TWI_RHR	include/at91sam7s512.h	/^#define TWI_RHR /;"	d
TWI_RNCR	include/at91sam7s512.h	/^	AT91_REG	 TWI_RNCR; 	\/\/ Receive Next Counter Register$/;"	m	struct:_AT91S_TWI
TWI_RNPR	include/at91sam7s512.h	/^	AT91_REG	 TWI_RNPR; 	\/\/ Receive Next Pointer Register$/;"	m	struct:_AT91S_TWI
TWI_RPR	include/at91sam7s512.h	/^	AT91_REG	 TWI_RPR; 	\/\/ Receive Pointer Register$/;"	m	struct:_AT91S_TWI
TWI_SR	include/at91sam7s512.h	/^	AT91_REG	 TWI_SR; 	\/\/ Status Register$/;"	m	struct:_AT91S_TWI
TWI_SR	include/at91sam7s512.h	/^#define TWI_SR /;"	d
TWI_TCR	include/at91sam7s512.h	/^	AT91_REG	 TWI_TCR; 	\/\/ Transmit Counter Register$/;"	m	struct:_AT91S_TWI
TWI_THR	include/at91sam7s512.h	/^	AT91_REG	 TWI_THR; 	\/\/ Transmit Holding Register$/;"	m	struct:_AT91S_TWI
TWI_THR	include/at91sam7s512.h	/^#define TWI_THR /;"	d
TWI_TNCR	include/at91sam7s512.h	/^	AT91_REG	 TWI_TNCR; 	\/\/ Transmit Next Counter Register$/;"	m	struct:_AT91S_TWI
TWI_TNPR	include/at91sam7s512.h	/^	AT91_REG	 TWI_TNPR; 	\/\/ Transmit Next Pointer Register$/;"	m	struct:_AT91S_TWI
TWI_TPR	include/at91sam7s512.h	/^	AT91_REG	 TWI_TPR; 	\/\/ Transmit Pointer Register$/;"	m	struct:_AT91S_TWI
Table	liblua/lobject.h	/^typedef struct Table {$/;"	s
Table	liblua/lobject.h	/^} Table;$/;"	t	typeref:struct:Table
TagErrorStr	client/cmdhf15.c	/^static char* TagErrorStr(uint8_t error) {$/;"	f	file:
Td0	armsrc/aes.c	/^static const unsigned int Td0[256] = {$/;"	v	file:
Td1	armsrc/aes.c	/^static const unsigned int Td1[256] = {$/;"	v	file:
Td2	armsrc/aes.c	/^static const unsigned int Td2[256] = {$/;"	v	file:
Td3	armsrc/aes.c	/^static const unsigned int Td3[256] = {$/;"	v	file:
Td4	armsrc/aes.c	/^static const unsigned int Td4[256] = {$/;"	v	file:
Te0	armsrc/aes.c	/^static const unsigned int Te0[256] = {$/;"	v	file:
Te1	armsrc/aes.c	/^static const unsigned int Te1[256] = {$/;"	v	file:
Te2	armsrc/aes.c	/^static const unsigned int Te2[256] = {$/;"	v	file:
Te3	armsrc/aes.c	/^static const unsigned int Te3[256] = {$/;"	v	file:
Te4	armsrc/aes.c	/^static const unsigned int Te4[256] = {$/;"	v	file:
TestEmlMfd	client/pm3_eml_mfd_test.py	/^class TestEmlMfd(unittest.TestCase):$/;"	c
TestFindBits	tools/findbits_test.py	/^class TestFindBits(unittest.TestCase):$/;"	c
Testcase	client/loclass/ikeys.c	/^} Testcase;$/;"	t	typeref:struct:__anon46	file:
ToSend	armsrc/appmain.c	/^uint8_t ToSend[TOSEND_BUFFER_SIZE];$/;"	v
ToSendBit	armsrc/appmain.c	/^static int ToSendBit;$/;"	v	file:
ToSendMax	armsrc/appmain.c	/^int ToSendMax;$/;"	v
ToSendReset	armsrc/appmain.c	/^void ToSendReset(void)$/;"	f
ToSendStuffBit	armsrc/appmain.c	/^void ToSendStuffBit(int b)$/;"	f
Token	liblua/llex.h	/^typedef struct Token {$/;"	s
Token	liblua/llex.h	/^} Token;$/;"	t	typeref:struct:Token
TransmitFor14443	armsrc/iso14443.c	/^static void TransmitFor14443(void)$/;"	f	file:
TransmitFor14443a	armsrc/iso14443a.c	/^static void TransmitFor14443a(const uint8_t *cmd, uint16_t len, uint32_t *timing)$/;"	f	file:
TransmitIClassCommand	armsrc/iclass.c	/^static void TransmitIClassCommand(const uint8_t *cmd, int len, int *samples, int *wait)$/;"	f	file:
TransmitTo15693Reader	armsrc/iso15693.c	/^static void TransmitTo15693Reader(const uint8_t *cmd, int len, int *samples, int *wait)$/;"	f	file:
TransmitTo15693Tag	armsrc/iso15693.c	/^static void TransmitTo15693Tag(const uint8_t *cmd, int len, int *samples, int *wait)$/;"	f	file:
UDP_CSR	include/at91sam7s512.h	/^	AT91_REG	 UDP_CSR[4]; 	\/\/ Endpoint Control and Status Register$/;"	m	struct:_AT91S_UDP
UDP_CSR	include/at91sam7s512.h	/^#define UDP_CSR /;"	d
UDP_CSR_BYTES_RECEIVED	include/proxmark3.h	/^#define UDP_CSR_BYTES_RECEIVED(/;"	d
UDP_FADDR	include/at91sam7s512.h	/^	AT91_REG	 UDP_FADDR; 	\/\/ Function Address Register$/;"	m	struct:_AT91S_UDP
UDP_FADDR	include/at91sam7s512.h	/^#define UDP_FADDR /;"	d
UDP_FDR	include/at91sam7s512.h	/^	AT91_REG	 UDP_FDR[4]; 	\/\/ Endpoint FIFO Data Register$/;"	m	struct:_AT91S_UDP
UDP_FDR	include/at91sam7s512.h	/^#define UDP_FDR /;"	d
UDP_FRM_NUM	include/at91sam7s512.h	/^#define UDP_FRM_NUM /;"	d
UDP_GLBSTATE	include/at91sam7s512.h	/^	AT91_REG	 UDP_GLBSTATE; 	\/\/ Global State Register$/;"	m	struct:_AT91S_UDP
UDP_GLBSTATE	include/at91sam7s512.h	/^#define UDP_GLBSTATE /;"	d
UDP_ICR	include/at91sam7s512.h	/^	AT91_REG	 UDP_ICR; 	\/\/ Interrupt Clear Register$/;"	m	struct:_AT91S_UDP
UDP_ICR	include/at91sam7s512.h	/^#define UDP_ICR /;"	d
UDP_IDR	include/at91sam7s512.h	/^	AT91_REG	 UDP_IDR; 	\/\/ Interrupt Disable Register$/;"	m	struct:_AT91S_UDP
UDP_IDR	include/at91sam7s512.h	/^#define UDP_IDR /;"	d
UDP_IER	include/at91sam7s512.h	/^	AT91_REG	 UDP_IER; 	\/\/ Interrupt Enable Register$/;"	m	struct:_AT91S_UDP
UDP_IER	include/at91sam7s512.h	/^#define UDP_IER /;"	d
UDP_IMR	include/at91sam7s512.h	/^	AT91_REG	 UDP_IMR; 	\/\/ Interrupt Mask Register$/;"	m	struct:_AT91S_UDP
UDP_IMR	include/at91sam7s512.h	/^#define UDP_IMR /;"	d
UDP_INTERRUPT_ENDPOINT	include/proxmark3.h	/^#define UDP_INTERRUPT_ENDPOINT(/;"	d
UDP_ISR	include/at91sam7s512.h	/^	AT91_REG	 UDP_ISR; 	\/\/ Interrupt Status Register$/;"	m	struct:_AT91S_UDP
UDP_ISR	include/at91sam7s512.h	/^#define UDP_ISR /;"	d
UDP_NUM	include/at91sam7s512.h	/^	AT91_REG	 UDP_NUM; 	\/\/ Frame Number Register$/;"	m	struct:_AT91S_UDP
UDP_RSTEP	include/at91sam7s512.h	/^	AT91_REG	 UDP_RSTEP; 	\/\/ Reset Endpoint Register$/;"	m	struct:_AT91S_UDP
UDP_RSTEP	include/at91sam7s512.h	/^#define UDP_RSTEP /;"	d
UDP_TXVC	include/at91sam7s512.h	/^	AT91_REG	 UDP_TXVC; 	\/\/ Transceiver Control Register$/;"	m	struct:_AT91S_UDP
UDP_TXVC	include/at91sam7s512.h	/^#define UDP_TXVC /;"	d
UID	armsrc/emvcard.h	/^    uint8_t UID[10]; $/;"	m	struct:__anon2
UID	armsrc/emvcard.h	/^    uint8_t UID[10]; $/;"	m	struct:__anon3
UID_len	armsrc/emvcard.h	/^    uint8_t UID_len; $/;"	m	struct:__anon2
UID_len	armsrc/emvcard.h	/^    uint8_t UID_len; $/;"	m	struct:__anon3
UI_H__	client/ui.h	/^#define UI_H__$/;"	d
UNARY_PRIORITY	liblua/lparser.c	/^#define UNARY_PRIORITY	/;"	d	file:
UNPACKNUMBER	client/pm3_binlib.c	/^#define UNPACKNUMBER(/;"	d	file:
UNPACKSTRING	client/pm3_binlib.c	/^#define UNPACKSTRING(/;"	d	file:
UNUSED	liblua/llimits.h	/^#define UNUSED(/;"	d
UPVALNAME	liblua/luac.c	/^#define UPVALNAME(/;"	d	file:
USB_CMD_DATA_SIZE	include/usb_cmd.h	/^#define USB_CMD_DATA_SIZE /;"	d
US_BRGR	include/at91sam7s512.h	/^	AT91_REG	 US_BRGR; 	\/\/ Baud Rate Generator Register$/;"	m	struct:_AT91S_USART
US_BRGR	include/at91sam7s512.h	/^#define US_BRGR /;"	d
US_CR	include/at91sam7s512.h	/^	AT91_REG	 US_CR; 	\/\/ Control Register$/;"	m	struct:_AT91S_USART
US_CR	include/at91sam7s512.h	/^#define US_CR /;"	d
US_CSR	include/at91sam7s512.h	/^	AT91_REG	 US_CSR; 	\/\/ Channel Status Register$/;"	m	struct:_AT91S_USART
US_CSR	include/at91sam7s512.h	/^#define US_CSR /;"	d
US_FIDI	include/at91sam7s512.h	/^	AT91_REG	 US_FIDI; 	\/\/ FI_DI_Ratio Register$/;"	m	struct:_AT91S_USART
US_FIDI	include/at91sam7s512.h	/^#define US_FIDI /;"	d
US_IDR	include/at91sam7s512.h	/^	AT91_REG	 US_IDR; 	\/\/ Interrupt Disable Register$/;"	m	struct:_AT91S_USART
US_IDR	include/at91sam7s512.h	/^#define US_IDR /;"	d
US_IER	include/at91sam7s512.h	/^	AT91_REG	 US_IER; 	\/\/ Interrupt Enable Register$/;"	m	struct:_AT91S_USART
US_IER	include/at91sam7s512.h	/^#define US_IER /;"	d
US_IF	include/at91sam7s512.h	/^	AT91_REG	 US_IF; 	\/\/ IRDA_FILTER Register$/;"	m	struct:_AT91S_USART
US_IF	include/at91sam7s512.h	/^#define US_IF /;"	d
US_IMR	include/at91sam7s512.h	/^	AT91_REG	 US_IMR; 	\/\/ Interrupt Mask Register$/;"	m	struct:_AT91S_USART
US_IMR	include/at91sam7s512.h	/^#define US_IMR /;"	d
US_MR	include/at91sam7s512.h	/^	AT91_REG	 US_MR; 	\/\/ Mode Register$/;"	m	struct:_AT91S_USART
US_MR	include/at91sam7s512.h	/^#define US_MR /;"	d
US_NER	include/at91sam7s512.h	/^	AT91_REG	 US_NER; 	\/\/ Nb Errors Register$/;"	m	struct:_AT91S_USART
US_NER	include/at91sam7s512.h	/^#define US_NER /;"	d
US_PTCR	include/at91sam7s512.h	/^	AT91_REG	 US_PTCR; 	\/\/ PDC Transfer Control Register$/;"	m	struct:_AT91S_USART
US_PTSR	include/at91sam7s512.h	/^	AT91_REG	 US_PTSR; 	\/\/ PDC Transfer Status Register$/;"	m	struct:_AT91S_USART
US_RCR	include/at91sam7s512.h	/^	AT91_REG	 US_RCR; 	\/\/ Receive Counter Register$/;"	m	struct:_AT91S_USART
US_RHR	include/at91sam7s512.h	/^	AT91_REG	 US_RHR; 	\/\/ Receiver Holding Register$/;"	m	struct:_AT91S_USART
US_RHR	include/at91sam7s512.h	/^#define US_RHR /;"	d
US_RNCR	include/at91sam7s512.h	/^	AT91_REG	 US_RNCR; 	\/\/ Receive Next Counter Register$/;"	m	struct:_AT91S_USART
US_RNPR	include/at91sam7s512.h	/^	AT91_REG	 US_RNPR; 	\/\/ Receive Next Pointer Register$/;"	m	struct:_AT91S_USART
US_RPR	include/at91sam7s512.h	/^	AT91_REG	 US_RPR; 	\/\/ Receive Pointer Register$/;"	m	struct:_AT91S_USART
US_RTOR	include/at91sam7s512.h	/^	AT91_REG	 US_RTOR; 	\/\/ Receiver Time-out Register$/;"	m	struct:_AT91S_USART
US_RTOR	include/at91sam7s512.h	/^#define US_RTOR /;"	d
US_TCR	include/at91sam7s512.h	/^	AT91_REG	 US_TCR; 	\/\/ Transmit Counter Register$/;"	m	struct:_AT91S_USART
US_THR	include/at91sam7s512.h	/^	AT91_REG	 US_THR; 	\/\/ Transmitter Holding Register$/;"	m	struct:_AT91S_USART
US_THR	include/at91sam7s512.h	/^#define US_THR /;"	d
US_TNCR	include/at91sam7s512.h	/^	AT91_REG	 US_TNCR; 	\/\/ Transmit Next Counter Register$/;"	m	struct:_AT91S_USART
US_TNPR	include/at91sam7s512.h	/^	AT91_REG	 US_TNPR; 	\/\/ Transmit Next Pointer Register$/;"	m	struct:_AT91S_USART
US_TPR	include/at91sam7s512.h	/^	AT91_REG	 US_TPR; 	\/\/ Transmit Pointer Register$/;"	m	struct:_AT91S_USART
US_TTGR	include/at91sam7s512.h	/^	AT91_REG	 US_TTGR; 	\/\/ Transmitter Time-guard Register$/;"	m	struct:_AT91S_USART
US_TTGR	include/at91sam7s512.h	/^#define US_TTGR /;"	d
Uart	armsrc/iclass.c	/^} Uart;$/;"	v	typeref:struct:__anon8	file:
Uart	armsrc/iso14443.c	/^} Uart;$/;"	v	typeref:struct:__anon13	file:
Uart	armsrc/iso14443a.c	/^static tUart Uart;$/;"	v	file:
UartInit	armsrc/iso14443.c	/^static void UartInit(uint8_t *data)$/;"	f	file:
UartInit	armsrc/iso14443a.c	/^void UartInit(uint8_t *data, uint8_t *parity)$/;"	f
UartReset	armsrc/iso14443.c	/^static void UartReset()$/;"	f	file:
UartReset	armsrc/iso14443a.c	/^void UartReset()$/;"	f
Udata	liblua/lobject.h	/^typedef union Udata {$/;"	u
Udata	liblua/lobject.h	/^} Udata;$/;"	t	typeref:union:Udata
UnOpr	liblua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	g
UnOpr	liblua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	t	typeref:enum:UnOpr
UpVal	liblua/lobject.h	/^typedef struct UpVal {$/;"	s
UpVal	liblua/lobject.h	/^} UpVal;$/;"	t	typeref:struct:UpVal
UpdateCrc14443	common/iso14443crc.c	/^static unsigned short UpdateCrc14443(unsigned char ch, unsigned short *lpwCrc)$/;"	f	file:
Upvaldesc	liblua/lobject.h	/^typedef struct Upvaldesc {$/;"	s
Upvaldesc	liblua/lobject.h	/^} Upvaldesc;$/;"	t	typeref:struct:Upvaldesc
UsbCommand	client/hid-flasher/usb_cmd.h	/^} PACKED UsbCommand;$/;"	t	typeref:struct:__anon38
UsbCommand	include/usb_cmd.h	/^} PACKED UsbCommand;$/;"	t	typeref:struct:__anon63
UsbCommandReceived	client/cmdmain.c	/^void UsbCommandReceived(UsbCommand *UC)$/;"	f
UsbPacketReceived	armsrc/appmain.c	/^void UsbPacketReceived(uint8_t *packet, int len)$/;"	f
UsbPacketReceived	bootrom/bootrom.c	/^void UsbPacketReceived(uint8_t *packet, int len) {$/;"	f
V	client/aes.c	/^#define V(/;"	d	file:
V	client/aes.c	/^#undef V$/;"	d	file:
VALUE_LENGTH	armsrc/tlv.h	/^#define VALUE_LENGTH /;"	d
VARBITS	liblua/lobject.h	/^#define VARBITS	/;"	d
VARIADIC	client/pm3_bitlib.c	/^#define VARIADIC(/;"	d	file:
VCALL	liblua/lparser.h	/^  VCALL,	\/* info = instruction pc *\/$/;"	e	enum:__anon75
VERSION	liblua/lundump.c	/^#define VERSION	/;"	d	file:
VERSION_INFORMATION_MAGIC	include/proxmark3.h	/^#define VERSION_INFORMATION_MAGIC /;"	d
VFALSE	liblua/lparser.h	/^  VFALSE,$/;"	e	enum:__anon75
VINDEXED	liblua/lparser.h	/^  VINDEXED,	\/* t = table register\/upvalue; idx = index R\/K *\/$/;"	e	enum:__anon75
VJMP	liblua/lparser.h	/^  VJMP,		\/* info = instruction pc *\/$/;"	e	enum:__anon75
VK	liblua/lparser.h	/^  VK,		\/* info = index of constant in `k' *\/$/;"	e	enum:__anon75
VKNUM	liblua/lparser.h	/^  VKNUM,	\/* nval = numerical value *\/$/;"	e	enum:__anon75
VLOCAL	liblua/lparser.h	/^  VLOCAL,	\/* info = local register *\/$/;"	e	enum:__anon75
VNIL	liblua/lparser.h	/^  VNIL,$/;"	e	enum:__anon75
VNONRELOC	liblua/lparser.h	/^  VNONRELOC,	\/* info = result register *\/$/;"	e	enum:__anon75
VOID	liblua/luac.c	/^#define VOID(/;"	d	file:
VPATH	client/Makefile	/^VPATH = ..\/common$/;"	m
VPATH	client/hid-flasher/Makefile	/^VPATH = ..\/..\/common$/;"	m
VREG_MR	include/at91sam7s512.h	/^	AT91_REG	 VREG_MR; 	\/\/ Voltage Regulator Mode Register$/;"	m	struct:_AT91S_SYS
VREG_MR	include/at91sam7s512.h	/^	AT91_REG	 VREG_MR; 	\/\/ Voltage Regulator Mode Register$/;"	m	struct:_AT91S_VREG
VREG_MR	include/at91sam7s512.h	/^#define VREG_MR /;"	d
VRELOCABLE	liblua/lparser.h	/^  VRELOCABLE,	\/* info = instruction pc *\/$/;"	e	enum:__anon75
VTRUE	liblua/lparser.h	/^  VTRUE,$/;"	e	enum:__anon75
VUPVAL	liblua/lparser.h	/^  VUPVAL,       \/* info = index of upvalue in 'upvalues' *\/$/;"	e	enum:__anon75
VVARARG	liblua/lparser.h	/^  VVARARG	\/* info = instruction pc *\/$/;"	e	enum:__anon75
VVOID	liblua/lparser.h	/^  VVOID,	\/* no value *\/$/;"	e	enum:__anon75
ValidateCheckSums	client/scripts/tnp3sim.lua	/^local function ValidateCheckSums(blocks)$/;"	f
Value	liblua/lobject.h	/^typedef union Value Value;$/;"	t	typeref:union:Value
Value	liblua/lobject.h	/^union Value {$/;"	u
Vardesc	liblua/lparser.h	/^typedef struct Vardesc {$/;"	s
Vardesc	liblua/lparser.h	/^} Vardesc;$/;"	t	typeref:struct:Vardesc
Vector	armsrc/start.c	/^void __attribute__((section(".startos"))) Vector(void)$/;"	f
WDTC_WDCR	include/at91sam7s512.h	/^	AT91_REG	 WDTC_WDCR; 	\/\/ Watchdog Control Register$/;"	m	struct:_AT91S_SYS
WDTC_WDCR	include/at91sam7s512.h	/^	AT91_REG	 WDTC_WDCR; 	\/\/ Watchdog Control Register$/;"	m	struct:_AT91S_WDTC
WDTC_WDCR	include/at91sam7s512.h	/^#define WDTC_WDCR /;"	d
WDTC_WDMR	include/at91sam7s512.h	/^	AT91_REG	 WDTC_WDMR; 	\/\/ Watchdog Mode Register$/;"	m	struct:_AT91S_SYS
WDTC_WDMR	include/at91sam7s512.h	/^	AT91_REG	 WDTC_WDMR; 	\/\/ Watchdog Mode Register$/;"	m	struct:_AT91S_WDTC
WDTC_WDMR	include/at91sam7s512.h	/^#define WDTC_WDMR /;"	d
WDTC_WDSR	include/at91sam7s512.h	/^	AT91_REG	 WDTC_WDSR; 	\/\/ Watchdog Status Register$/;"	m	struct:_AT91S_SYS
WDTC_WDSR	include/at91sam7s512.h	/^	AT91_REG	 WDTC_WDSR; 	\/\/ Watchdog Status Register$/;"	m	struct:_AT91S_WDTC
WDTC_WDSR	include/at91sam7s512.h	/^#define WDTC_WDSR /;"	d
WDT_HIT	include/proxmark3.h	/^#define WDT_HIT(/;"	d
WEAK_KEY_COUNT	client/loclass/des.c	/^#define WEAK_KEY_COUNT /;"	d	file:
WHITE	armsrc/LCD.h	/^#define WHITE	/;"	d
WHITE0BIT	liblua/lgc.h	/^#define WHITE0BIT	/;"	d
WHITE1BIT	liblua/lgc.h	/^#define WHITE1BIT	/;"	d
WHITEBITS	liblua/lgc.h	/^#define WHITEBITS	/;"	d
WRITE_0	armsrc/lfops.c	/^#define WRITE_0 /;"	d	file:
WRITE_1	armsrc/lfops.c	/^#define WRITE_1 /;"	d	file:
WRITE_GAP	armsrc/lfops.c	/^#define WRITE_GAP /;"	d	file:
WaitForResponse	client/cmdmain.c	/^bool WaitForResponse(uint32_t cmd, UsbCommand* response) {$/;"	f
WaitForResponseTimeout	client/cmdmain.c	/^bool WaitForResponseTimeout(uint32_t cmd, UsbCommand* response, size_t ms_timeout) {$/;"	f
WriteEM410x	armsrc/lfops.c	/^void WriteEM410x(uint32_t card, uint32_t id_hi, uint32_t id_lo)$/;"	f
WriteTIbyte	armsrc/lfops.c	/^void WriteTIbyte(uint8_t b)$/;"	f
WriteTItag	armsrc/lfops.c	/^void WriteTItag(uint32_t idhi, uint32_t idlo, uint16_t crc)$/;"	f
XDIGITBIT	liblua/lctype.h	/^#define XDIGITBIT	/;"	d
XTIME	client/aes.c	/^#define XTIME(/;"	d	file:
YELLOW	armsrc/LCD.h	/^#define YELLOW	/;"	d
Z	liblua/lundump.c	/^ ZIO* Z;$/;"	m	struct:__anon84	file:
ZIO	liblua/lzio.h	/^typedef struct Zio ZIO;$/;"	t	typeref:struct:Zio
Zio	liblua/lzio.h	/^struct Zio {$/;"	s
_AT91S_ADC	include/at91sam7s512.h	/^typedef struct _AT91S_ADC {$/;"	s
_AT91S_AIC	include/at91sam7s512.h	/^typedef struct _AT91S_AIC {$/;"	s
_AT91S_CKGR	include/at91sam7s512.h	/^typedef struct _AT91S_CKGR {$/;"	s
_AT91S_DBGU	include/at91sam7s512.h	/^typedef struct _AT91S_DBGU {$/;"	s
_AT91S_EFC	include/at91sam7s512.h	/^typedef struct _AT91S_EFC {$/;"	s
_AT91S_MC	include/at91sam7s512.h	/^typedef struct _AT91S_MC {$/;"	s
_AT91S_PDC	include/at91sam7s512.h	/^typedef struct _AT91S_PDC {$/;"	s
_AT91S_PIO	include/at91sam7s512.h	/^typedef struct _AT91S_PIO {$/;"	s
_AT91S_PITC	include/at91sam7s512.h	/^typedef struct _AT91S_PITC {$/;"	s
_AT91S_PMC	include/at91sam7s512.h	/^typedef struct _AT91S_PMC {$/;"	s
_AT91S_PWMC	include/at91sam7s512.h	/^typedef struct _AT91S_PWMC {$/;"	s
_AT91S_PWMC_CH	include/at91sam7s512.h	/^typedef struct _AT91S_PWMC_CH {$/;"	s
_AT91S_RSTC	include/at91sam7s512.h	/^typedef struct _AT91S_RSTC {$/;"	s
_AT91S_RTTC	include/at91sam7s512.h	/^typedef struct _AT91S_RTTC {$/;"	s
_AT91S_SPI	include/at91sam7s512.h	/^typedef struct _AT91S_SPI {$/;"	s
_AT91S_SSC	include/at91sam7s512.h	/^typedef struct _AT91S_SSC {$/;"	s
_AT91S_SYS	include/at91sam7s512.h	/^typedef struct _AT91S_SYS {$/;"	s
_AT91S_TC	include/at91sam7s512.h	/^typedef struct _AT91S_TC {$/;"	s
_AT91S_TCB	include/at91sam7s512.h	/^typedef struct _AT91S_TCB {$/;"	s
_AT91S_TWI	include/at91sam7s512.h	/^typedef struct _AT91S_TWI {$/;"	s
_AT91S_UDP	include/at91sam7s512.h	/^typedef struct _AT91S_UDP {$/;"	s
_AT91S_USART	include/at91sam7s512.h	/^typedef struct _AT91S_USART {$/;"	s
_AT91S_VREG	include/at91sam7s512.h	/^typedef struct _AT91S_VREG {$/;"	s
_AT91S_WDTC	include/at91sam7s512.h	/^typedef struct _AT91S_WDTC {$/;"	s
_CRT_SECURE_NO_DEPRECATE	client/polarssl_config.h	/^#define _CRT_SECURE_NO_DEPRECATE /;"	d
_FILE_OFFSET_BITS	liblua/liolib.c	/^#define _FILE_OFFSET_BITS /;"	d	file:
_HITAG2_H_	include/hitag2.h	/^#define _HITAG2_H_$/;"	d
_HideGraphWindow	client/proxguiqt.cpp	/^void ProxGuiQT::_HideGraphWindow(void)$/;"	f	class:ProxGuiQT
_MIFARE_H_	include/mifare.h	/^#define _MIFARE_H_$/;"	d
_POSIX_C_SOURCE	client/sleep.c	/^#define _POSIX_C_SOURCE	/;"	d	file:
_PROXMARK_CMD_H_	common/cmd.h	/^#define _PROXMARK_CMD_H_$/;"	d
_RS232_H_	client/uart.h	/^#define _RS232_H_$/;"	d
_RepaintGraphWindow	client/proxguiqt.cpp	/^void ProxGuiQT::_RepaintGraphWindow(void)$/;"	f	class:ProxGuiQT
_ShowGraphWindow	client/proxguiqt.cpp	/^void ProxGuiQT::_ShowGraphWindow(void)$/;"	f	class:ProxGuiQT
_USB_CDC_H_	common/usb_cdc.h	/^#define _USB_CDC_H_$/;"	d
__APPS_H	armsrc/apps.h	/^#define __APPS_H$/;"	d
__BIGBUF_H	armsrc/BigBuf.h	/^#define __BIGBUF_H$/;"	d
__COMMON_H	include/common.h	/^#define __COMMON_H$/;"	d
__CONFIG_GPIO_H	include/config_gpio.h	/^#define __CONFIG_GPIO_H$/;"	d
__CRC16_H	common/crc16.h	/^#define __CRC16_H$/;"	d
__CRC32_H	common/crc32.h	/^#define __CRC32_H$/;"	d
__CRC_H	include/crc.h	/^#define __CRC_H$/;"	d
__ELF_H__	client/elf.h	/^#define __ELF_H__$/;"	d
__ELF_H__	client/hid-flasher/elf.h	/^#define __ELF_H__$/;"	d
__EMVCARD_H	armsrc/emvcard.h	/^#define __EMVCARD_H$/;"	d
__EMVCMD_H	armsrc/emvcmd.h	/^#define __EMVCMD_H$/;"	d
__EMVDATAELS_H	armsrc/emvdataels.c	/^#define __EMVDATAELS_H$/;"	d	file:
__EMVDATAELS_H	armsrc/emvdataels.h	/^#define __EMVDATAELS_H$/;"	d
__EMVUTIL_H	armsrc/emvutil.h	/^#define __EMVUTIL_H$/;"	d
__EPA_H	armsrc/epa.h	/^#define __EPA_H$/;"	d
__FLASH_H__	client/flash.h	/^#define __FLASH_H__$/;"	d
__FLASH_H__	client/hid-flasher/flash.h	/^#define __FLASH_H__$/;"	d
__FONTS_H	armsrc/fonts.h	/^#define __FONTS_H$/;"	d
__ISO14443A_H	armsrc/iso14443a.h	/^#define __ISO14443A_H$/;"	d
__ISO14443CRC_H	common/iso14443crc.h	/^#define __ISO14443CRC_H$/;"	d
__LCD_H	armsrc/LCD.h	/^#define __LCD_H$/;"	d
__LEGICRF_H	armsrc/legicrf.h	/^#define __LEGICRF_H$/;"	d
__LEGIC_PRNG_H	include/legic_prng.h	/^#define __LEGIC_PRNG_H$/;"	d
__MIFARECMD_H	armsrc/mifarecmd.h	/^#define __MIFARECMD_H$/;"	d
__MIFARESNIFF_H	armsrc/mifaresniff.h	/^#define __MIFARESNIFF_H$/;"	d
__MIFAREUTIL_H	armsrc/mifareutil.h	/^#define __MIFAREUTIL_H$/;"	d
__NONCE2KEY_H	client/nonce2key/nonce2key.h	/^#define __NONCE2KEY_H$/;"	d
__PRINTF_H	armsrc/printf.h	/^#define __PRINTF_H$/;"	d
__PROXMARK3_H	include/proxmark3.h	/^#define __PROXMARK3_H$/;"	d
__STDC_FORMAT_MACROS	client/nonce2key/nonce2key.c	/^#define __STDC_FORMAT_MACROS$/;"	d	file:
__STDC_FORMAT_MACROS	client/proxmark3.h	/^#define __STDC_FORMAT_MACROS$/;"	d
__STDC_FORMAT_MACROS	tools/mfkey/mfkey32.c	/^#define __STDC_FORMAT_MACROS$/;"	d	file:
__STDC_FORMAT_MACROS	tools/mfkey/mfkey64.c	/^#define __STDC_FORMAT_MACROS$/;"	d	file:
__STDC_FORMAT_MACROS	tools/nonce2key/nonce2key.c	/^#define __STDC_FORMAT_MACROS$/;"	d	file:
__STDINT_H	armsrc/stdint.h	/^#define __STDINT_H$/;"	d
__STRING_H	armsrc/string.h	/^#define __STRING_H$/;"	d
__TLV_H	armsrc/tlv.h	/^#define __TLV_H$/;"	d
__USB_CMD_H	client/hid-flasher/usb_cmd.h	/^#define __USB_CMD_H$/;"	d
__USB_CMD_H	include/usb_cmd.h	/^#define __USB_CMD_H$/;"	d
__UTIL_H	armsrc/util.h	/^#define __UTIL_H$/;"	d
__init__	tools/findbits_test.py	/^	def __init__(self):$/;"	m	class:OutputBuffer
_bitparse_fixed_header	armsrc/fpgaloader.c	/^static const char _bitparse_fixed_header[] = {0x00, 0x09, 0x0f, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0, 0x00, 0x00, 0x01};$/;"	v	file:
_commands.tostring 	client/lualibs/commands.lua	/^_commands.tostring = function(command)$/;"	f
_f20	armsrc/hitag2.c	/^static u32 _f20 (const u64 x)$/;"	f	file:
_headBit	client/cmddata.c	/^bool _headBit( BitstreamOut *stream)$/;"	f
_hitag2_byte	armsrc/hitag2.c	/^static u32 _hitag2_byte (u64 * x)$/;"	f	file:
_hitag2_init	armsrc/hitag2.c	/^static u64 _hitag2_init (const u64 key, const u32 serial, const u32 IV)$/;"	f	file:
_hitag2_round	armsrc/hitag2.c	/^static u64 _hitag2_round (u64 *state)$/;"	f	file:
_readFromDump	client/loclass/elite_crack.c	/^int _readFromDump(uint8_t dump[], dumpdata* item, uint8_t i)$/;"	f
_select	client/loclass/cipher.c	/^uint8_t _select(bool x, bool y, uint8_t r)$/;"	f
_testBruteforce	client/loclass/elite_crack.c	/^int _testBruteforce()$/;"	f
_testHash1	client/loclass/elite_crack.c	/^int _testHash1()$/;"	f
_test_iclass_key_permutation	client/loclass/elite_crack.c	/^int _test_iclass_key_permutation()$/;"	f
a	common/legic_prng.c	/^  uint8_t  a;$/;"	m	struct:lfsr	file:
abs	armsrc/appmain.c	/^#define abs(/;"	d	file:
abs	armsrc/lfops.c	/^#define abs(/;"	d	file:
active_sector	armsrc/hitag2.c	/^	unsigned int active_sector;$/;"	m	struct:hitag2_tag	file:
actvar	liblua/lparser.h	/^  } actvar;$/;"	m	struct:Dyndata	typeref:struct:Dyndata::__anon78
adc_clk	fpga/hi_iso14443a.v	/^    output adc_clk;$/;"	p
adc_clk	fpga/hi_iso14443a.v	/^wire adc_clk = ck_1356meg;$/;"	n
adc_clk	fpga/hi_read_rx_xcorr.v	/^    output adc_clk;$/;"	p
adc_clk	fpga/hi_read_rx_xcorr.v	/^reg adc_clk;$/;"	r
adc_clk	fpga/hi_read_tx.v	/^    output adc_clk;$/;"	p
adc_clk	fpga/hi_simulate.v	/^    output adc_clk;$/;"	p
adc_clk	fpga/lo_passthru.v	/^	output adc_clk,$/;"	p
adc_clk	fpga/lo_simulate.v	/^    output adc_clk;$/;"	p
adc_clk	fpga/testbed_fpga.v	/^    wire adc_clk, adc_noe;$/;"	n
adc_clk	fpga/testbed_hi_read_tx.v	/^	wire adc_clk;$/;"	n
adc_clk	fpga/testbed_hi_simulate.v	/^	wire adc_clk;$/;"	n
adc_clk	fpga/testbed_lo_read.v	/^	wire adc_clk;$/;"	n
adc_clk	fpga/testbed_lo_simulate.v	/^	wire adc_clk;$/;"	n
adc_clk	fpga/tests/tb_lf_edge_detect.v	/^	wire adc_clk;$/;"	n
adc_d	fpga/fpga_hf.v	/^	input [7:0] adc_d, output adc_clk, output adc_noe,$/;"	p
adc_d	fpga/fpga_lf.v	/^	input [7:0] adc_d, output adc_clk, output adc_noe,$/;"	p
adc_d	fpga/hi_iso14443a.v	/^    input [7:0] adc_d;$/;"	p
adc_d	fpga/hi_read_rx_xcorr.v	/^    input [7:0] adc_d;$/;"	p
adc_d	fpga/hi_read_tx.v	/^    input [7:0] adc_d;$/;"	p
adc_d	fpga/hi_simulate.v	/^    input [7:0] adc_d;$/;"	p
adc_d	fpga/lo_edge_detect.v	/^    input [7:0] adc_d, output adc_clk,$/;"	p
adc_d	fpga/lo_read.v	/^	input [7:0] adc_d, output adc_clk,$/;"	p
adc_d	fpga/lo_simulate.v	/^    input [7:0] adc_d;$/;"	p
adc_d	fpga/testbed_fpga.v	/^    reg [7:0] adc_d;$/;"	r
adc_d	fpga/testbed_hi_read_tx.v	/^	reg  [7:0] adc_d;$/;"	r
adc_d	fpga/testbed_hi_simulate.v	/^	reg  [7:0] adc_d;$/;"	r
adc_d	fpga/testbed_lo_read.v	/^	reg  [7:0] adc_d;$/;"	r
adc_d	fpga/testbed_lo_simulate.v	/^	reg  [7:0] adc_d;$/;"	r
adc_d	fpga/tests/tb_lf_edge_detect.v	/^	reg [7:0] adc_d;$/;"	r
adc_d	fpga/tests/tb_lp20khz_1MSa_iir_filter.v	/^	reg [7:0] adc_d;$/;"	r
adc_d	fpga/tests/tb_min_max_tracker.v	/^	reg [7:0] adc_d;$/;"	r
adc_filtered	fpga/lo_edge_detect.v	/^wire [7:0] adc_filtered;$/;"	n
adc_filtered	fpga/tests/tb_lp20khz_1MSa_iir_filter.v	/^	wire [7:0] adc_filtered;$/;"	n
adc_noe	fpga/testbed_fpga.v	/^    wire adc_clk, adc_noe;$/;"	n
adc_val	fpga/testbed_lo_read.v	/^	integer idx, i, adc_val=8;$/;"	r
add	client/lualibs/htmlskel.lua	/^		function add(commaSeparated)$/;"	f
add_s	liblua/lstrlib.c	/^static void add_s (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
add_value	liblua/lstrlib.c	/^static void add_value (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
addbuff	liblua/lstate.c	/^#define addbuff(/;"	d	file:
addfield	liblua/ltablib.c	/^static void addfield (lua_State *L, luaL_Buffer *b, int i) {$/;"	f	file:
addinfo	liblua/ldebug.c	/^static void addinfo (lua_State *L, const char *msg) {$/;"	f	file:
addk	liblua/lcode.c	/^static int addk (FuncState *fs, TValue *key, TValue *v) {$/;"	f	file:
addlenmod	liblua/lstrlib.c	/^static void addlenmod (char *form, const char *lenmod) {$/;"	f	file:
addprototype	liblua/lparser.c	/^static Proto *addprototype (LexState *ls) {$/;"	f	file:
addquoted	liblua/lstrlib.c	/^static void addquoted (lua_State *L, luaL_Buffer *b, int arg) {$/;"	f	file:
addstr	liblua/lobject.c	/^#define addstr(/;"	d	file:
adjust_assign	liblua/lparser.c	/^static void adjust_assign (LexState *ls, int nvars, int nexps, expdesc *e) {$/;"	f	file:
adjust_varargs	liblua/ldo.c	/^static StkId adjust_varargs (lua_State *L, Proto *p, int actual) {$/;"	f	file:
adjustlocalvars	liblua/lparser.c	/^static void adjustlocalvars (LexState *ls, int nvars) {$/;"	f	file:
adjustresults	liblua/lapi.h	/^#define adjustresults(/;"	d
aes_context	client/aes.h	/^aes_context;$/;"	t	typeref:struct:__anon26
aes_crypt_cbc	client/aes.c	/^int aes_crypt_cbc( aes_context *ctx,$/;"	f
aes_crypt_cfb128	client/aes.c	/^int aes_crypt_cfb128( aes_context *ctx,$/;"	f
aes_crypt_cfb8	client/aes.c	/^int aes_crypt_cfb8( aes_context *ctx,$/;"	f
aes_crypt_ctr	client/aes.c	/^int aes_crypt_ctr( aes_context *ctx,$/;"	f
aes_crypt_ecb	client/aes.c	/^int aes_crypt_ecb( aes_context *ctx,$/;"	f
aes_free	client/aes.c	/^void aes_free( aes_context *ctx )$/;"	f
aes_gen_tables	client/aes.c	/^static void aes_gen_tables( void )$/;"	f	file:
aes_init	client/aes.c	/^void aes_init( aes_context *ctx )$/;"	f
aes_init_done	client/aes.c	/^static int aes_init_done = 0;$/;"	v	file:
aes_padlock_ace	client/aes.c	/^static int aes_padlock_ace = -1;$/;"	v	file:
aes_self_test	client/aes.c	/^int aes_self_test( int verbose )$/;"	f
aes_setkey_dec	client/aes.c	/^int aes_setkey_dec( aes_context *ctx, const unsigned char *key,$/;"	f
aes_setkey_enc	armsrc/aes.c	/^int aes_setkey_enc(unsigned int rk[], const unsigned char cipherKey[], int keyBytes)$/;"	f
aes_setkey_enc	client/aes.c	/^int aes_setkey_enc( aes_context *ctx, const unsigned char *key,$/;"	f
aes_test_cbc_dec	client/aes.c	/^static const unsigned char aes_test_cbc_dec[3][16] =$/;"	v	file:
aes_test_cbc_enc	client/aes.c	/^static const unsigned char aes_test_cbc_enc[3][16] =$/;"	v	file:
aes_test_cfb128_ct	client/aes.c	/^static const unsigned char aes_test_cfb128_ct[3][64] =$/;"	v	file:
aes_test_cfb128_iv	client/aes.c	/^static const unsigned char aes_test_cfb128_iv[16] =$/;"	v	file:
aes_test_cfb128_key	client/aes.c	/^static const unsigned char aes_test_cfb128_key[3][32] =$/;"	v	file:
aes_test_cfb128_pt	client/aes.c	/^static const unsigned char aes_test_cfb128_pt[64] =$/;"	v	file:
aes_test_ctr_ct	client/aes.c	/^static const unsigned char aes_test_ctr_ct[3][48] =$/;"	v	file:
aes_test_ctr_key	client/aes.c	/^static const unsigned char aes_test_ctr_key[3][16] =$/;"	v	file:
aes_test_ctr_len	client/aes.c	/^static const int aes_test_ctr_len[3] =$/;"	v	file:
aes_test_ctr_nonce_counter	client/aes.c	/^static const unsigned char aes_test_ctr_nonce_counter[3][16] =$/;"	v	file:
aes_test_ctr_pt	client/aes.c	/^static const unsigned char aes_test_ctr_pt[3][48] =$/;"	v	file:
aes_test_ecb_dec	client/aes.c	/^static const unsigned char aes_test_ecb_dec[3][16] =$/;"	v	file:
aes_test_ecb_enc	client/aes.c	/^static const unsigned char aes_test_ecb_enc[3][16] =$/;"	v	file:
after_hysteresis	fpga/hi_iso14443a.v	/^reg after_hysteresis;$/;"	r
after_hysteresis	fpga/hi_read_rx_xcorr.v	/^reg after_hysteresis, after_hysteresis_prev;$/;"	r
after_hysteresis	fpga/hi_read_tx.v	/^reg after_hysteresis;$/;"	r
after_hysteresis	fpga/hi_simulate.v	/^reg after_hysteresis;$/;"	r
after_hysteresis_prev	fpga/hi_read_rx_xcorr.v	/^reg after_hysteresis, after_hysteresis_prev;$/;"	r
aggregate_bits	common/lfdemod.c	/^size_t aggregate_bits(uint8_t *dest, size_t size, uint8_t rfLen, uint8_t maxConsequtiveBits,$/;"	f
allgc	liblua/lstate.h	/^  GCObject *allgc;  \/* list of all collectable objects *\/$/;"	m	struct:global_State
allowhook	liblua/lstate.h	/^  lu_byte allowhook;$/;"	m	struct:lua_State
allweak	liblua/lstate.h	/^  GCObject *allweak;  \/* list of all-weak tables *\/$/;"	m	struct:global_State
anchor_token	liblua/lparser.c	/^static void anchor_token (LexState *ls) {$/;"	f	file:
andaux	liblua/lbitlib.c	/^static b_uint andaux (lua_State *L) {$/;"	f	file:
annotateIclass	client/cmdhf.c	/^void annotateIclass(char *exp, size_t size, uint8_t* cmd, uint8_t cmdsize)$/;"	f
annotateIso14443a	client/cmdhf.c	/^void annotateIso14443a(char *exp, size_t size, uint8_t* cmd, uint8_t cmdsize)$/;"	f
annotateIso14443b	client/cmdhf.c	/^void annotateIso14443b(char *exp, size_t size, uint8_t* cmd, uint8_t cmdsize)$/;"	f
annotateIso15693	client/cmdhf.c	/^void annotateIso15693(char *exp, size_t size, uint8_t* cmd, uint8_t cmdsize)$/;"	f
apdu_general_authenticate_pace_get_nonce	armsrc/epa.c	/^static const uint8_t apdu_general_authenticate_pace_get_nonce[] = {$/;"	v	file:
apdu_mse_set_at_start	armsrc/epa.c	/^static const uint8_t apdu_mse_set_at_start[] = {$/;"	v	file:
apdu_read_binary	armsrc/epa.c	/^static const uint8_t apdu_read_binary[] = {$/;"	v	file:
apdu_select_binary_cardaccess	armsrc/epa.c	/^static const uint8_t apdu_select_binary_cardaccess[] = {$/;"	v	file:
api_check	liblua/llimits.h	/^#define api_check(/;"	d
api_checknelems	liblua/lapi.h	/^#define api_checknelems(/;"	d
api_checkstackindex	liblua/lapi.c	/^#define api_checkstackindex(/;"	d	file:
api_checkvalidindex	liblua/lapi.c	/^#define api_checkvalidindex(/;"	d	file:
api_incr_top	liblua/lapi.h	/^#define api_incr_top(/;"	d
ar_enc	client/mifarehost.c	/^uint32_t ar_enc;  \/\/ encrypted reader response$/;"	v
arg	client/hid-flasher/usb_cmd.h	/^	uint32_t	arg[3];$/;"	m	struct:__anon38
arg	include/usb_cmd.h	/^  uint64_t arg[3];$/;"	m	struct:__anon63
arg1	include/proxmark3.h	/^	int arg1, arg2;$/;"	m	struct:common_area
arg2	include/proxmark3.h	/^	int arg1, arg2;$/;"	m	struct:common_area
argc	client/proxguiqt.h	/^		int argc;$/;"	m	class:ProxGuiQT
argv	client/proxguiqt.h	/^		char **argv;$/;"	m	class:ProxGuiQT
arith_op	liblua/lvm.c	/^#define arith_op(/;"	d	file:
arr	liblua/lparser.h	/^    Vardesc *arr;$/;"	m	struct:Dyndata::__anon78
arr	liblua/lparser.h	/^  Labeldesc *arr;  \/* array *\/$/;"	m	struct:Labellist
array	liblua/lobject.h	/^  TValue *array;  \/* array part *\/$/;"	m	struct:Table
arrayindex	liblua/ltable.c	/^static int arrayindex (const TValue *key) {$/;"	f	file:
arraylen	armsrc/iso15693.c	/^#define arraylen(/;"	d	file:
arraylen	client/data.h	/^#define arraylen(/;"	d
asBytes	client/hid-flasher/usb_cmd.h	/^		uint8_t		asBytes[48];$/;"	m	union:__anon38::__anon39
asBytes	include/usb_cmd.h	/^    uint8_t  asBytes[USB_CMD_DATA_SIZE];$/;"	m	union:__anon63::__anon64
asDwords	client/hid-flasher/usb_cmd.h	/^		uint32_t	asDwords[12];$/;"	m	union:__anon38::__anon39
asDwords	include/usb_cmd.h	/^    uint32_t asDwords[USB_CMD_DATA_SIZE\/4];$/;"	m	union:__anon63::__anon64
askAmp	common/lfdemod.c	/^void askAmp(uint8_t *BitStream, size_t size)$/;"	f
askmandemod	common/lfdemod.c	/^int askmandemod(uint8_t *BinStream, size_t *size, int *clk, int *invert, int maxErr)$/;"	f
askrawdemod	common/lfdemod.c	/^int askrawdemod(uint8_t *BinStream, size_t *size, int *clk, int *invert, int maxErr, uint8_t amp)$/;"	f
assignment	liblua/lparser.c	/^static void assignment (LexState *ls, struct LHS_assign *lh, int nvars) {$/;"	f	file:
at_enc	client/mifarehost.c	/^uint32_t at_enc;  \/\/ encrypted tag response$/;"	v
atomic	liblua/lgc.c	/^static l_mem atomic (lua_State *L) {$/;"	f	file:
atqa	include/mifare.h	/^	byte_t atqa[2];$/;"	m	struct:__anon61
ats	include/mifare.h	/^	byte_t ats[256];$/;"	m	struct:__anon61
ats_len	include/mifare.h	/^	byte_t ats_len;$/;"	m	struct:__anon61
auth	include/hitag2.h	/^	rht2d_authenticate auth;$/;"	m	union:__anon60
auth_table	armsrc/hitag2.c	/^static byte_t* auth_table;$/;"	v	file:
auth_table_len	armsrc/hitag2.c	/^static size_t auth_table_len = AUTH_TABLE_LENGTH;$/;"	v	file:
auth_table_pos	armsrc/hitag2.c	/^static size_t auth_table_pos = 0;$/;"	v	file:
aux_close	liblua/liolib.c	/^static int aux_close (lua_State *L) {$/;"	f	file:
aux_getn	liblua/ltablib.c	/^#define aux_getn(/;"	d	file:
aux_lines	liblua/liolib.c	/^static void aux_lines (lua_State *L, int toclose) {$/;"	f	file:
aux_upvalue	liblua/lapi.c	/^static const char *aux_upvalue (StkId fi, int n, TValue **val,$/;"	f	file:
auxgetinfo	liblua/ldebug.c	/^static int auxgetinfo (lua_State *L, const char *what, lua_Debug *ar,$/;"	f	file:
auxresume	liblua/lcorolib.c	/^static int auxresume (lua_State *L, lua_State *co, int narg) {$/;"	f	file:
auxsort	liblua/ltablib.c	/^static void auxsort (lua_State *L, int l, int u) {$/;"	f	file:
auxupvalue	liblua/ldblib.c	/^static int auxupvalue (lua_State *L, int get) {$/;"	f	file:
averaging	include/usb_cmd.h	/^	bool averaging;$/;"	m	struct:__anon65
b	client/loclass/cipher.c	/^	uint8_t b;$/;"	m	struct:__anon40	file:
b	common/legic_prng.c	/^  uint8_t  b;$/;"	m	struct:lfsr	file:
b	liblua/lauxlib.h	/^  char *b;  \/* buffer address *\/$/;"	m	struct:luaL_Buffer
b	liblua/ldo.c	/^  luai_jmpbuf b;$/;"	m	struct:lua_longjmp	file:
b	liblua/lobject.h	/^  int b;           \/* booleans *\/$/;"	m	union:Value
b	liblua/lundump.c	/^ Mbuffer* b;$/;"	m	struct:__anon84	file:
bAuthenticating	armsrc/hitag2.c	/^static bool bAuthenticating;$/;"	v	file:
bCharFormat	common/usb_cdc.c	/^	char bCharFormat;$/;"	m	struct:__anon55	file:
bCrypto	armsrc/hitag2.c	/^static bool bCrypto;$/;"	v	file:
bDataBits	common/usb_cdc.c	/^	char bDataBits;$/;"	m	struct:__anon55	file:
bParityType	common/usb_cdc.c	/^	char bParityType;$/;"	m	struct:__anon55	file:
bPwd	armsrc/hitag2.c	/^static bool bPwd;$/;"	v	file:
bQuiet	armsrc/hitag2.c	/^static bool bQuiet;$/;"	v	file:
bSuccessful	armsrc/hitag2.c	/^static bool bSuccessful;$/;"	v	file:
b_and	liblua/lbitlib.c	/^static int b_and (lua_State *L) {$/;"	f	file:
b_arshift	liblua/lbitlib.c	/^static int b_arshift (lua_State *L) {$/;"	f	file:
b_extract	liblua/lbitlib.c	/^static int b_extract (lua_State *L) {$/;"	f	file:
b_lrot	liblua/lbitlib.c	/^static int b_lrot (lua_State *L) {$/;"	f	file:
b_lshift	liblua/lbitlib.c	/^static int b_lshift (lua_State *L) {$/;"	f	file:
b_not	liblua/lbitlib.c	/^static int b_not (lua_State *L) {$/;"	f	file:
b_or	liblua/lbitlib.c	/^static int b_or (lua_State *L) {$/;"	f	file:
b_replace	liblua/lbitlib.c	/^static int b_replace (lua_State *L) {$/;"	f	file:
b_rot	liblua/lbitlib.c	/^static int b_rot (lua_State *L, int i) {$/;"	f	file:
b_rrot	liblua/lbitlib.c	/^static int b_rrot (lua_State *L) {$/;"	f	file:
b_rshift	liblua/lbitlib.c	/^static int b_rshift (lua_State *L) {$/;"	f	file:
b_shift	liblua/lbitlib.c	/^static int b_shift (lua_State *L, b_uint r, int i) {$/;"	f	file:
b_test	liblua/lbitlib.c	/^static int b_test (lua_State *L) {$/;"	f	file:
b_uint	liblua/lbitlib.c	/^typedef lua_Unsigned b_uint;$/;"	t	file:
b_xor	liblua/lbitlib.c	/^static int b_xor (lua_State *L) {$/;"	f	file:
badcode	client/pm3_binlib.c	/^static void badcode(lua_State *L, int c)$/;"	f	file:
base	liblua/lstate.h	/^      StkId base;  \/* base for this function *\/$/;"	m	struct:CallInfo::__anon79::__anon80
base_ci	liblua/lstate.h	/^  CallInfo base_ci;  \/* CallInfo for first level (C calling Lua) *\/$/;"	m	struct:lua_State
base_funcs	liblua/lbaselib.c	/^static const luaL_Reg base_funcs[] = {$/;"	v	file:
basehookcount	liblua/lstate.h	/^  int basehookcount;$/;"	m	struct:lua_State
binarraytobinstring	client/util.c	/^void binarraytobinstring(char *target, char *source,  int length)$/;"	f
binarraytohex	client/util.c	/^int binarraytohex(char *target, char *source, int length)$/;"	f
binascii	client/pm3_eml2mfd.py	/^import binascii$/;"	i
binascii	client/pm3_mfd2eml.py	/^import binascii$/;"	i
binlib	client/pm3_binlib.c	/^static const luaL_Reg binlib[] =$/;"	v	file:
binsearch	armsrc/crapto1.c	/^static inline uint32_t* binsearch(uint32_t *start, uint32_t *stop)$/;"	f	file:
binsearch	client/nonce2key/crapto1.c	/^binsearch(uint32_t *start, uint32_t *stop)$/;"	f	file:
binsearch	tools/mfkey/crapto1.c	/^static inline uint32_t* binsearch(uint32_t *start, uint32_t *stop)$/;"	f	file:
binsearch	tools/nonce2key/crapto1.c	/^binsearch(uint32_t *start, uint32_t *stop)$/;"	f	file:
binstring	tools/findbits.py	/^def binstring(number):$/;"	f
bit	armsrc/hitag2.c	/^#define bit(/;"	d	file:
bit2mask	liblua/lgc.h	/^#define bit2mask(/;"	d
bit32	armsrc/hitag2.c	/^#define bit32(/;"	d	file:
bitBuffer	armsrc/iclass.c	/^    int     bitBuffer;$/;"	m	struct:__anon8	file:
bitCnt	armsrc/iclass.c	/^    int     bitCnt;$/;"	m	struct:__anon8	file:
bitCnt	armsrc/iso14443.c	/^	int     bitCnt;$/;"	m	struct:__anon13	file:
bitCount	armsrc/iclass.c	/^    int     bitCount;$/;"	m	struct:__anon10	file:
bitCount	armsrc/iso14443.c	/^	int     bitCount;$/;"	m	struct:__anon15	file:
bitCount	armsrc/iso14443a.h	/^	uint16_t bitCount;$/;"	m	struct:__anon17
bitCount	armsrc/iso14443a.h	/^	uint16_t bitCount;$/;"	m	struct:__anon20
bit_to_arm	fpga/hi_iso14443a.v	/^reg bit_to_arm;$/;"	r
bitlib	client/pm3_bitlib.c	/^static const struct luaL_Reg bitlib[] = {$/;"	v	typeref:struct:luaL_Reg	file:
bitlib	liblua/lbitlib.c	/^static const luaL_Reg bitlib[] = {$/;"	v	file:
bitmask	liblua/lgc.h	/^#define bitmask(/;"	d
bitparse_bitstream_end	armsrc/fpgaloader.c	/^static char *bitparse_bitstream_end;$/;"	v	file:
bitparse_find_section	armsrc/fpgaloader.c	/^int bitparse_find_section(char section_name, char **section_start, unsigned int *section_length)$/;"	f
bitparse_headers_start	armsrc/fpgaloader.c	/^static char *bitparse_headers_start;$/;"	v	file:
bitparse_init	armsrc/fpgaloader.c	/^static int bitparse_init(void * start_address, void *end_address)$/;"	f	file:
bitparse_initialized	armsrc/fpgaloader.c	/^static int bitparse_initialized = 0;$/;"	v	file:
bits	armsrc/legicrf.c	/^	int bits;$/;"	m	struct:legic_frame	file:
bitsLeft	client/loclass/cipherutils.c	/^int bitsLeft( BitstreamIn *stream)$/;"	f
bits_per_sample	include/usb_cmd.h	/^	uint8_t bits_per_sample;$/;"	m	struct:__anon65
bl	liblua/lparser.h	/^  struct BlockCnt *bl;  \/* chain of current blocks *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::BlockCnt
black2gray	liblua/lgc.c	/^#define black2gray(/;"	d	file:
block	liblua/lparser.c	/^static void block (LexState *ls) {$/;"	f	file:
blockNo	client/mifarehost.c	/^		uint32_t blockNo;$/;"	m	struct:__anon47	file:
block_follow	liblua/lparser.c	/^static int block_follow (LexState *ls, int withuntil) {$/;"	f	file:
blocknr	armsrc/hitag2.c	/^size_t blocknr;$/;"	v
body	liblua/lparser.c	/^static void body (LexState *ls, expdesc *e, int ismethod, int line) {$/;"	f	file:
boolK	liblua/lcode.c	/^static int boolK (FuncState *fs, int b) {$/;"	f	file:
bootrom_present	include/proxmark3.h	/^		unsigned int bootrom_present:1; \/* Set when a bootrom that is capable of parsing the common area is present *\/$/;"	m	struct:common_area::__anon62
bootrom_unlocked	bootrom/bootrom.c	/^unsigned int start_addr, end_addr, bootrom_unlocked;$/;"	v
bp	client/nonce2key/crapto1.c	/^	uint32_t *bp;$/;"	m	struct:bucket	file:
breaklabel	liblua/lparser.c	/^static void breaklabel (LexState *ls) {$/;"	f	file:
brute_top	client/nonce2key/crapto1.c	/^brute_top(uint32_t prefix, uint32_t rresp, unsigned char parities[8][8],$/;"	f	file:
brute_top	tools/nonce2key/crapto1.c	/^brute_top(uint32_t prefix, uint32_t rresp, unsigned char parities[8][8],$/;"	f	file:
bruteforceDump	client/loclass/elite_crack.c	/^int bruteforceDump(uint8_t dump[], size_t dumpsize, uint16_t keytable[])$/;"	f
bruteforceFile	client/loclass/elite_crack.c	/^int bruteforceFile(const char *filename, uint16_t keytable[])$/;"	f
bruteforceFileNoKeys	client/loclass/elite_crack.c	/^int bruteforceFileNoKeys(const char *filename)$/;"	f
bruteforceItem	client/loclass/elite_crack.c	/^int bruteforceItem(dumpdata item, uint16_t keytable[])$/;"	f
btConfiguration	common/usb_cdc.c	/^byte_t btConfiguration = 0;$/;"	v
btConnection	common/usb_cdc.c	/^byte_t btConnection    = 0;$/;"	v
btReceiveBank	common/usb_cdc.c	/^byte_t btReceiveBank   = AT91C_UDP_RX_DATA_BK0;$/;"	v
bucket	client/nonce2key/crapto1.c	/^typedef struct bucket {$/;"	s	file:
bucket_array_t	client/nonce2key/crapto1.c	/^typedef bucket_t bucket_array_t[2][0x100];$/;"	t	file:
bucket_info	client/nonce2key/crapto1.c	/^		} bucket_info[2][0x100];$/;"	m	struct:bucket_info	typeref:struct:bucket_info::__anon51	file:
bucket_info	client/nonce2key/crapto1.c	/^typedef struct bucket_info {$/;"	s	file:
bucket_info_t	client/nonce2key/crapto1.c	/^	} bucket_info_t;$/;"	t	typeref:struct:bucket_info	file:
bucket_sort_intersect	client/nonce2key/crapto1.c	/^static void bucket_sort_intersect(uint32_t* const estart, uint32_t* const estop,$/;"	f	file:
bucket_t	client/nonce2key/crapto1.c	/^} bucket_t;$/;"	t	typeref:struct:bucket	file:
buf	client/aes.h	/^    uint32_t buf[68];           \/*!<  unaligned data    *\/$/;"	m	struct:__anon26
buff	armsrc/iclass.c	/^	int     buff;$/;"	m	struct:__anon10	file:
buff	liblua/lauxlib.c	/^  char buff[LUAL_BUFFERSIZE];  \/* area for reading file *\/$/;"	m	struct:LoadF	file:
buff	liblua/ldo.c	/^  Mbuffer buff;  \/* dynamic structure used by the scanner *\/$/;"	m	struct:SParser	file:
buff	liblua/llex.h	/^  Mbuffer *buff;  \/* buffer for tokens *\/$/;"	m	struct:LexState
buff	liblua/lstate.c	/^  char buff[LUAI_EXTRASPACE];$/;"	m	struct:LX	file:
buff	liblua/lstate.h	/^  Mbuffer buff;  \/* temporary buffer for string concatenation *\/$/;"	m	struct:global_State
buff2d	liblua/llex.c	/^#define buff2d(/;"	d	file:
buffer	armsrc/iclass.c	/^	int     buffer;$/;"	m	struct:__anon10	file:
buffer	armsrc/lfsampling.c	/^	uint8_t * buffer;$/;"	m	struct:__anon24	file:
buffer	client/cmddata.c	/^	uint8_t * buffer;$/;"	m	struct:__anon27	file:
buffer	client/loclass/cipherutils.h	/^	uint8_t * buffer;$/;"	m	struct:__anon41
buffer	client/loclass/cipherutils.h	/^	uint8_t * buffer;$/;"	m	struct:__anon42
buffer	liblua/lzio.h	/^  char *buffer;$/;"	m	struct:Mbuffer
buffer2	armsrc/iclass.c	/^	int     buffer2;$/;"	m	struct:__anon10	file:
buffer3	armsrc/iclass.c	/^	int	buffer3;$/;"	m	struct:__anon10	file:
buffonstack	liblua/lauxlib.c	/^#define buffonstack(/;"	d	file:
buffreplace	liblua/llex.c	/^static void buffreplace (LexState *ls, char from, char to) {$/;"	f	file:
buffsize	liblua/lzio.h	/^  size_t buffsize;$/;"	m	struct:Mbuffer
build_segs_from_phdrs	client/flash.c	/^static int build_segs_from_phdrs(flash_file_t *ctx, FILE *fd, Elf32_Phdr *phdrs, int num_phdrs)$/;"	f	file:
build_segs_from_phdrs	client/hid-flasher/flash.c	/^static int build_segs_from_phdrs(flash_file_t *ctx, FILE *fd, Elf32_Phdr *phdrs, int num_phdrs)$/;"	f	file:
buildtime	include/proxmark3.h	/^	char buildtime[30]; \/* string with the build time *\/$/;"	m	struct:version_information
bvalue	liblua/lobject.h	/^#define bvalue(/;"	d
byteCnt	armsrc/iclass.c	/^    int     byteCnt;$/;"	m	struct:__anon8	file:
byteCnt	armsrc/iso14443.c	/^	int     byteCnt;$/;"	m	struct:__anon13	file:
byteCntMax	armsrc/iclass.c	/^    int     byteCntMax;$/;"	m	struct:__anon8	file:
byteCntMax	armsrc/iso14443.c	/^	int     byteCntMax;$/;"	m	struct:__anon13	file:
byteCntMax	armsrc/iso14443a.h	/^	uint16_t byteCntMax;$/;"	m	struct:__anon20
byte_t	client/uart.h	/^typedef unsigned char byte_t;$/;"	t
byte_t	include/common.h	/^typedef unsigned char byte_t;$/;"	t
byte_t	tools/nonce2key/nonce2key.c	/^typedef unsigned char byte_t;$/;"	t	file:
bytebits_to_byte	common/lfdemod.c	/^uint32_t bytebits_to_byte(uint8_t* src, size_t numbits)$/;"	f
bytes_to_num	armsrc/util.c	/^uint64_t bytes_to_num(uint8_t* src, size_t len)$/;"	f
bytes_to_num	client/util.c	/^uint64_t bytes_to_num(uint8_t* src, size_t len)$/;"	f
c	common/legic_prng.c	/^  uint32_t c;$/;"	m	struct:lfsr	file:
c	liblua/lobject.h	/^  CClosure c;$/;"	m	union:Closure
c	liblua/lstate.h	/^    } c;$/;"	m	union:CallInfo::__anon79	typeref:struct:CallInfo::__anon79::__anon81
cache	liblua/lobject.h	/^  union Closure *cache;  \/* last created closure with this prototype *\/$/;"	m	struct:Proto	typeref:union:Proto::Closure
calculateMasterKey	client/loclass/elite_crack.c	/^int calculateMasterKey(uint8_t first16bytes[], uint64_t master_key[] )$/;"	f
callTM	liblua/lvm.c	/^static void callTM (lua_State *L, const TValue *f, const TValue *p1,$/;"	f	file:
call_binTM	liblua/lvm.c	/^static int call_binTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	file:
call_orderTM	liblua/lvm.c	/^static int call_orderTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	file:
callallpendingfinalizers	liblua/lgc.c	/^static void callallpendingfinalizers (lua_State *L, int propagateerrors) {$/;"	f	file:
callhook	liblua/ldo.c	/^static void callhook (lua_State *L, CallInfo *ci) {$/;"	f	file:
callstatus	liblua/lstate.h	/^  lu_byte callstatus;$/;"	m	struct:CallInfo
can_write_bl	client/flash.h	/^	int can_write_bl;$/;"	m	struct:__anon33
can_write_bl	client/hid-flasher/flash.h	/^	int can_write_bl;$/;"	m	struct:__anon37
cannot	liblua/luac.c	/^static void cannot(const char* what)$/;"	f	file:
capture	liblua/lstrlib.c	/^  } capture[LUA_MAXCAPTURES];$/;"	m	struct:MatchState	typeref:struct:MatchState::__anon82	file:
capture_to_close	liblua/lstrlib.c	/^static int capture_to_close (MatchState *ms) {$/;"	f	file:
cardSTATE_TO_IDLE	armsrc/mifareutil.h	/^#define cardSTATE_TO_IDLE(/;"	d
cast	liblua/llimits.h	/^#define cast(/;"	d
cast_byte	liblua/llimits.h	/^#define cast_byte(/;"	d
cast_int	liblua/llimits.h	/^#define cast_int(/;"	d
cast_num	liblua/llimits.h	/^#define cast_num(/;"	d
cast_uchar	liblua/llimits.h	/^#define cast_uchar(/;"	d
cc_nr	client/loclass/elite_crack.h	/^	uint8_t cc_nr[12];$/;"	m	struct:__anon45
cfgDescriptor	common/usb_cdc.c	/^const char cfgDescriptor[] = {$/;"	v
changeendian32	armsrc/des.c	/^void changeendian32(uint32_t * a){$/;"	f
changewhite	liblua/lgc.h	/^#define changewhite(/;"	d
check	client/loclass/ikeys.c	/^uint64_t check(uint64_t z)$/;"	f
check	liblua/lparser.c	/^static void check (LexState *ls, int c) {$/;"	f	file:
checkBlock	client/scripts/mfkeys.lua	/^function checkBlock(blockNo, keys, keyType)$/;"	f
checkCommand	client/scripts/mfkeys.lua	/^local function checkCommand(command)$/;"	f
checkGC	liblua/lvm.c	/^#define checkGC(/;"	d	file:
checkSizes	liblua/lgc.c	/^static void checkSizes (lua_State *L) {$/;"	f	file:
check_capture	liblua/lstrlib.c	/^static int check_capture (MatchState *ms, int l) {$/;"	f	file:
check_condition	liblua/lparser.c	/^#define check_condition(/;"	d	file:
check_conflict	liblua/lparser.c	/^static void check_conflict (LexState *ls, struct LHS_assign *lh, expdesc *v) {$/;"	f	file:
check_exp	liblua/llimits.h	/^#define check_exp(/;"	d
check_golden	fpga/tests/Makefile	/^check_golden = \\$/;"	m
check_match	liblua/lparser.c	/^static void check_match (LexState *ls, int what, int who, int where) {$/;"	f	file:
check_next	liblua/llex.c	/^static int check_next (LexState *ls, const char *set) {$/;"	f	file:
check_pfx_parity	armsrc/crapto1.c	/^check_pfx_parity(uint32_t prefix, uint32_t rresp, uint8_t parities[8][8],$/;"	f	file:
check_pfx_parity	tools/mfkey/crapto1.c	/^check_pfx_parity(uint32_t prefix, uint32_t rresp, uint8_t parities[8][8],$/;"	f	file:
check_segs	client/flash.c	/^static int check_segs(flash_file_t *ctx, int can_write_bl) {$/;"	f	file:
check_segs	client/hid-flasher/flash.c	/^static int check_segs(flash_file_t *ctx, int can_write_bl) {$/;"	f	file:
checkconsistency	liblua/lgc.c	/^#define checkconsistency(/;"	d	file:
checkdeadkey	liblua/lgc.c	/^#define checkdeadkey(/;"	d	file:
checklimit	liblua/lparser.c	/^static void checklimit (FuncState *fs, int v, int l, const char *what) {$/;"	f	file:
checkliveness	liblua/lobject.h	/^#define checkliveness(/;"	d
checkload	liblua/loadlib.c	/^static int checkload (lua_State *L, int stat, const char *filename) {$/;"	f	file:
checkmode	liblua/ldo.c	/^static void checkmode (lua_State *L, const char *mode, const char *x) {$/;"	f	file:
checkname	liblua/lparser.c	/^static void checkname (LexState *ls, expdesc *e) {$/;"	f	file:
checknext	liblua/lparser.c	/^static void checknext (LexState *ls, int c) {$/;"	f	file:
checkoption	liblua/loslib.c	/^static const char *checkoption (lua_State *L, const char *conv, char *buff) {$/;"	f	file:
checkrepeated	liblua/lparser.c	/^static void checkrepeated (FuncState *fs, Labellist *ll, TString *label) {$/;"	f	file:
checkresults	liblua/lapi.c	/^#define checkresults(/;"	d	file:
checktag	liblua/lobject.h	/^#define checktag(/;"	d
checktag	liblua/lobject.h	/^#undef checktag$/;"	d
checktype	liblua/lobject.h	/^#define checktype(/;"	d
checktype	liblua/lobject.h	/^#undef checktype$/;"	d
checkupval	liblua/ldblib.c	/^static int checkupval (lua_State *L, int argf, int argnup) {$/;"	f	file:
ci	liblua/lstate.h	/^  CallInfo *ci;  \/* call info for current function *\/$/;"	m	struct:lua_State
ci_func	liblua/ldebug.h	/^#define ci_func(/;"	d
cipher_state	armsrc/hitag2.c	/^static uint64_t cipher_state;$/;"	v	file:
ck	client/loclass/ikeys.c	/^uint64_t ck(int i, int j, uint64_t z)$/;"	f
ck_1356meg	fpga/hi_iso14443a.v	/^    input pck0, ck_1356meg, ck_1356megb;$/;"	p
ck_1356meg	fpga/hi_read_rx_xcorr.v	/^    input pck0, ck_1356meg, ck_1356megb;$/;"	p
ck_1356meg	fpga/hi_read_tx.v	/^    input pck0, ck_1356meg, ck_1356megb;$/;"	p
ck_1356meg	fpga/hi_simulate.v	/^    input pck0, ck_1356meg, ck_1356megb;$/;"	p
ck_1356meg	fpga/lo_simulate.v	/^    input pck0, ck_1356meg, ck_1356megb;$/;"	p
ck_1356meg	fpga/testbed_fpga.v	/^    reg pck0i, ck_1356meg, ck_1356megb;$/;"	r
ck_1356meg	fpga/testbed_hi_read_tx.v	/^	reg ck_1356meg;$/;"	r
ck_1356meg	fpga/testbed_hi_simulate.v	/^	reg ck_1356meg;$/;"	r
ck_1356meg	fpga/testbed_lo_read.v	/^	wire ck_1356meg;$/;"	n
ck_1356meg	fpga/testbed_lo_simulate.v	/^	wire ck_1356meg;$/;"	n
ck_1356megb	fpga/hi_iso14443a.v	/^    input pck0, ck_1356meg, ck_1356megb;$/;"	p
ck_1356megb	fpga/hi_read_rx_xcorr.v	/^    input pck0, ck_1356meg, ck_1356megb;$/;"	p
ck_1356megb	fpga/hi_read_tx.v	/^    input pck0, ck_1356meg, ck_1356megb;$/;"	p
ck_1356megb	fpga/hi_simulate.v	/^    input pck0, ck_1356meg, ck_1356megb;$/;"	p
ck_1356megb	fpga/lo_simulate.v	/^    input pck0, ck_1356meg, ck_1356megb;$/;"	p
ck_1356megb	fpga/testbed_fpga.v	/^    reg pck0i, ck_1356meg, ck_1356megb;$/;"	r
ck_1356megb	fpga/testbed_hi_read_tx.v	/^	reg  ck_1356megb;$/;"	r
ck_1356megb	fpga/testbed_hi_simulate.v	/^	reg  ck_1356megb;$/;"	r
ck_1356megb	fpga/testbed_lo_read.v	/^	wire ck_1356megb;$/;"	n
ck_1356megb	fpga/testbed_lo_simulate.v	/^	wire ck_1356megb;$/;"	n
cl	liblua/lstate.h	/^  union Closure cl;$/;"	m	union:GCObject	typeref:union:GCObject::Closure
clCvalue	liblua/lobject.h	/^#define clCvalue(/;"	d
clLvalue	liblua/lobject.h	/^#define clLvalue(/;"	d
claimed_iface	client/hid-flasher/proxusb.c	/^static unsigned int claimed_iface = 0;$/;"	v	file:
classend	liblua/lstrlib.c	/^static const char *classend (MatchState *ms, const char *p) {$/;"	f	file:
clean	include/proxmark3.h	/^	char clean; \/* 1: Tree was clean, no local changes. 0: Tree was unclean. 2: Couldn't be determined *\/$/;"	m	struct:version_information
clearCommandBuffer	client/cmdmain.c	/^void clearCommandBuffer()$/;"	f
clear_buffer	tools/findbits_test.py	/^	def clear_buffer(self):$/;"	m	class:OutputBuffer
clear_trace	armsrc/BigBuf.c	/^void clear_trace() {$/;"	f
clearkeys	liblua/lgc.c	/^static void clearkeys (global_State *g, GCObject *l, GCObject *f) {$/;"	f	file:
clearvalues	liblua/lgc.c	/^static void clearvalues (global_State *g, GCObject *l, GCObject *f) {$/;"	f	file:
clk	fpga/tests/tb_lf_edge_detect.v	/^	reg clk = 0;$/;"	r
clk	fpga/tests/tb_lp20khz_1MSa_iir_filter.v	/^	reg clk;$/;"	r
clk	fpga/tests/tb_min_max_tracker.v	/^	reg clk;$/;"	r
clk_divider	fpga/clk_divider.v	/^module clk_divider(input clk, input [7:0] divisor, output [7:0] div_cnt, output div_clk);$/;"	m
clk_state	fpga/lo_simulate.v	/^reg clk_state;$/;"	r
clonedcard	armsrc/emvcard.h	/^}clonedcard;$/;"	t	typeref:struct:__anon3
close	client/scripts/ndef_dump.lua	/^local function close()$/;"	f
closeEvent	client/proxguiqt.cpp	/^void ProxWidget::closeEvent(QCloseEvent *event)$/;"	f	class:ProxWidget
close_func	liblua/lparser.c	/^static void close_func (LexState *ls) {$/;"	f	file:
close_state	liblua/lstate.c	/^static void close_state (lua_State *L) {$/;"	f	file:
closef	liblua/lauxlib.h	/^  lua_CFunction closef;  \/* to close stream (NULL for closed streams) *\/$/;"	m	struct:luaL_Stream
closegoto	liblua/lparser.c	/^static void closegoto (LexState *ls, int g, Labeldesc *label) {$/;"	f	file:
closelistfield	liblua/lparser.c	/^static void closelistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	file:
clvalue	liblua/lobject.h	/^#define clvalue(/;"	d
cmd	client/hid-flasher/usb_cmd.h	/^	uint32_t	cmd;$/;"	m	struct:__anon38
cmd	include/usb_cmd.h	/^  uint64_t cmd;$/;"	m	struct:__anon63
cmdBuffer	client/cmdmain.c	/^static UsbCommand cmdBuffer[CMD_BUFFER_SIZE];$/;"	v	file:
cmd_debug	client/flasher.c	/^void cmd_debug(UsbCommand* UC) {$/;"	f
cmd_head	client/cmdmain.c	/^static int cmd_head;\/\/Starts as 0$/;"	v	file:
cmd_receive	common/cmd.c	/^bool cmd_receive(UsbCommand* cmd) {$/;"	f
cmd_send	common/cmd.c	/^bool cmd_send(uint32_t cmd, uint32_t arg0, uint32_t arg1, uint32_t arg2, void* data, size_t len) {$/;"	f
cmd_tail	client/cmdmain.c	/^static int cmd_tail;\/\/Starts as 0$/;"	v	file:
cnt	fpga/lp20khz_1MSa_iir_filter.v	/^	reg [23:0] cnt = 1;$/;"	r
co_funcs	liblua/lcorolib.c	/^static const luaL_Reg co_funcs[] = {$/;"	v	file:
code	liblua/lobject.h	/^  Instruction *code;$/;"	m	struct:Proto
code_label	liblua/lcode.c	/^static int code_label (FuncState *fs, int A, int b, int jump) {$/;"	f	file:
codearith	liblua/lcode.c	/^static void codearith (FuncState *fs, OpCode op,$/;"	f	file:
codeclosure	liblua/lparser.c	/^static void codeclosure (LexState *ls, expdesc *v) {$/;"	f	file:
codecomp	liblua/lcode.c	/^static void codecomp (FuncState *fs, OpCode op, int cond, expdesc *e1,$/;"	f	file:
codeextraarg	liblua/lcode.c	/^static int codeextraarg (FuncState *fs, int a) {$/;"	f	file:
codenot	liblua/lcode.c	/^static void codenot (FuncState *fs, expdesc *e) {$/;"	f	file:
codestring	liblua/lparser.c	/^static void codestring (LexState *ls, expdesc *e, TString *s) {$/;"	f	file:
collectargs	liblua/lua.c	/^static int collectargs (char **argv, int *args) {$/;"	f	file:
collectvalidlines	liblua/ldebug.c	/^static void collectvalidlines (lua_State *L, Closure *f) {$/;"	f	file:
collisionPos	armsrc/iso14443a.h	/^	uint16_t collisionPos;$/;"	m	struct:__anon17
combine	liblua/luac.c	/^static const Proto* combine(lua_State* L, int n)$/;"	f	file:
command	include/proxmark3.h	/^	char command;$/;"	m	struct:common_area
command_s	client/cmdparser.h	/^typedef struct command_s$/;"	s
command_t	client/cmdparser.h	/^} command_t;$/;"	t	typeref:struct:command_s
common_area	armsrc/appmain.c	/^struct common_area common_area __attribute__((section(".commonarea")));$/;"	v	typeref:struct:common_area
common_area	bootrom/bootrom.c	/^struct common_area common_area __attribute__((section(".commonarea")));$/;"	v	typeref:struct:common_area
common_area	include/proxmark3.h	/^struct common_area {$/;"	s
commutative_test	tools/findbits_test.py	/^	def commutative_test(self, operation, cases):$/;"	m	class:TestFindBits
compar_int	client/mifarehost.c	/^int compar_int(const void * a, const void * b) {$/;"	f
compar_state	client/nonce2key/nonce2key.c	/^int compar_state(const void * a, const void * b) {$/;"	f
computeCrc16	client/scripts/tnp3dump.lua	/^local function computeCrc16(s)$/;"	f
computesizes	liblua/ltable.c	/^static int computesizes (int nums[], int *narray) {$/;"	f	file:
cond	liblua/lparser.c	/^static int cond (LexState *ls) {$/;"	f	file:
condchangemem	liblua/llimits.h	/^#define condchangemem(/;"	d
condjump	liblua/lcode.c	/^static int condjump (FuncState *fs, OpCode op, int A, int B, int C) {$/;"	f	file:
condmovestack	liblua/llimits.h	/^#define condmovestack(/;"	d
conf_word	fpga/fpga_hf.v	/^reg [7:0] conf_word;$/;"	r
conf_word	fpga/fpga_lf.v	/^reg [7:0] conf_word;$/;"	r
config	armsrc/lfsampling.c	/^sample_config config = { 1, 8, 1, 88, 0 } ;$/;"	v
confirm 	client/lualibs/utils.lua	/^	confirm = function(message, ...)$/;"	f
confirm 	client/scripts/mfkeys.lua	/^	confirm = function(message, ...)$/;"	f
constfolding	liblua/lcode.c	/^static int constfolding (OpCode op, expdesc *e1, expdesc *e2) {$/;"	f	file:
constructor	liblua/lparser.c	/^static void constructor (LexState *ls, expdesc *t) {$/;"	f	file:
convergeephemerons	liblua/lgc.c	/^static void convergeephemerons (global_State *g) {$/;"	f	file:
convert_ascii_dump_to_BIN	client/lualibs/html_dumplib.lua	/^local function convert_ascii_dump_to_BIN(infile)$/;"	f
convert_ascii_dump_to_JS	client/lualibs/html_dumplib.lua	/^local function convert_ascii_dump_to_JS(infile)$/;"	f
convert_bin_to_html	client/lualibs/html_dumplib.lua	/^local function convert_bin_to_html(input, output, blockLen)$/;"	f
convert_binary_dump_to_JS	client/lualibs/html_dumplib.lua	/^local function convert_binary_dump_to_JS(infile, blockLen)$/;"	f
convert_eml_to_bin	client/lualibs/html_dumplib.lua	/^local function convert_eml_to_bin(input, output)$/;"	f
convert_eml_to_html	client/lualibs/html_dumplib.lua	/^local function convert_eml_to_html(input, output)$/;"	f
convert_to_ascii	client/scripts/dumptoemul.lua	/^local function convert_to_ascii(hexdata)$/;"	f
convert_to_emulform	client/scripts/dumptoemul.lua	/^local function convert_to_emulform(hexdata)$/;"	f
corr_i_cnt	fpga/hi_read_rx_xcorr.v	/^reg [5:0] corr_i_cnt;$/;"	r
corr_q_cnt	fpga/hi_read_rx_xcorr.v	/^reg [5:0] corr_q_cnt;$/;"	r
correctstack	liblua/ldo.c	/^static void correctstack (lua_State *L, TValue *oldstack) {$/;"	f	file:
countFC	common/lfdemod.c	/^uint16_t countFC(uint8_t *BitStream, size_t size, uint8_t *mostFC)$/;"	f
countPSK_FC	common/lfdemod.c	/^uint8_t countPSK_FC(uint8_t *BitStream, size_t size)$/;"	f
counter	armsrc/iclass.c	/^    int     counter;$/;"	m	struct:__anon8	file:
counter	fpga/testbed_lo_simulate.v	/^	integer i, counter=0;$/;"	r
countint	liblua/ltable.c	/^static int countint (const TValue *key, int *nums) {$/;"	f	file:
countlevels	liblua/lauxlib.c	/^static int countlevels (lua_State *L) {$/;"	f	file:
crank_dut	fpga/testbed_hi_read_tx.v	/^	task crank_dut;$/;"	t
crank_dut	fpga/testbed_hi_simulate.v	/^	task crank_dut;$/;"	t
crank_dut	fpga/testbed_lo_read.v	/^	task crank_dut;$/;"	t
crank_dut	fpga/testbed_lo_simulate.v	/^	task crank_dut;$/;"	t
crc	include/crc.h	/^typedef struct crc {$/;"	s
crc16	common/crc16.c	/^uint16_t crc16(uint8_t const *message, int length, uint16_t remainder, uint16_t polynomial) {$/;"	f
crc16_ccitt	common/crc16.c	/^uint16_t crc16_ccitt(uint8_t const *message, int length) {$/;"	f
crc32	common/crc32.c	/^void crc32 (const uint8_t *data, const size_t len, uint8_t *crc) {$/;"	f
crc32_append	common/crc32.c	/^void crc32_append (uint8_t *data, const size_t len) {$/;"	f
crc32_byte	common/crc32.c	/^static void crc32_byte (uint32_t *crc, const uint8_t value) {$/;"	f	file:
crc_clear	common/crc.c	/^void crc_clear(crc_t *crc)$/;"	f
crc_finish	common/crc.c	/^uint32_t crc_finish(crc_t *crc)$/;"	f
crc_init	common/crc.c	/^void crc_init(crc_t *crc, int order, uint32_t polynom, uint32_t initial_value, uint32_t final_xor)$/;"	f
crc_t	include/crc.h	/^} crc_t;$/;"	t	typeref:struct:crc
crc_update	common/crc.c	/^void crc_update(crc_t *crc, uint32_t data, int data_width)$/;"	f
createmeta	liblua/liolib.c	/^static void createmeta (lua_State *L) {$/;"	f	file:
createmetatable	liblua/lstrlib.c	/^static void createmetatable (lua_State *L) {$/;"	f	file:
createsearcherstable	liblua/loadlib.c	/^static void createsearcherstable (lua_State *L) {$/;"	f	file:
createstdfile	liblua/liolib.c	/^static void createstdfile (lua_State *L, FILE *f, const char *k,$/;"	f	file:
createstrobj	liblua/lstring.c	/^static TString *createstrobj (lua_State *L, const char *str, size_t l,$/;"	f	file:
cross_hi	fpga/fpga_hf.v	/^	input cross_hi, input cross_lo,$/;"	p
cross_hi	fpga/fpga_lf.v	/^	input cross_hi, input cross_lo,$/;"	p
cross_hi	fpga/hi_iso14443a.v	/^    input cross_hi, cross_lo;$/;"	p
cross_hi	fpga/hi_read_rx_xcorr.v	/^    input cross_hi, cross_lo;$/;"	p
cross_hi	fpga/hi_read_tx.v	/^    input cross_hi, cross_lo;$/;"	p
cross_hi	fpga/hi_simulate.v	/^    input cross_hi, cross_lo;$/;"	p
cross_hi	fpga/lo_simulate.v	/^    input cross_hi, cross_lo;$/;"	p
cross_hi	fpga/testbed_hi_read_tx.v	/^	wire cross_hi;$/;"	n
cross_hi	fpga/testbed_hi_simulate.v	/^	wire cross_hi;$/;"	n
cross_hi	fpga/testbed_lo_read.v	/^	wire cross_hi;$/;"	n
cross_hi	fpga/testbed_lo_simulate.v	/^	wire cross_hi;$/;"	n
cross_lo	fpga/hi_iso14443a.v	/^    input cross_hi, cross_lo;$/;"	p
cross_lo	fpga/hi_read_rx_xcorr.v	/^    input cross_hi, cross_lo;$/;"	p
cross_lo	fpga/hi_read_tx.v	/^    input cross_hi, cross_lo;$/;"	p
cross_lo	fpga/hi_simulate.v	/^    input cross_hi, cross_lo;$/;"	p
cross_lo	fpga/lo_edge_detect.v	/^    input cross_lo,$/;"	p
cross_lo	fpga/lo_passthru.v	/^	input cross_lo,$/;"	p
cross_lo	fpga/lo_simulate.v	/^    input cross_hi, cross_lo;$/;"	p
cross_lo	fpga/testbed_hi_read_tx.v	/^	wire cross_lo;$/;"	n
cross_lo	fpga/testbed_hi_simulate.v	/^	wire cross_lo;$/;"	n
cross_lo	fpga/testbed_lo_read.v	/^	wire cross_lo;$/;"	n
cross_lo	fpga/testbed_lo_simulate.v	/^	reg  cross_lo;$/;"	r
crypto	include/hitag2.h	/^	rht2d_crypto crypto;$/;"	m	union:__anon60
crypto1_bit	armsrc/crypto1.c	/^uint8_t crypto1_bit(struct Crypto1State *s, uint8_t in, int is_encrypted)$/;"	f
crypto1_bit	client/nonce2key/crypto1.c	/^uint8_t crypto1_bit(struct Crypto1State *s, uint8_t in, int is_encrypted)$/;"	f
crypto1_bit	tools/mfkey/crypto1.c	/^uint8_t crypto1_bit(struct Crypto1State *s, uint8_t in, int is_encrypted)$/;"	f
crypto1_bit	tools/nonce2key/crypto1.c	/^uint8_t crypto1_bit(struct Crypto1State *s, uint8_t in, int is_encrypted)$/;"	f
crypto1_byte	armsrc/crypto1.c	/^uint8_t crypto1_byte(struct Crypto1State *s, uint8_t in, int is_encrypted)$/;"	f
crypto1_byte	client/nonce2key/crypto1.c	/^uint8_t crypto1_byte(struct Crypto1State *s, uint8_t in, int is_encrypted)$/;"	f
crypto1_byte	tools/mfkey/crypto1.c	/^uint8_t crypto1_byte(struct Crypto1State *s, uint8_t in, int is_encrypted)$/;"	f
crypto1_byte	tools/nonce2key/crypto1.c	/^uint8_t crypto1_byte(struct Crypto1State *s, uint8_t in, int is_encrypted)$/;"	f
crypto1_create	armsrc/crypto1.c	/^void crypto1_create(struct Crypto1State *s, uint64_t key)$/;"	f
crypto1_create	client/nonce2key/crypto1.c	/^struct Crypto1State * crypto1_create(uint64_t key)$/;"	f
crypto1_create	tools/mfkey/crypto1.c	/^struct Crypto1State * crypto1_create(uint64_t key)$/;"	f
crypto1_create	tools/nonce2key/crypto1.c	/^struct Crypto1State * crypto1_create(uint64_t key)$/;"	f
crypto1_destroy	armsrc/crypto1.c	/^void crypto1_destroy(struct Crypto1State *state)$/;"	f
crypto1_destroy	client/nonce2key/crypto1.c	/^void crypto1_destroy(struct Crypto1State *state)$/;"	f
crypto1_destroy	tools/mfkey/crypto1.c	/^void crypto1_destroy(struct Crypto1State *state)$/;"	f
crypto1_destroy	tools/nonce2key/crypto1.c	/^void crypto1_destroy(struct Crypto1State *state)$/;"	f
crypto1_get_lfsr	armsrc/crypto1.c	/^void crypto1_get_lfsr(struct Crypto1State *state, uint64_t *lfsr)$/;"	f
crypto1_get_lfsr	client/nonce2key/crypto1.c	/^void crypto1_get_lfsr(struct Crypto1State *state, uint64_t *lfsr)$/;"	f
crypto1_get_lfsr	tools/mfkey/crypto1.c	/^void crypto1_get_lfsr(struct Crypto1State *state, uint64_t *lfsr)$/;"	f
crypto1_get_lfsr	tools/nonce2key/crypto1.c	/^void crypto1_get_lfsr(struct Crypto1State *state, uint64_t *lfsr)$/;"	f
crypto1_word	armsrc/crypto1.c	/^uint32_t crypto1_word(struct Crypto1State *s, uint32_t in, int is_encrypted)$/;"	f
crypto1_word	client/nonce2key/crypto1.c	/^uint32_t crypto1_word(struct Crypto1State *s, uint32_t in, int is_encrypted)$/;"	f
crypto1_word	tools/mfkey/crypto1.c	/^uint32_t crypto1_word(struct Crypto1State *s, uint32_t in, int is_encrypted)$/;"	f
crypto1_word	tools/nonce2key/crypto1.c	/^uint32_t crypto1_word(struct Crypto1State *s, uint32_t in, int is_encrypted)$/;"	f
crypto_active	armsrc/hitag2.c	/^	byte_t crypto_active;$/;"	m	struct:hitag2_tag	file:
cs	armsrc/hitag2.c	/^	uint64_t cs;$/;"	m	struct:hitag2_tag	file:
csn	client/loclass/elite_crack.h	/^	uint8_t csn[8];$/;"	m	struct:__anon45
csrIdx	common/usb_cdc.c	/^unsigned char csrIdx = 0;$/;"	v
csrTab	common/usb_cdc.c	/^unsigned int csrTab[100] = {0x00};$/;"	v
ct	client/uart.c	/^  COMMTIMEOUTS ct;  \/\/ Serial port time-out configuration$/;"	m	struct:__anon53	file:
ctb	liblua/lobject.h	/^#define ctb(/;"	d
ctx	liblua/lstate.h	/^      int ctx;  \/* context info. in case of yields *\/$/;"	m	struct:CallInfo::__anon79::__anon81
ctx_dec	client/loclass/elite_crack.c	/^static des_context ctx_dec = {DES_DECRYPT,{0}};$/;"	v	file:
ctx_dec	client/loclass/ikeys.c	/^static des_context ctx_dec = {DES_DECRYPT,{0}};$/;"	v	file:
ctx_enc	client/loclass/elite_crack.c	/^static des_context ctx_enc = {DES_ENCRYPT,{0}};$/;"	v	file:
ctx_enc	client/loclass/ikeys.c	/^static des_context ctx_enc = {DES_ENCRYPT,{0}};$/;"	v	file:
cur_max_val	fpga/min_max_tracker.v	/^	reg [7:0] cur_max_val = 0;$/;"	r
cur_min_val	fpga/min_max_tracker.v	/^	reg [7:0] cur_min_val = 255;$/;"	r
curbit	fpga/hi_iso14443a.v	/^reg curbit;$/;"	r
currIsNewline	liblua/llex.c	/^#define currIsNewline(/;"	d	file:
current	liblua/llex.h	/^  int current;  \/* current character (charint) *\/$/;"	m	struct:LexState
current_command	client/cmdmain.c	/^unsigned int current_command = CMD_UNKNOWN;$/;"	v
current_command	client/flash.c	/^unsigned int current_command = CMD_UNKNOWN;$/;"	v
current_command	client/hid-flasher/flash.c	/^unsigned int current_command = CMD_UNKNOWN;$/;"	v
current_frame	armsrc/legicrf.c	/^} current_frame;$/;"	v	typeref:struct:legic_frame	file:
currentcard	armsrc/emvcmd.c	/^static emvcard currentcard;$/;"	v	file:
currentline	liblua/ldebug.c	/^static int currentline (CallInfo *ci) {$/;"	f	file:
currentline	liblua/lua.h	/^  int currentline;	\/* (l) *\/$/;"	m	struct:lua_Debug
currentpc	liblua/ldebug.c	/^static int currentpc (CallInfo *ci) {$/;"	f	file:
currentwhite	liblua/lstate.h	/^  lu_byte currentwhite;$/;"	m	struct:global_State
d	client/hid-flasher/usb_cmd.h	/^	} d;$/;"	m	struct:__anon38	typeref:union:__anon38::__anon39
d	include/usb_cmd.h	/^  } d;$/;"	m	struct:__anon63	typeref:union:__anon63::__anon64
d_	liblua/lobject.h	/^#define d_(/;"	d
data	armsrc/legicrf.c	/^	uint32_t data;$/;"	m	struct:legic_frame	file:
data	client/flash.h	/^	void *data;$/;"	m	struct:__anon32
data	client/hid-flasher/flash.h	/^	void *data;$/;"	m	struct:__anon36
data	liblua/ldump.c	/^ void* data;$/;"	m	struct:__anon66	file:
data	liblua/lzio.h	/^  void* data;			\/* additional data *\/$/;"	m	struct:Zio
data_abort	bootrom/flash-reset.s	/^data_abort:$/;"	l
data_rdy	fpga/lo_edge_detect.v	/^wire data_rdy;$/;"	n
data_rdy	fpga/tests/tb_lf_edge_detect.v	/^	wire data_rdy;$/;"	n
data_rdy	fpga/tests/tb_lp20khz_1MSa_iir_filter.v	/^	wire data_rdy;$/;"	n
db_debug	liblua/ldblib.c	/^static int db_debug (lua_State *L) {$/;"	f	file:
db_gethook	liblua/ldblib.c	/^static int db_gethook (lua_State *L) {$/;"	f	file:
db_getinfo	liblua/ldblib.c	/^static int db_getinfo (lua_State *L) {$/;"	f	file:
db_getlocal	liblua/ldblib.c	/^static int db_getlocal (lua_State *L) {$/;"	f	file:
db_getmetatable	liblua/ldblib.c	/^static int db_getmetatable (lua_State *L) {$/;"	f	file:
db_getregistry	liblua/ldblib.c	/^static int db_getregistry (lua_State *L) {$/;"	f	file:
db_getupvalue	liblua/ldblib.c	/^static int db_getupvalue (lua_State *L) {$/;"	f	file:
db_getuservalue	liblua/ldblib.c	/^static int db_getuservalue (lua_State *L) {$/;"	f	file:
db_sethook	liblua/ldblib.c	/^static int db_sethook (lua_State *L) {$/;"	f	file:
db_setlocal	liblua/ldblib.c	/^static int db_setlocal (lua_State *L) {$/;"	f	file:
db_setmetatable	liblua/ldblib.c	/^static int db_setmetatable (lua_State *L) {$/;"	f	file:
db_setupvalue	liblua/ldblib.c	/^static int db_setupvalue (lua_State *L) {$/;"	f	file:
db_setuservalue	liblua/ldblib.c	/^static int db_setuservalue (lua_State *L) {$/;"	f	file:
db_traceback	liblua/ldblib.c	/^static int db_traceback (lua_State *L) {$/;"	f	file:
db_upvalueid	liblua/ldblib.c	/^static int db_upvalueid (lua_State *L) {$/;"	f	file:
db_upvaluejoin	liblua/ldblib.c	/^static int db_upvaluejoin (lua_State *L) {$/;"	f	file:
dbg	client/lualibs/html_dumplib.lua	/^local function dbg(args)$/;"	f
dbg	client/scripts/14araw.lua	/^function dbg(args)$/;"	f
dbg	client/scripts/dumptoemul.lua	/^function dbg(args)$/;"	f
dbg	client/scripts/emul2html.lua	/^function dbg(args)$/;"	f
dbg	client/scripts/formatMifare.lua	/^function dbg(args)$/;"	f
dbg	client/scripts/htmldump.lua	/^function dbg(args)$/;"	f
dbg	client/scripts/mifare_autopwn.lua	/^function dbg(args)$/;"	f
dbg	client/scripts/remagic.lua	/^function dbg(args)$/;"	f
dbg	client/scripts/test_t55x7_psk.lua	/^function dbg(args)$/;"	f
dbg	client/scripts/tnp3dump.lua	/^function dbg(args)$/;"	f
dbg	client/scripts/tnp3sim.lua	/^function dbg(args)$/;"	f
dbg	client/scripts/tracetest.lua	/^function dbg(args)$/;"	f
dbg	fpga/fpga_hf.v	/^	output dbg$/;"	p
dbg	fpga/fpga_lf.v	/^	output dbg$/;"	p
dbg	fpga/hi_iso14443a.v	/^    output dbg;$/;"	p
dbg	fpga/hi_read_rx_xcorr.v	/^    output dbg;$/;"	p
dbg	fpga/hi_read_tx.v	/^    output dbg;$/;"	p
dbg	fpga/hi_simulate.v	/^    output dbg;$/;"	p
dbg	fpga/lo_read.v	/^	output dbg,$/;"	p
dbg	fpga/lo_simulate.v	/^    output dbg;$/;"	p
dbg	fpga/testbed_hi_read_tx.v	/^	wire dbg;$/;"	n
dbg	fpga/testbed_hi_simulate.v	/^	wire dbg;$/;"	n
dbg	fpga/testbed_lo_read.v	/^	wire dbg;$/;"	n
dbg	fpga/testbed_lo_simulate.v	/^	wire dbg;$/;"	n
dblib	liblua/ldblib.c	/^static const luaL_Reg dblib[] = {$/;"	v	file:
dc	client/lualibs/htmlskel.lua	/^	function dc(x){return document.createElement(x)}$/;"	f
dcb	client/uart.c	/^  DCB dcb;          \/\/ Device control settings$/;"	m	struct:__anon53	file:
deadvalue	liblua/lobject.h	/^#define deadvalue(/;"	d
debug	client/scripts/ndef_dump.lua	/^function debug(...)$/;"	f
debug_print	client/loclass/ikeys.c	/^static int debug_print = 0;$/;"	v	file:
decimation	include/usb_cmd.h	/^	uint8_t decimation;$/;"	m	struct:__anon65
decode_ber_tlv_item	armsrc/tlv.c	/^int decode_ber_tlv_item(uint8_t* data, tlvtag* returnedtag)$/;"	f
decpoint	liblua/llex.h	/^  char decpoint;  \/* locale decimal point *\/$/;"	m	struct:LexState
deep_counter	fpga/hi_iso14443a.v	/^reg [2:0] deep_counter;$/;"	r
deep_modulation	fpga/hi_iso14443a.v	/^reg deep_modulation;$/;"	r
des3_context	client/loclass/des.h	/^des3_context;$/;"	t	typeref:struct:__anon44
des3_crypt_cbc	client/loclass/des.c	/^int des3_crypt_cbc( des3_context *ctx,$/;"	f
des3_crypt_ecb	client/loclass/des.c	/^int des3_crypt_ecb( des3_context *ctx,$/;"	f
des3_set2key	client/loclass/des.c	/^static void des3_set2key( uint32_t esk[96],$/;"	f	file:
des3_set2key_dec	client/loclass/des.c	/^int des3_set2key_dec( des3_context *ctx, const unsigned char key[DES_KEY_SIZE * 2] )$/;"	f
des3_set2key_enc	client/loclass/des.c	/^int des3_set2key_enc( des3_context *ctx, const unsigned char key[DES_KEY_SIZE * 2] )$/;"	f
des3_set3key	client/loclass/des.c	/^static void des3_set3key( uint32_t esk[96],$/;"	f	file:
des3_set3key_dec	client/loclass/des.c	/^int des3_set3key_dec( des3_context *ctx, const unsigned char key[DES_KEY_SIZE * 3] )$/;"	f
des3_set3key_enc	client/loclass/des.c	/^int des3_set3key_enc( des3_context *ctx, const unsigned char key[DES_KEY_SIZE * 3] )$/;"	f
des3_test_buf	client/loclass/des.c	/^static const unsigned char des3_test_buf[8] =$/;"	v	file:
des3_test_cbc_dec	client/loclass/des.c	/^static const unsigned char des3_test_cbc_dec[3][8] =$/;"	v	file:
des3_test_cbc_enc	client/loclass/des.c	/^static const unsigned char des3_test_cbc_enc[3][8] =$/;"	v	file:
des3_test_ecb_dec	client/loclass/des.c	/^static const unsigned char des3_test_ecb_dec[3][8] =$/;"	v	file:
des3_test_ecb_enc	client/loclass/des.c	/^static const unsigned char des3_test_ecb_enc[3][8] =$/;"	v	file:
des3_test_iv	client/loclass/des.c	/^static const unsigned char des3_test_iv[8] =$/;"	v	file:
des3_test_keys	client/loclass/des.c	/^static const unsigned char des3_test_keys[24] =$/;"	v	file:
des_checkParity	client/loclass/ikeys.c	/^void des_checkParity(uint8_t* key)$/;"	f
des_context	client/loclass/des.h	/^des_context;$/;"	t	typeref:struct:__anon43
des_crypt_cbc	client/loclass/des.c	/^int des_crypt_cbc( des_context *ctx,$/;"	f
des_crypt_ecb	client/loclass/des.c	/^int des_crypt_ecb( des_context *ctx,$/;"	f
des_dec	armsrc/des.c	/^void des_dec(void* out, const void* in, const uint8_t* key){$/;"	f
des_enc	armsrc/des.c	/^void des_enc(void* out, const void* in, const void* key){$/;"	f
des_f	armsrc/des.c	/^uint32_t des_f(uint32_t r, uint8_t* kr){$/;"	f
des_getParityBitFromKey	client/loclass/ikeys.c	/^bool des_getParityBitFromKey(uint8_t key)$/;"	f
des_key_check_key_parity	client/loclass/des.c	/^int des_key_check_key_parity( const unsigned char key[DES_KEY_SIZE] )$/;"	f
des_key_check_weak	client/loclass/des.c	/^int des_key_check_weak( const unsigned char key[DES_KEY_SIZE] )$/;"	f
des_key_set_parity	client/loclass/des.c	/^void des_key_set_parity( unsigned char key[DES_KEY_SIZE] )$/;"	f
des_self_test	client/loclass/des.c	/^int des_self_test( int verbose )$/;"	f
des_setkey	client/loclass/des.c	/^static void des_setkey( uint32_t SK[32], const unsigned char key[DES_KEY_SIZE] )$/;"	f	file:
des_setkey_dec	client/loclass/des.c	/^int des_setkey_dec( des_context *ctx, const unsigned char key[DES_KEY_SIZE] )$/;"	f
des_setkey_enc	client/loclass/des.c	/^int des_setkey_enc( des_context *ctx, const unsigned char key[DES_KEY_SIZE] )$/;"	f
desc	client/cmdhf14a.c	/^	char* desc;$/;"	m	struct:__anon28	file:
desc	client/cmdhf15.c	/^	char* desc;$/;"	m	struct:__anon29	file:
description	armsrc/emvdataels.c	/^char description[255];$/;"	m	struct:__anon4	file:
description	armsrc/emvdataels.h	/^    char description[255];$/;"	m	struct:__anon5
desdecrypt_iclass	client/loclass/elite_crack.c	/^void desdecrypt_iclass(uint8_t *iclass_key, uint8_t *input, uint8_t *output)$/;"	f
desencrypt_iclass	client/loclass/elite_crack.c	/^void desencrypt_iclass(uint8_t *iclass_key, uint8_t *input, uint8_t *output)$/;"	f
detectFSKClk	common/lfdemod.c	/^uint8_t detectFSKClk(uint8_t *BitStream, size_t size, uint8_t fcHigh, uint8_t fcLow)$/;"	f
devDescriptor	common/usb_cdc.c	/^const char devDescriptor[] = {$/;"	v
devh	client/hid-flasher/proxusb.c	/^usb_dev_handle *devh = NULL;$/;"	v
discharge2anyreg	liblua/lcode.c	/^static void discharge2anyreg (FuncState *fs, expdesc *e) {$/;"	f	file:
discharge2reg	liblua/lcode.c	/^static void discharge2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
dischargejpc	liblua/lcode.c	/^static void dischargejpc (FuncState *fs) {$/;"	f	file:
disconnect	client/scripts/14araw.lua	/^function disconnect()$/;"	f
displayresults	client/scripts/mfkeys.lua	/^local function displayresults(results)$/;"	f
dist	armsrc/crapto1.c	/^static uint16_t *dist = 0;$/;"	v	file:
dist	client/nonce2key/crapto1.c	/^static uint16_t *dist = 0;$/;"	v	file:
dist	tools/mfkey/crapto1.c	/^static uint16_t *dist = 0;$/;"	v	file:
dist	tools/nonce2key/crapto1.c	/^static uint16_t *dist = 0;$/;"	v	file:
dist_nt	armsrc/iso14443a.c	/^int32_t dist_nt(uint32_t nt1, uint32_t nt2) {$/;"	f
div_clk_	fpga/clk_divider.v	/^	reg div_clk_;$/;"	r
div_cnt_	fpga/clk_divider.v	/^	reg [7:0] div_cnt_ = 0;$/;"	r
div_key	client/loclass/ikeys.c	/^	uint8_t div_key[8];$/;"	m	struct:__anon46	file:
diversifyKey	client/loclass/ikeys.c	/^void diversifyKey(uint8_t csn[8], uint8_t key[8], uint8_t div_key[8])$/;"	f
divisor	fpga/fpga_lf.v	/^reg [7:0] divisor;$/;"	r
divisor	fpga/lo_simulate.v	/^	 input [7:0] divisor;$/;"	p
divisor	fpga/testbed_lo_read.v	/^	reg [15:0] divisor;$/;"	r
divisor	include/usb_cmd.h	/^	int divisor;$/;"	m	struct:__anon65
doIClassSimulation	armsrc/iclass.c	/^int doIClassSimulation(uint8_t csn[], int breakAfterMacReceived, uint8_t *reader_mac_buf)$/;"	f
doKeyTests	client/loclass/ikeys.c	/^int doKeyTests(uint8_t debuglevel)$/;"	f
doMAC	client/loclass/cipher.c	/^void doMAC(uint8_t *cc_nr_p, int length, uint8_t *div_key_p, uint8_t mac[4])$/;"	f
doTestsWithKnownInputs	client/loclass/ikeys.c	/^int doTestsWithKnownInputs()$/;"	f
doargs	liblua/luac.c	/^static int doargs(int argc, char* argv[])$/;"	f	file:
docall	liblua/lua.c	/^static int docall (lua_State *L, int narg, int nres) {$/;"	f	file:
doendian	client/pm3_binlib.c	/^static int doendian(int c)$/;"	f	file:
dofile	liblua/lua.c	/^static int dofile (lua_State *L, const char *name) {$/;"	f	file:
dofilecont	liblua/lbaselib.c	/^static int dofilecont (lua_State *L) {$/;"	f	file:
dojump	liblua/lvm.c	/^#define dojump(/;"	d	file:
dolibrary	liblua/lua.c	/^static int dolibrary (lua_State *L, const char *name) {$/;"	f	file:
domatch	tools/findbits.py	/^def domatch(binary,number):$/;"	f
done	fpga/go.bat	/^:done$/;"	l
donextjump	liblua/lvm.c	/^#define donextjump(/;"	d	file:
dooptions	liblua/loadlib.c	/^static void dooptions (lua_State *L, int n) {$/;"	f	file:
dostring	liblua/lua.c	/^static int dostring (lua_State *L, const char *s, const char *name) {$/;"	f	file:
doswap	client/pm3_binlib.c	/^static void doswap(int swap, void *p, size_t n)$/;"	f	file:
dothecall	liblua/lgc.c	/^static void dothecall (lua_State *L, void *ud) {$/;"	f	file:
dotty	liblua/lua.c	/^static void dotty (lua_State *L) {$/;"	f	file:
download_lib	tools/install-gnuarm4.sh	/^  function download_lib {$/;"	f
download_signed_lib	tools/install-gnuarm4.sh	/^  function download_signed_lib {$/;"	f
dropPosition	armsrc/iclass.c	/^    int     dropPosition;$/;"	m	struct:__anon8	file:
dummy	liblua/lobject.h	/^  L_Umaxalign dummy;  \/* ensures maximum alignment for `local' udata *\/$/;"	m	union:Udata
dummy	liblua/lobject.h	/^  L_Umaxalign dummy;  \/* ensures maximum alignment for strings *\/$/;"	m	union:TString
dummynode	liblua/ltable.c	/^#define dummynode	/;"	d	file:
dummynode_	liblua/ltable.c	/^static const Node dummynode_ = {$/;"	v	file:
dump	client/scripts/mifare_autopwn.lua	/^function dump(uid)$/;"	f
dumpAllHelp	client/proxmark3.c	/^static void dumpAllHelp(int markdown)$/;"	f	file:
dumpCommandsRecursive	client/cmdparser.c	/^void dumpCommandsRecursive(const command_t cmds[], int markdown)$/;"	f
dumpdata	client/loclass/elite_crack.h	/^}dumpdata;$/;"	t	typeref:struct:__anon45
dumping	liblua/luac.c	/^static int dumping=1;			\/* dump bytecodes? *\/$/;"	v	file:
dumptofile	client/scripts/mfkeys.lua	/^local function dumptofile(results)$/;"	f
dwDTERRate	common/usb_cdc.c	/^	unsigned int dwDTERRate;$/;"	m	struct:__anon55	file:
dyd	liblua/ldo.c	/^  Dyndata dyd;  \/* dynamic structures used by the parser *\/$/;"	m	struct:SParser	file:
dyd	liblua/llex.h	/^  struct Dyndata *dyd;  \/* dynamic structures used by the parser *\/$/;"	m	struct:LexState	typeref:struct:LexState::Dyndata
e_ehsize	client/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:__anon31
e_ehsize	client/hid-flasher/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:__anon35
e_entry	client/elf.h	/^	uint32_t e_entry;$/;"	m	struct:__anon31
e_entry	client/hid-flasher/elf.h	/^	uint32_t e_entry;$/;"	m	struct:__anon35
e_flags	client/elf.h	/^	uint32_t e_flags;$/;"	m	struct:__anon31
e_flags	client/hid-flasher/elf.h	/^	uint32_t e_flags;$/;"	m	struct:__anon35
e_ident	client/elf.h	/^	unsigned char   e_ident[EI_NIDENT];$/;"	m	struct:__anon31
e_ident	client/hid-flasher/elf.h	/^	unsigned char   e_ident[EI_NIDENT];$/;"	m	struct:__anon35
e_machine	client/elf.h	/^	uint16_t e_machine;$/;"	m	struct:__anon31
e_machine	client/hid-flasher/elf.h	/^	uint16_t e_machine;$/;"	m	struct:__anon35
e_permtab	armsrc/des.c	/^const uint8_t e_permtab[] ={$/;"	v
e_phentsize	client/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:__anon31
e_phentsize	client/hid-flasher/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:__anon35
e_phnum	client/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:__anon31
e_phnum	client/hid-flasher/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:__anon35
e_phoff	client/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:__anon31
e_phoff	client/hid-flasher/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:__anon35
e_shentsize	client/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:__anon31
e_shentsize	client/hid-flasher/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:__anon35
e_shnum	client/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:__anon31
e_shnum	client/hid-flasher/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:__anon35
e_shoff	client/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:__anon31
e_shoff	client/hid-flasher/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:__anon35
e_shtrndx	client/elf.h	/^	uint16_t e_shtrndx;$/;"	m	struct:__anon31
e_shtrndx	client/hid-flasher/elf.h	/^	uint16_t e_shtrndx;$/;"	m	struct:__anon35
e_type	client/elf.h	/^	uint16_t e_type;$/;"	m	struct:__anon31
e_type	client/hid-flasher/elf.h	/^	uint16_t e_type;$/;"	m	struct:__anon35
e_version	client/elf.h	/^	uint32_t e_version;$/;"	m	struct:__anon31
e_version	client/hid-flasher/elf.h	/^	uint32_t e_version;$/;"	m	struct:__anon35
edge_state	fpga/lf_edge_detect.v	/^	output edge_state, output edge_toggle);$/;"	p
edge_state	fpga/lo_edge_detect.v	/^wire edge_state, edge_toggle;$/;"	n
edge_state	fpga/tests/tb_lf_edge_detect.v	/^	wire edge_state;$/;"	n
edge_toggle	fpga/lo_edge_detect.v	/^wire edge_state, edge_toggle;$/;"	n
edge_toggle	fpga/tests/tb_lf_edge_detect.v	/^	wire edge_toggle;$/;"	n
elf_ident	client/flash.c	/^static const uint8_t elf_ident[] = {$/;"	v	file:
elf_ident	client/hid-flasher/flash.c	/^static const uint8_t elf_ident[] = {$/;"	v	file:
emit	armsrc/legicrf.c	/^static void emit(int bit)$/;"	f	file:
emlCheckValBl	armsrc/mifareutil.c	/^int emlCheckValBl(int blockNum) {$/;"	f
emlClearMem	armsrc/mifareutil.c	/^void emlClearMem(void) {$/;"	f
emlGetKey	armsrc/mifareutil.c	/^uint64_t emlGetKey(int sectorNum, int keyType) {$/;"	f
emlGetMem	armsrc/mifareutil.c	/^void emlGetMem(uint8_t *data, int blockNum, int blocksCount) {$/;"	f
emlGetMemBt	armsrc/mifareutil.c	/^void emlGetMemBt(uint8_t *data, int bytePtr, int byteCount) {$/;"	f
emlGetValBl	armsrc/mifareutil.c	/^int emlGetValBl(uint32_t *blReg, uint8_t *blBlock, int blockNum) {$/;"	f
emlSetMem	armsrc/mifareutil.c	/^void emlSetMem(uint8_t *data, int blockNum, int blocksCount) {$/;"	f
emlSetValBl	armsrc/mifareutil.c	/^int emlSetValBl(uint32_t blReg, uint8_t blBlock, int blockNum) {$/;"	f
emulator_memory	armsrc/BigBuf.c	/^static uint8_t *emulator_memory = NULL;$/;"	v	file:
emv_computecryptogram	armsrc/emvutil.c	/^int emv_computecryptogram(uint8_t* UDOL, uint8_t UDOL_len, void *data)$/;"	f
emv_decodeAFL	armsrc/emvutil.c	/^int emv_decodeAFL(uint8_t* AFL, uint8_t AFLlen )$/;"	f
emv_decodeAIP	armsrc/emvutil.c	/^int emv_decodeAIP(uint8_t* AIP)$/;"	f
emv_decodeCVM	armsrc/emvutil.c	/^int emv_decodeCVM(uint8_t* CVM, uint8_t CVMlen)$/;"	f
emv_decode_field	armsrc/emvutil.c	/^int emv_decode_field(uint8_t* inputfield,uint16_t inputlength, emvcard *result)$/;"	f
emv_emvcard_decode_tag	armsrc/emvutil.c	/^int emv_emvcard_decode_tag(tlvtag* inputtag, emvcard* currentcard)$/;"	f
emv_generateAC	armsrc/emvutil.c	/^int emv_generateAC(uint8_t refcontrolparam, uint8_t* cdolinput, uint8_t cdolinputlen, void* data)$/;"	f
emv_generateDOL	armsrc/emvutil.c	/^int emv_generateDOL(uint8_t* DOL, uint8_t DOLlen,emvcard* currentcard,uint8_t* DOLoutput, uint8_t* DOLoutputlen)$/;"	f
emv_generatetemplate	armsrc/emvutil.c	/^int emv_generatetemplate(uint8_t* templateval,emvcard* currentcard, uint8_t* returnedval, uint8_t* returnedlen,uint8_t numtags, ...)$/;"	f
emv_getchallenge	armsrc/emvutil.c	/^int emv_getchallenge(void *data)$/;"	f
emv_getprocessingoptions	armsrc/emvutil.c	/^int emv_getprocessingoptions(uint8_t* pdol, uint8_t pdol_len, void* data)$/;"	f
emv_lookuptag	armsrc/emvutil.c	/^int emv_lookuptag(uint8_t* tag, emvcard *currentcard, uint8_t* outputval, uint8_t* outputvallen)$/;"	f
emv_loopback	armsrc/emvutil.c	/^int emv_loopback(uint8_t* transData , uint8_t transData_len, void *data)$/;"	f
emv_printtag	armsrc/emvutil.c	/^int emv_printtag(uint8_t* selected_tag, emvcard* inputcard, uint8_t* outputstring, uint8_t* outputlen)$/;"	f
emv_readrecord	armsrc/emvutil.c	/^int emv_readrecord(uint8_t recordnumber, uint8_t sfi, void* data)$/;"	f
emv_select	armsrc/emvutil.c	/^int emv_select(uint8_t* AID, uint8_t AID_len, void* data)$/;"	f
emvcard	armsrc/emvcard.h	/^}emvcard;$/;"	t	typeref:struct:__anon2
emvsnoop	armsrc/emvutil.c	/^void emvsnoop()$/;"	f
enabled	fpga/lf_edge_detect.v	/^	wire enabled =$/;"	n
encode4Bits	armsrc/iclass.c	/^static uint8_t encode4Bits(const uint8_t b)$/;"	f	file:
encode_ber_tlv_item	armsrc/tlv.c	/^int encode_ber_tlv_item(uint8_t* tag, uint8_t taglen, uint8_t* data, uint32_t datalen, uint8_t* outputtag, uint32_t* outputtaglen)$/;"	f
endTime	armsrc/iso14443a.h	/^	uint32_t startTime, endTime;$/;"	m	struct:__anon17
endTime	armsrc/iso14443a.h	/^	uint32_t startTime, endTime;$/;"	m	struct:__anon20
end_addr	bootrom/bootrom.c	/^unsigned int start_addr, end_addr, bootrom_unlocked;$/;"	v
end_capture	liblua/lstrlib.c	/^static const char *end_capture (MatchState *ms, const char *s,$/;"	f	file:
endpc	liblua/lobject.h	/^  int endpc;    \/* first point where variable is dead *\/$/;"	m	struct:LocVar
endsWith	client/cmdscript.c	/^bool endsWith (char* base, char* str) {$/;"	f
enter_bootloader	client/flash.c	/^static int enter_bootloader(char *serial_port_name)$/;"	f	file:
enter_bootloader	client/hid-flasher/flash.c	/^static int enter_bootloader(void)$/;"	f	file:
enterblock	liblua/lparser.c	/^static void enterblock (FuncState *fs, BlockCnt *bl, lu_byte isloop) {$/;"	f	file:
enterlevel	liblua/lparser.c	/^static void enterlevel (LexState *ls) {$/;"	f	file:
entersweep	liblua/lgc.c	/^static int entersweep (lua_State *L) {$/;"	f	file:
env	liblua/lobject.h	/^    struct Table *env;$/;"	m	struct:Udata::__anon69	typeref:struct:Udata::__anon69::Table
envn	liblua/llex.h	/^  TString *envn;  \/* environment variable name *\/$/;"	m	struct:LexState
ephemeron	liblua/lstate.h	/^  GCObject *ephemeron;  \/* list of ephemeron tables (weak keys) *\/$/;"	m	struct:global_State
eqshrstr	liblua/lstring.h	/^#define eqshrstr(/;"	d
equalobj	liblua/lvm.h	/^#define equalobj(/;"	d
errfile	liblua/lauxlib.c	/^static int errfile (lua_State *L, const char *what, int fnameindex) {$/;"	f	file:
errfunc	liblua/lstate.h	/^  ptrdiff_t errfunc;  \/* current error handling function (stack index) *\/$/;"	m	struct:lua_State
error	liblua/lundump.c	/^static l_noret error(LoadState* S, const char* why)$/;"	f	file:
errorJmp	liblua/lstate.h	/^  struct lua_longjmp *errorJmp;  \/* current error recover point *\/$/;"	m	struct:lua_State	typeref:struct:lua_State::lua_longjmp
errorString15693	client/lualibs/hf_reader.lua	/^local function errorString15693(number)$/;"	f
error_expected	liblua/lparser.c	/^static l_noret error_expected (LexState *ls, int token) {$/;"	f	file:
error_occured	client/hid-flasher/proxusb.c	/^unsigned char error_occured = 0;$/;"	v
errorlimit	liblua/lparser.c	/^static l_noret errorlimit (FuncState *fs, int limit, const char *what) {$/;"	f	file:
escerror	liblua/llex.c	/^static void escerror (LexState *ls, int *c, int n, const char *msg) {$/;"	f	file:
even	armsrc/crapto1.h	/^struct Crypto1State {uint32_t odd, even;};$/;"	m	struct:Crypto1State
even	client/nonce2key/crapto1.h	/^struct Crypto1State {uint32_t odd, even;};$/;"	m	struct:Crypto1State
even	tools/mfkey/crapto1.h	/^struct Crypto1State {uint32_t odd, even;};$/;"	m	struct:Crypto1State
even	tools/nonce2key/crapto1.h	/^struct Crypto1State {uint32_t odd, even;};$/;"	m	struct:Crypto1State
event	liblua/lua.h	/^  int event;$/;"	m	struct:lua_Debug
exp1	liblua/lparser.c	/^static int exp1 (LexState *ls) {$/;"	f	file:
exp2reg	liblua/lcode.c	/^static void exp2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
expdesc	liblua/lparser.h	/^typedef struct expdesc {$/;"	s
expdesc	liblua/lparser.h	/^} expdesc;$/;"	t	typeref:struct:expdesc
expkind	liblua/lparser.h	/^} expkind;$/;"	t	typeref:enum:__anon75
explist	liblua/lparser.c	/^static int explist (LexState *ls, expdesc *v) {$/;"	f	file:
expr	liblua/lparser.c	/^static void expr (LexState *ls, expdesc *v) {$/;"	f	file:
exprstat	liblua/lparser.c	/^static void exprstat (LexState *ls) {$/;"	f	file:
extend_table	armsrc/crapto1.c	/^extend_table(uint32_t *tbl, uint32_t **end, int bit, int m1, int m2, uint32_t in)$/;"	f	file:
extend_table	client/nonce2key/crapto1.c	/^extend_table(uint32_t *tbl, uint32_t **end, int bit, int m1, int m2, uint32_t in)$/;"	f	file:
extend_table	tools/mfkey/crapto1.c	/^extend_table(uint32_t *tbl, uint32_t **end, int bit, int m1, int m2, uint32_t in)$/;"	f	file:
extend_table	tools/nonce2key/crapto1.c	/^extend_table(uint32_t *tbl, uint32_t **end, int bit, int m1, int m2, uint32_t in)$/;"	f	file:
extend_table_simple	armsrc/crapto1.c	/^static inline void extend_table_simple(uint32_t *tbl, uint32_t **end, int bit)$/;"	f	file:
extend_table_simple	client/nonce2key/crapto1.c	/^extend_table_simple(uint32_t *tbl, uint32_t **end, int bit)$/;"	f	file:
extend_table_simple	tools/mfkey/crapto1.c	/^static inline void extend_table_simple(uint32_t *tbl, uint32_t **end, int bit)$/;"	f	file:
extend_table_simple	tools/nonce2key/crapto1.c	/^extend_table_simple(uint32_t *tbl, uint32_t **end, int bit)$/;"	f	file:
extra	liblua/lobject.h	/^    lu_byte extra;  \/* reserved words for short strings; "has hash" for longs *\/$/;"	m	struct:TString::__anon68
extra	liblua/lstate.h	/^  ptrdiff_t extra;$/;"	m	struct:CallInfo
f	liblua/lauxlib.c	/^  FILE *f;  \/* file being read *\/$/;"	m	struct:LoadF	file:
f	liblua/lauxlib.h	/^  FILE *f;  \/* stream (NULL for incompletely created streams) *\/$/;"	m	struct:luaL_Stream
f	liblua/lobject.h	/^  lua_CFunction f; \/* light C functions *\/$/;"	m	union:Value
f	liblua/lobject.h	/^  lua_CFunction f;$/;"	m	struct:CClosure
f	liblua/lparser.h	/^  Proto *f;  \/* current function header *\/$/;"	m	struct:FuncState
f	liblua/lparser.h	/^  int f;  \/* patch list of `exit when false' *\/$/;"	m	struct:expdesc
f_call	liblua/lapi.c	/^static void f_call (lua_State *L, void *ud) {$/;"	f	file:
f_flush	liblua/liolib.c	/^static int f_flush (lua_State *L) {$/;"	f	file:
f_gc	liblua/liolib.c	/^static int f_gc (lua_State *L) {$/;"	f	file:
f_lines	liblua/liolib.c	/^static int f_lines (lua_State *L) {$/;"	f	file:
f_luaopen	liblua/lstate.c	/^static void f_luaopen (lua_State *L, void *ud) {$/;"	f	file:
f_parser	liblua/ldo.c	/^static void f_parser (lua_State *L, void *ud) {$/;"	f	file:
f_read	liblua/liolib.c	/^static int f_read (lua_State *L) {$/;"	f	file:
f_seek	liblua/liolib.c	/^static int f_seek (lua_State *L) {$/;"	f	file:
f_setvbuf	liblua/liolib.c	/^static int f_setvbuf (lua_State *L) {$/;"	f	file:
f_tostring	liblua/liolib.c	/^static int f_tostring (lua_State *L) {$/;"	f	file:
f_write	liblua/liolib.c	/^static int f_write (lua_State *L) {$/;"	f	file:
fastfwd	armsrc/crapto1.c	/^static uint32_t fastfwd[2][8] = {$/;"	v	file:
fastfwd	client/nonce2key/crapto1.c	/^static uint32_t fastfwd[2][8] = {$/;"	v	file:
fastfwd	tools/mfkey/crapto1.c	/^static uint32_t fastfwd[2][8] = {$/;"	v	file:
fastfwd	tools/nonce2key/crapto1.c	/^static uint32_t fastfwd[2][8] = {$/;"	v	file:
fasttm	liblua/ltm.h	/^#define fasttm(/;"	d
fatal	liblua/luac.c	/^static void fatal(const char* message)$/;"	f	file:
fc	armsrc/lfops.c	/^static void fc(int c, int *n) {$/;"	f	file:
fc_div_2	fpga/hi_read_rx_xcorr.v	/^reg fc_div_2;$/;"	r
fc_div_4	fpga/hi_read_rx_xcorr.v	/^reg fc_div_4;$/;"	r
fc_div_8	fpga/hi_read_rx_xcorr.v	/^reg fc_div_8;$/;"	r
fd	client/uart.c	/^  int fd;           \/\/ Serial port file descriptor$/;"	m	struct:__anon52	file:
fdt_counter	fpga/hi_iso14443a.v	/^reg [10:0] fdt_counter;$/;"	r
fdt_elapsed	fpga/hi_iso14443a.v	/^reg fdt_indicator, fdt_elapsed;$/;"	r
fdt_indicator	fpga/hi_iso14443a.v	/^reg fdt_indicator, fdt_elapsed;$/;"	r
field	liblua/lparser.c	/^static void field (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
fieldargs	liblua/lbitlib.c	/^static int fieldargs (lua_State *L, int farg, int *width) {$/;"	f	file:
fieldlength	armsrc/tlv.h	/^    uint16_t fieldlength;$/;"	m	struct:__anon25
fieldsel	liblua/lparser.c	/^static void fieldsel (LexState *ls, expdesc *v) {$/;"	f	file:
fileExists	client/loclass/fileutils.c	/^int fileExists(const char *filename) {$/;"	f
filename	client/flash.h	/^	const char *filename;$/;"	m	struct:__anon33
filename	client/hid-flasher/flash.h	/^	const char *filename;$/;"	m	struct:__anon37
fill_lut	armsrc/crapto1.c	/^static void __attribute__((constructor)) fill_lut()$/;"	f	file:
fill_lut	client/nonce2key/crapto1.c	/^static void __attribute__((constructor)) fill_lut()$/;"	f	file:
fill_lut	tools/mfkey/crapto1.c	/^static void __attribute__((constructor)) fill_lut()$/;"	f	file:
fill_lut	tools/nonce2key/crapto1.c	/^static void __attribute__((constructor)) fill_lut()$/;"	f	file:
filter	armsrc/crapto1.c	/^#define filter(/;"	d	file:
filter	armsrc/crapto1.h	/^static inline int filter(uint32_t const x)$/;"	f
filter	client/nonce2key/crapto1.c	/^#define filter(/;"	d	file:
filter	client/nonce2key/crapto1.h	/^static inline int filter(uint32_t const x)$/;"	f
filter	tools/mfkey/crapto1.c	/^#define filter(/;"	d	file:
filter	tools/mfkey/crapto1.h	/^static inline int filter(uint32_t const x)$/;"	f
filter	tools/nonce2key/crapto1.c	/^#define filter(/;"	d	file:
filter	tools/nonce2key/crapto1.h	/^static inline int filter(uint32_t const x)$/;"	f
filterlut	armsrc/crapto1.c	/^static uint8_t filterlut[1 << 20];$/;"	v	file:
filterlut	client/nonce2key/crapto1.c	/^static uint8_t filterlut[1 << 20];$/;"	v	file:
filterlut	tools/mfkey/crapto1.c	/^static uint8_t filterlut[1 << 20];$/;"	v	file:
filterlut	tools/nonce2key/crapto1.c	/^static uint8_t filterlut[1 << 20];$/;"	v	file:
fin	fpga/tests/tb_lf_edge_detect.v	/^	integer fin, fout_state, fout_toggle;$/;"	r
fin	fpga/tests/tb_lp20khz_1MSa_iir_filter.v	/^	integer fin, fout, r;$/;"	r
fin	fpga/tests/tb_min_max_tracker.v	/^	integer fin;$/;"	r
final_xor	include/crc.h	/^	uint32_t final_xor;$/;"	m	struct:crc
finalreport	liblua/lua.c	/^static void finalreport (lua_State *L, int status) {$/;"	f	file:
findProxmark	client/hid-flasher/proxusb.c	/^usb_dev_handle* findProxmark(int verbose, unsigned int *iface)$/;"	f
findbits	tools/findbits_test.py	/^import unittest, sys, findbits$/;"	i
findfield	liblua/lauxlib.c	/^static int findfield (lua_State *L, int objidx, int level) {$/;"	f	file:
findfile	liblua/loadlib.c	/^static const char *findfile (lua_State *L, const char *name,$/;"	f	file:
findgotos	liblua/lparser.c	/^static void findgotos (LexState *ls, Labeldesc *lb) {$/;"	f	file:
findindex	liblua/ltable.c	/^static int findindex (lua_State *L, Table *t, StkId key) {$/;"	f	file:
findlabel	liblua/lparser.c	/^static int findlabel (LexState *ls, int g) {$/;"	f	file:
findloader	liblua/loadlib.c	/^static void findloader (lua_State *L, const char *name) {$/;"	f	file:
findlocal	liblua/ldebug.c	/^static const char *findlocal (lua_State *L, CallInfo *ci, int n,$/;"	f	file:
findpcall	liblua/ldo.c	/^static CallInfo *findpcall (lua_State *L) {$/;"	f	file:
findsetreg	liblua/ldebug.c	/^static int findsetreg (Proto *p, int lastpc, int reg) {$/;"	f	file:
findvararg	liblua/ldebug.c	/^static const char *findvararg (CallInfo *ci, int n, StkId *pos) {$/;"	f	file:
finishCcall	liblua/ldo.c	/^static void finishCcall (lua_State *L) {$/;"	f	file:
finishpcall	liblua/lbaselib.c	/^static int finishpcall (lua_State *L, int status) {$/;"	f	file:
finobj	liblua/lstate.h	/^  GCObject *finobj;  \/* list of collectable objects with finalizers *\/$/;"	m	struct:global_State
fiq	bootrom/flash-reset.s	/^fiq:$/;"	l
firstgoto	liblua/lparser.c	/^  short firstgoto;  \/* index of first pending goto in this block *\/$/;"	m	struct:BlockCnt	file:
firstlabel	liblua/lparser.c	/^  short firstlabel;  \/* index of first label in this block *\/$/;"	m	struct:BlockCnt	file:
firstlocal	liblua/lparser.h	/^  int firstlocal;  \/* index of first local var (in Dyndata array) *\/$/;"	m	struct:FuncState
fixjump	liblua/lcode.c	/^static void fixjump (FuncState *fs, int pc, int dest) {$/;"	f	file:
flags	include/proxmark3.h	/^	} __attribute__((packed)) flags;$/;"	m	struct:common_area	typeref:struct:common_area::__anon62
flags	liblua/lobject.h	/^  lu_byte flags;  \/* 1<<p means tagmethod(p) is not present *\/$/;"	m	struct:Table
flash_file_t	client/flash.h	/^} flash_file_t;$/;"	t	typeref:struct:__anon33
flash_file_t	client/hid-flasher/flash.h	/^} flash_file_t;$/;"	t	typeref:struct:__anon37
flash_free	client/flash.c	/^void flash_free(flash_file_t *ctx)$/;"	f
flash_free	client/hid-flasher/flash.c	/^void flash_free(flash_file_t *ctx)$/;"	f
flash_load	client/flash.c	/^int flash_load(flash_file_t *ctx, const char *name, int can_write_bl)$/;"	f
flash_load	client/hid-flasher/flash.c	/^int flash_load(flash_file_t *ctx, const char *name, int can_write_bl)$/;"	f
flash_mode	bootrom/bootrom.c	/^static void flash_mode(int externally_entered)$/;"	f	file:
flash_seg_t	client/flash.h	/^} flash_seg_t;$/;"	t	typeref:struct:__anon32
flash_seg_t	client/hid-flasher/flash.h	/^} flash_seg_t;$/;"	t	typeref:struct:__anon36
flash_start_flashing	client/flash.c	/^int flash_start_flashing(int enable_bl_writes,char *serial_port_name)$/;"	f
flash_start_flashing	client/hid-flasher/flash.c	/^int flash_start_flashing(int enable_bl_writes)$/;"	f
flash_stop_flashing	client/flash.c	/^int flash_stop_flashing(void) {$/;"	f
flash_stop_flashing	client/hid-flasher/flash.c	/^int flash_stop_flashing(void) {$/;"	f
flash_write	client/flash.c	/^int flash_write(flash_file_t *ctx)$/;"	f
flash_write	client/hid-flasher/flash.c	/^int flash_write(flash_file_t *ctx)$/;"	f
flashstart	bootrom/flash-reset.s	/^flashstart:$/;"	l
flib	liblua/liolib.c	/^static const luaL_Reg flib[] = {$/;"	v	file:
flushAfterWrite	client/ui.c	/^int flushAfterWrite = 0;  \/\/buzzy$/;"	v
forbody	liblua/lparser.c	/^static void forbody (LexState *ls, int base, int line, int nvars, int isnum) {$/;"	f	file:
forlist	liblua/lparser.c	/^static void forlist (LexState *ls, TString *indexname) {$/;"	f	file:
fornum	liblua/lparser.c	/^static void fornum (LexState *ls, TString *varname, int line) {$/;"	f	file:
forstat	liblua/lparser.c	/^static void forstat (LexState *ls, int line) {$/;"	f	file:
forwardLink_data	armsrc/lfops.c	/^uint8_t forwardLink_data[64]; \/\/array of forwarded bits$/;"	v
forward_ptr	armsrc/lfops.c	/^uint8_t * forward_ptr; \/\/ptr for forward message preparation$/;"	v
foundKey	client/mifarehost.h	/^	int foundKey[2];$/;"	m	struct:__anon50
fout	fpga/tests/tb_lp20khz_1MSa_iir_filter.v	/^	integer fin, fout, r;$/;"	r
fout_high	fpga/tests/tb_lf_edge_detect.v	/^	integer fout_high, fout_highz, fout_lowz, fout_low, fout_min, fout_max;$/;"	r
fout_highz	fpga/tests/tb_lf_edge_detect.v	/^	integer fout_high, fout_highz, fout_lowz, fout_low, fout_min, fout_max;$/;"	r
fout_low	fpga/tests/tb_lf_edge_detect.v	/^	integer fout_high, fout_highz, fout_lowz, fout_low, fout_min, fout_max;$/;"	r
fout_lowz	fpga/tests/tb_lf_edge_detect.v	/^	integer fout_high, fout_highz, fout_lowz, fout_low, fout_min, fout_max;$/;"	r
fout_max	fpga/tests/tb_lf_edge_detect.v	/^	integer fout_high, fout_highz, fout_lowz, fout_low, fout_min, fout_max;$/;"	r
fout_max	fpga/tests/tb_min_max_tracker.v	/^	integer fout_min, fout_max;$/;"	r
fout_min	fpga/tests/tb_lf_edge_detect.v	/^	integer fout_high, fout_highz, fout_lowz, fout_low, fout_min, fout_max;$/;"	r
fout_min	fpga/tests/tb_min_max_tracker.v	/^	integer fout_min, fout_max;$/;"	r
fout_state	fpga/tests/tb_lf_edge_detect.v	/^	integer fin, fout_state, fout_toggle;$/;"	r
fout_toggle	fpga/tests/tb_lf_edge_detect.v	/^	integer fin, fout_state, fout_toggle;$/;"	r
fpga_hf	fpga/fpga_hf.v	/^module fpga_hf($/;"	m
fpga_lf	fpga/fpga_lf.v	/^module fpga_lf($/;"	m
frame_append_bit	armsrc/legicrf.c	/^static void frame_append_bit(struct legic_frame * const f, int bit)$/;"	f	file:
frame_clean	armsrc/legicrf.c	/^static void frame_clean(struct legic_frame * const f)$/;"	f	file:
frame_handle_tag	armsrc/legicrf.c	/^static void frame_handle_tag(struct legic_frame const * const f)$/;"	f	file:
frame_receive_rwd	armsrc/legicrf.c	/^static void frame_receive_rwd(struct legic_frame * const f, int bits, int crypt)$/;"	f	file:
frame_send_rwd	armsrc/legicrf.c	/^static void frame_send_rwd(uint32_t data, int bits)$/;"	f	file:
frame_send_tag	armsrc/legicrf.c	/^static void frame_send_tag(uint16_t response, int bits, int crypt)$/;"	f	file:
frealloc	liblua/lstate.h	/^  lua_Alloc frealloc;  \/* function to reallocate memory *\/$/;"	m	struct:global_State
free_buffer_pointer	armsrc/iso14443a.c	/^static uint8_t* free_buffer_pointer;$/;"	v	file:
freeexp	liblua/lcode.c	/^static void freeexp (FuncState *fs, expdesc *e) {$/;"	f	file:
freelist	liblua/lauxlib.c	/^#define freelist	/;"	d	file:
freeobj	liblua/lgc.c	/^static void freeobj (lua_State *L, GCObject *o) {$/;"	f	file:
freereg	liblua/lcode.c	/^static void freereg (FuncState *fs, int reg) {$/;"	f	file:
freereg	liblua/lparser.h	/^  lu_byte freereg;  \/* first free register *\/$/;"	m	struct:FuncState
freestack	liblua/lstate.c	/^static void freestack (lua_State *L) {$/;"	f	file:
fromstate	liblua/lstate.c	/^#define fromstate(/;"	d	file:
fs	liblua/llex.h	/^  struct FuncState *fs;  \/* current function (parser) *\/$/;"	m	struct:LexState	typeref:struct:LexState::FuncState
fsk_wave_demod	common/lfdemod.c	/^size_t fsk_wave_demod(uint8_t * dest, size_t size, uint8_t fchigh, uint8_t fclow)$/;"	f
fskdemod	common/lfdemod.c	/^int fskdemod(uint8_t *dest, size_t size, uint8_t rfLen, uint8_t invert, uint8_t fchigh, uint8_t fclow)$/;"	f
func	liblua/lapi.c	/^  StkId func;$/;"	m	struct:CallS	file:
func	liblua/lauxlib.h	/^  lua_CFunction func;$/;"	m	struct:luaL_Reg
func	liblua/lstate.h	/^  StkId func;  \/* function index in the stack *\/$/;"	m	struct:CallInfo
funcargs	liblua/lparser.c	/^static void funcargs (LexState *ls, expdesc *f, int line) {$/;"	f	file:
funcinfo	liblua/ldebug.c	/^static void funcinfo (lua_Debug *ar, Closure *cl) {$/;"	f	file:
funcname	liblua/lparser.c	/^static int funcname (LexState *ls, expdesc *v) {$/;"	f	file:
funcstat	liblua/lparser.c	/^static void funcstat (LexState *ls, int line) {$/;"	f	file:
fvalue	liblua/lobject.h	/^#define fvalue(/;"	d
fwd_bit_sz	armsrc/lfops.c	/^uint8_t fwd_bit_sz; \/\/forwardlink bit counter$/;"	v
fwd_write_ptr	armsrc/lfops.c	/^uint8_t * fwd_write_ptr; \/\/forwardlink bit pointer$/;"	v
g	liblua/lstate.c	/^  global_State g;$/;"	m	struct:LG	file:
g_debugMode	client/cmddata.c	/^uint8_t g_debugMode;$/;"	v
g_iofile	liblua/liolib.c	/^static int g_iofile (lua_State *L, const char *f, const char *mode) {$/;"	f	file:
g_read	liblua/liolib.c	/^static int g_read (lua_State *L, FILE *f, int first) {$/;"	f	file:
g_write	liblua/liolib.c	/^static int g_write (lua_State *L, FILE *f, int arg) {$/;"	f	file:
gc	liblua/lobject.h	/^  GCObject *gc;    \/* collectable objects *\/$/;"	m	union:Value
gch	liblua/lstate.h	/^  GCheader gch;  \/* common header *\/$/;"	m	union:GCObject
gch	liblua/lstate.h	/^#define gch(/;"	d
gckind	liblua/lstate.h	/^  lu_byte gckind;  \/* kind of GC running *\/$/;"	m	struct:global_State
gclist	liblua/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Proto
gclist	liblua/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Table
gclist	liblua/lstate.h	/^  GCObject *gclist;$/;"	m	struct:lua_State
gcmajorinc	liblua/lstate.h	/^  int gcmajorinc;  \/* pause between major collections (only in gen. mode) *\/$/;"	m	struct:global_State
gco2ccl	liblua/lstate.h	/^#define gco2ccl(/;"	d
gco2cl	liblua/lstate.h	/^#define gco2cl(/;"	d
gco2lcl	liblua/lstate.h	/^#define gco2lcl(/;"	d
gco2p	liblua/lstate.h	/^#define gco2p(/;"	d
gco2t	liblua/lstate.h	/^#define gco2t(/;"	d
gco2th	liblua/lstate.h	/^#define gco2th(/;"	d
gco2ts	liblua/lstate.h	/^#define gco2ts(/;"	d
gco2u	liblua/lstate.h	/^#define gco2u(/;"	d
gco2uv	liblua/lstate.h	/^#define gco2uv(/;"	d
gcpause	liblua/lstate.h	/^  int gcpause;  \/* size of pause between successive GCs *\/$/;"	m	struct:global_State
gcrunning	liblua/lstate.h	/^  lu_byte gcrunning;  \/* true if GC is running *\/$/;"	m	struct:global_State
gcstate	liblua/lstate.h	/^  lu_byte gcstate;  \/* state of garbage collector *\/$/;"	m	struct:global_State
gcstepmul	liblua/lstate.h	/^  int gcstepmul;  \/* GC `granularity' *\/$/;"	m	struct:global_State
gctm	liblua/loadlib.c	/^static int gctm (lua_State *L) {$/;"	f	file:
gcvalue	liblua/lobject.h	/^#define gcvalue(/;"	d
generationalcollection	liblua/lgc.c	/^static void generationalcollection (lua_State *L) {$/;"	f	file:
generic_reader	liblua/lbaselib.c	/^static const char *generic_reader (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getBMode	liblua/lopcodes.h	/^#define getBMode(/;"	d
getBlock	client/scripts/ndef_dump.lua	/^local function getBlock(block)$/;"	f
getByte	client/cmddata.c	/^uint8_t getByte(uint8_t bits_per_sample, BitstreamOut* b)$/;"	f
getCMode	liblua/lopcodes.h	/^#define getCMode(/;"	d
getCommand	client/cmdmain.c	/^int getCommand(UsbCommand* response)$/;"	f
getF	liblua/lauxlib.c	/^static const char *getF (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getFromGraphBuf	client/graph.c	/^size_t getFromGraphBuf(uint8_t *buff)$/;"	f
getHTML	client/lualibs/htmlskel.lua	/^local function getHTML(data)$/;"	f
getHiLo	common/lfdemod.c	/^int getHiLo(uint8_t *BitStream, size_t size, int *high, int *low, uint8_t fuzzHi, uint8_t fuzzLo)$/;"	f
getOpMode	liblua/lopcodes.h	/^#define getOpMode(/;"	d
getS	liblua/lauxlib.c	/^static const char *getS (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getSamplingConfig	armsrc/lfsampling.c	/^sample_config* getSamplingConfig()$/;"	f
getSixBitByte	client/loclass/ikeys.c	/^uint8_t getSixBitByte(uint64_t c, int n)$/;"	f
getStaticMetaObject	client/proxguiqt.moc.cpp	/^const QMetaObject &ProxGuiQT::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ProxGuiQT
getStaticMetaObject	client/proxguiqt.moc.cpp	/^const QMetaObject &ProxWidget::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ProxWidget
getTagInfo	client/cmdhf14a.c	/^char* getTagInfo(uint8_t uid) {$/;"	f
getTagInfo	client/cmdhf15.c	/^static char* getTagInfo(uint8_t *uid) {$/;"	f	file:
getTopLevelCommandTable	client/cmdmain.c	/^command_t* getTopLevelCommandTable()$/;"	f
getUID	client/cmdhf15.c	/^int getUID(uint8_t *buf) $/;"	f
get_equalTM	liblua/lvm.c	/^static const TValue *get_equalTM (lua_State *L, Table *mt1, Table *mt2,$/;"	f	file:
get_key_stream	armsrc/legicrf.c	/^static uint32_t get_key_stream(int skip, int count)$/;"	f	file:
get_prompt	liblua/lua.c	/^static const char *get_prompt (lua_State *L, int firstline) {$/;"	f	file:
get_proxmark_state	client/flash.c	/^static int get_proxmark_state(uint32_t *state)$/;"	f	file:
get_proxmark_state	client/hid-flasher/flash.c	/^static int get_proxmark_state(uint32_t *state)$/;"	f	file:
getarg	liblua/lopcodes.h	/^#define getarg(/;"	d
getargs	liblua/lua.c	/^static int getargs (lua_State *L, char **argv, int n) {$/;"	f	file:
getbinopr	liblua/lparser.c	/^static BinOpr getbinopr (int op) {$/;"	f	file:
getboolfield	liblua/loslib.c	/^static int getboolfield (lua_State *L, const char *key) {$/;"	f	file:
getcached	liblua/lvm.c	/^static Closure *getcached (Proto *p, UpVal **encup, StkId base) {$/;"	f	file:
getcode	liblua/lcode.h	/^#define getcode(/;"	d
getfield	liblua/loslib.c	/^static int getfield (lua_State *L, const char *key, int d) {$/;"	f	file:
getfreepos	liblua/ltable.c	/^static Node *getfreepos (Table *t) {$/;"	f	file:
getfuncline	liblua/ldebug.h	/^#define getfuncline(/;"	d
getfuncname	liblua/ldebug.c	/^static const char *getfuncname (lua_State *L, CallInfo *ci, const char **name) {$/;"	f	file:
gethooktable	liblua/ldblib.c	/^#define gethooktable(/;"	d	file:
getiofile	liblua/liolib.c	/^static FILE *getiofile (lua_State *L, const char *findex) {$/;"	f	file:
getjump	liblua/lcode.c	/^static int getjump (FuncState *fs, int pc) {$/;"	f	file:
getjumpcontrol	liblua/lcode.c	/^static Instruction *getjumpcontrol (FuncState *fs, int pc) {$/;"	f	file:
getlocaledecpoint	liblua/llex.c	/^#define getlocaledecpoint(/;"	d	file:
getlocvar	liblua/lparser.c	/^static LocVar *getlocvar (FuncState *fs, int i) {$/;"	f	file:
getobjname	liblua/ldebug.c	/^static const char *getobjname (Proto *p, int lastpc, int reg,$/;"	f	file:
getopt	client/lualibs/getopt.lua	/^local function getopt(args, ostr)$/;"	f
getproto	liblua/lobject.h	/^#define getproto(/;"	d
getstr	liblua/lobject.h	/^#define getstr(/;"	d
getthread	liblua/ldblib.c	/^static lua_State *getthread (lua_State *L, int *arg) {$/;"	f	file:
gettotalbytes	liblua/lstate.h	/^#define gettotalbytes(/;"	d
getunopr	liblua/lparser.c	/^static UnOpr getunopr (int op) {$/;"	f	file:
getupvalname	liblua/ldebug.c	/^static const char *getupvalname (CallInfo *ci, const TValue *o,$/;"	f	file:
getupvalref	liblua/lapi.c	/^static UpVal **getupvalref (lua_State *L, int fidx, int n, LClosure **pf) {$/;"	f	file:
gfasttm	liblua/ltm.h	/^#define gfasttm(/;"	d
gitversion	include/proxmark3.h	/^	char gitversion[50]; \/* String with the git revision *\/$/;"	m	struct:version_information
gkey	liblua/ltable.h	/^#define gkey(/;"	d
globalL	liblua/lua.c	/^static lua_State *globalL = NULL;$/;"	v	file:
global_State	liblua/lstate.h	/^typedef struct global_State {$/;"	s
global_State	liblua/lstate.h	/^} global_State;$/;"	t	typeref:struct:global_State
global_em410xId	client/cmdlfem4x.c	/^char *global_em410xId;$/;"	v
gmatch	liblua/lstrlib.c	/^static int gmatch (lua_State *L) {$/;"	f	file:
gmatch_aux	liblua/lstrlib.c	/^static int gmatch_aux (lua_State *L) {$/;"	f	file:
gnext	liblua/ltable.h	/^#define gnext(/;"	d
gnode	liblua/ltable.h	/^#define gnode(/;"	d
gnodelast	liblua/lgc.c	/^#define gnodelast(/;"	d	file:
gotostat	liblua/lparser.c	/^static void gotostat (LexState *ls, int pc) {$/;"	f	file:
gray	liblua/lstate.h	/^  GCObject *gray;  \/* list of gray objects *\/$/;"	m	struct:global_State
gray2black	liblua/lgc.h	/^#define gray2black(/;"	d
grayagain	liblua/lstate.h	/^  GCObject *grayagain;  \/* list of objects to be traversed atomically *\/$/;"	m	struct:global_State
growstack	liblua/lapi.c	/^static void growstack (lua_State *L, void *ud) {$/;"	f	file:
gt	liblua/lparser.h	/^  Labellist gt;  \/* list of pending gotos *\/$/;"	m	struct:Dyndata
gui	client/proxgui.cpp	/^static ProxGuiQT *gui = NULL;$/;"	v	file:
gval	liblua/ltable.h	/^#define gval(/;"	d
h	liblua/lparser.h	/^  Table *h;  \/* table to find (and reuse) elements in `k' *\/$/;"	m	struct:FuncState
h	liblua/lstate.h	/^  struct Table h;$/;"	m	union:GCObject	typeref:struct:GCObject::Table
hPort	client/uart.c	/^  HANDLE hPort;     \/\/ Serial port handle$/;"	m	struct:__anon53	file:
handle	client/hid-flasher/proxusb.h	/^  usb_dev_handle *handle;$/;"	m	struct:prox_unit
handle	client/lualibs/htmlskel.lua	/^	function handle(dump)$/;"	f
handle_luainit	liblua/lua.c	/^static int handle_luainit (lua_State *L) {$/;"	f	file:
handle_script	liblua/lua.c	/^static int handle_script (lua_State *L, char **argv, int n) {$/;"	f	file:
handshakeIclassTag	armsrc/iclass.c	/^uint8_t handshakeIclassTag(uint8_t *card_data)$/;"	f
has_E	liblua/lua.c	/^#define has_E	/;"	d	file:
has_been_low_for	fpga/hi_iso14443a.v	/^reg [11:0] has_been_low_for;$/;"	r
has_been_low_for	fpga/hi_read_rx_xcorr.v	/^reg [11:0] has_been_low_for;$/;"	r
has_e	liblua/lua.c	/^#define has_e	/;"	d	file:
has_i	liblua/lua.c	/^#define has_i	/;"	d	file:
has_v	liblua/lua.c	/^#define has_v	/;"	d	file:
hash	liblua/lobject.h	/^    unsigned int hash;$/;"	m	struct:TString::__anon68
hash	liblua/lstate.h	/^  GCObject **hash;$/;"	m	struct:stringtable
hash0	client/loclass/ikeys.c	/^void hash0(uint64_t c, uint8_t k[8])$/;"	f
hash1	client/loclass/elite_crack.c	/^void hash1(uint8_t csn[] , uint8_t k[])$/;"	f
hash2	client/loclass/elite_crack.c	/^void hash2(uint8_t *key64, uint8_t *outp_keytable)$/;"	f
hashboolean	liblua/ltable.c	/^#define hashboolean(/;"	d	file:
hashmod	liblua/ltable.c	/^#define hashmod(/;"	d	file:
hashnum	liblua/ltable.c	/^static Node *hashnum (const Table *t, lua_Number n) {$/;"	f	file:
hashpointer	liblua/ltable.c	/^#define hashpointer(/;"	d	file:
hashpow2	liblua/ltable.c	/^#define hashpow2(/;"	d	file:
hashstr	liblua/ltable.c	/^#define hashstr(/;"	d	file:
hasjumps	liblua/lcode.c	/^#define hasjumps(/;"	d	file:
hasmultret	liblua/lparser.c	/^#define hasmultret(/;"	d	file:
head	client/mifarehost.c	/^		} head;$/;"	m	struct:__anon47	typeref:union:__anon47::__anon48	file:
head	client/nonce2key/crapto1.c	/^		uint32_t *head, *tail;$/;"	m	struct:bucket_info::__anon51	file:
head	client/nonce2key/crapto1.c	/^	uint32_t *head;$/;"	m	struct:bucket	file:
headBit	client/loclass/cipherutils.c	/^bool headBit( BitstreamIn *stream)$/;"	f
help	client/scripts/14araw.lua	/^function help()$/;"	f
help	client/scripts/dumptoemul.lua	/^function help()$/;"	f
help	client/scripts/emul2dump.lua	/^function help()$/;"	f
help	client/scripts/emul2html.lua	/^function help()$/;"	f
help	client/scripts/formatMifare.lua	/^function help()$/;"	f
help	client/scripts/htmldump.lua	/^function help()$/;"	f
help	client/scripts/mifare_autopwn.lua	/^function help()$/;"	f
help	client/scripts/ndef_dump.lua	/^function help()$/;"	f
help	client/scripts/remagic.lua	/^function help()$/;"	f
help	client/scripts/test_t55x7_psk.lua	/^function help()$/;"	f
help	client/scripts/tnp3dump.lua	/^function help()$/;"	f
help	client/scripts/tnp3sim.lua	/^function help()$/;"	f
help	client/scripts/tracetest.lua	/^function help()$/;"	f
hex2ascii	armsrc/printf.c	/^#define hex2ascii(/;"	d	file:
hex2ascii_data	armsrc/printf.c	/^char const hex2ascii_data[] = "0123456789abcdefghijklmnopqrstuvwxyz";$/;"	v
hex_c14n	client/pm3_eml_mfd_test.py	/^def hex_c14n(inp):$/;"	f
hexdigits	client/pm3_eml_mfd_test.py	/^from string import hexdigits$/;"	i
hextobinarray	client/util.c	/^int hextobinarray(char *target, char *source)$/;"	f
hextobinstring	client/util.c	/^int hextobinstring(char *target, char *source)$/;"	f
hhu	client/proxmark3.h	/^#define hhu /;"	d
hi_byte_div	fpga/hi_read_tx.v	/^reg [2:0] hi_byte_div;$/;"	r
hi_div_by_128	fpga/hi_read_tx.v	/^reg [6:0] hi_div_by_128;$/;"	r
hi_iso14443a	fpga/hi_iso14443a.v	/^module hi_iso14443a($/;"	m
hi_read_rx_xcorr	fpga/hi_read_rx_xcorr.v	/^module hi_read_rx_xcorr($/;"	m
hi_read_rx_xcorr_848	fpga/fpga_hf.v	/^wire hi_read_rx_xcorr_848 = conf_word[0];$/;"	n
hi_read_rx_xcorr_quarter	fpga/fpga_hf.v	/^wire hi_read_rx_xcorr_quarter = conf_word[2];$/;"	n
hi_read_rx_xcorr_snoop	fpga/fpga_hf.v	/^wire hi_read_rx_xcorr_snoop = conf_word[1];$/;"	n
hi_read_tx	fpga/hi_read_tx.v	/^module hi_read_tx($/;"	m
hi_read_tx_shallow_modulation	fpga/fpga_hf.v	/^wire hi_read_tx_shallow_modulation = conf_word[0];$/;"	n
hi_simulate	fpga/hi_simulate.v	/^module hi_simulate($/;"	m
hi_simulate_mod_type	fpga/fpga_hf.v	/^wire [2:0] hi_simulate_mod_type = conf_word[2:0];$/;"	n
high	fpga/tests/plot_edgedetect.py	/^high = map(lambda x: ord(x), high)$/;"	v
high	fpga/tests/plot_edgedetect.py	/^high = open(BASENAME + ".high").read()$/;"	v
highCnt	armsrc/iclass.c	/^    int     highCnt;$/;"	m	struct:__anon8	file:
highCnt	armsrc/iso14443a.h	/^	uint16_t highCnt;$/;"	m	struct:__anon17
highCnt	armsrc/iso14443a.h	/^	uint16_t highCnt;$/;"	m	struct:__anon20
high_threshold	fpga/lf_edge_detect.v	/^	output [7:0] high_threshold, output [7:0] highz_threshold,$/;"	p
high_threshold	fpga/lo_edge_detect.v	/^wire [7:0] high_threshold, highz_threshold, lowz_threshold, low_threshold;$/;"	n
high_threshold	fpga/tests/tb_lf_edge_detect.v	/^    wire [7:0] high_threshold;$/;"	n
highz	fpga/tests/plot_edgedetect.py	/^highz = map(lambda x: ord(x), highz)$/;"	v
highz	fpga/tests/plot_edgedetect.py	/^highz = open(BASENAME + ".highz").read()$/;"	v
highz_threshold	fpga/lo_edge_detect.v	/^wire [7:0] high_threshold, highz_threshold, lowz_threshold, low_threshold;$/;"	n
highz_threshold	fpga/tests/tb_lf_edge_detect.v	/^    wire [7:0] highz_threshold;$/;"	n
historicalbytes	armsrc/emvcard.h	/^    uint8_t* historicalbytes;$/;"	m	struct:__anon2
hitag2_authenticate	armsrc/hitag2.c	/^static bool hitag2_authenticate(byte_t* rx, const size_t rxlen, byte_t* tx, size_t* txlen) {$/;"	f	file:
hitag2_cipher_authenticate	armsrc/hitag2.c	/^static int hitag2_cipher_authenticate(uint64_t* cs, const byte_t *authenticator_is)$/;"	f	file:
hitag2_cipher_reset	armsrc/hitag2.c	/^static void hitag2_cipher_reset(struct hitag2_tag *tag, const byte_t *iv)$/;"	f	file:
hitag2_cipher_transcrypt	armsrc/hitag2.c	/^static int hitag2_cipher_transcrypt(uint64_t* cs, byte_t *data, unsigned int bytes, unsigned int bits)$/;"	f	file:
hitag2_crypto	armsrc/hitag2.c	/^static bool hitag2_crypto(byte_t* rx, const size_t rxlen, byte_t* tx, size_t* txlen) {$/;"	f	file:
hitag2_handle_reader_command	armsrc/hitag2.c	/^static void hitag2_handle_reader_command(byte_t* rx, const size_t rxlen, byte_t* tx, size_t* txlen)$/;"	f	file:
hitag2_init	armsrc/hitag2.c	/^static int hitag2_init(void)$/;"	f	file:
hitag2_password	armsrc/hitag2.c	/^static bool hitag2_password(byte_t* rx, const size_t rxlen, byte_t* tx, size_t* txlen) {$/;"	f	file:
hitag2_reset	armsrc/hitag2.c	/^static int hitag2_reset(void)$/;"	f	file:
hitag2_tag	armsrc/hitag2.c	/^struct hitag2_tag {$/;"	s	file:
hitag2_test_auth_attempts	armsrc/hitag2.c	/^static bool hitag2_test_auth_attempts(byte_t* rx, const size_t rxlen, byte_t* tx, size_t* txlen) {$/;"	f	file:
hitag_data	include/hitag2.h	/^} hitag_data;$/;"	t	typeref:union:__anon60
hitag_function	include/hitag2.h	/^} hitag_function;$/;"	t	typeref:enum:__anon56
hitag_reader_send_bit	armsrc/hitag2.c	/^static void hitag_reader_send_bit(int bit) {$/;"	f	file:
hitag_reader_send_frame	armsrc/hitag2.c	/^static void hitag_reader_send_frame(const byte_t* frame, size_t frame_len)$/;"	f	file:
hitag_send_bit	armsrc/hitag2.c	/^static void hitag_send_bit(int bit) {$/;"	f	file:
hitag_send_frame	armsrc/hitag2.c	/^static void hitag_send_frame(const byte_t* frame, size_t frame_len)$/;"	f	file:
hook	liblua/lstate.h	/^  lua_Hook hook;$/;"	m	struct:lua_State
hookcount	liblua/lstate.h	/^  int hookcount;$/;"	m	struct:lua_State
hookf	liblua/ldblib.c	/^static void hookf (lua_State *L, lua_Debug *ar) {$/;"	f	file:
hookmask	liblua/lstate.h	/^  lu_byte hookmask;$/;"	m	struct:lua_State
ht2_f4a	armsrc/hitag2.c	/^static const u32 ht2_f4a = 0x2C79;		\/\/ 0010 1100 0111 1001$/;"	v	file:
ht2_f4b	armsrc/hitag2.c	/^static const u32 ht2_f4b = 0x6671;		\/\/ 0110 0110 0111 0001$/;"	v	file:
ht2_f5c	armsrc/hitag2.c	/^static const u32 ht2_f5c = 0x7907287B;	\/\/ 0111 1001 0000 0111 0010 1000 0111 1011$/;"	v	file:
htole32	common/crc32.c	/^#define htole32(/;"	d	file:
hvalue	liblua/lobject.h	/^#define hvalue(/;"	d
i	fpga/hi_iso14443a.v	/^integer i;$/;"	r
i	fpga/testbed_fpga.v	/^	integer i;$/;"	r
i	fpga/testbed_hi_read_tx.v	/^	integer idx, i;$/;"	r
i	fpga/testbed_hi_simulate.v	/^	integer idx, i;$/;"	r
i	fpga/testbed_lo_read.v	/^	integer idx, i, adc_val=8;$/;"	r
i	fpga/testbed_lo_simulate.v	/^	integer i, counter=0;$/;"	r
i4	armsrc/hitag2.c	/^#define i4(/;"	d	file:
iABC	liblua/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
iABx	liblua/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
iAsBx	liblua/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
iAx	liblua/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
i_ci	liblua/lua.h	/^  struct CallInfo *i_ci;  \/* active function *\/$/;"	m	struct:lua_Debug	typeref:struct:lua_Debug::CallInfo
i_key	liblua/lobject.h	/^  TKey i_key;$/;"	m	struct:Node
i_val	liblua/lobject.h	/^  TValue i_val;$/;"	m	struct:Node
iclass_CRC_check	client/cmdhf.c	/^uint8_t iclass_CRC_check(bool isResponse, uint8_t* data, uint8_t len)$/;"	f
iclass_crc16	common/iso15693tools.c	/^uint16_t iclass_crc16(char *data_p, unsigned short length)$/;"	f
idx	fpga/testbed_hi_read_tx.v	/^	integer idx, i;$/;"	r
idx	fpga/testbed_hi_simulate.v	/^	integer idx, i;$/;"	r
idx	fpga/testbed_lo_read.v	/^	integer idx, i, adc_val=8;$/;"	r
idx	liblua/lobject.h	/^  lu_byte idx;  \/* index of upvalue (in stack or in outer function's list) *\/$/;"	m	struct:Upvaldesc
idx	liblua/lparser.h	/^      short idx;  \/* index (R\/K) *\/$/;"	m	struct:expdesc::__anon76::__anon77
idx	liblua/lparser.h	/^  short idx;  \/* variable index in stack *\/$/;"	m	struct:Vardesc
ifstat	liblua/lparser.c	/^static void ifstat (LexState *ls, int line) {$/;"	f	file:
imap	client/pm3_eml_mfd_test.py	/^from itertools import imap$/;"	i
imap	tools/findbits_test.py	/^from itertools import imap$/;"	i
inclinenumber	liblua/llex.c	/^static void inclinenumber (LexState *ls) {$/;"	f	file:
incomplete	liblua/lua.c	/^static int incomplete (lua_State *L, int status) {$/;"	f	file:
incr_top	liblua/ldo.h	/^#define incr_top(/;"	d
incstep	liblua/lgc.c	/^static void incstep (lua_State *L) {$/;"	f	file:
ind	liblua/lparser.h	/^    } ind;$/;"	m	union:expdesc::__anon76	typeref:struct:expdesc::__anon76::__anon77
indala26decode	common/lfdemod.c	/^int indala26decode(uint8_t *bitStream, size_t *size, uint8_t *invert)$/;"	f
index2addr	liblua/lapi.c	/^static TValue *index2addr (lua_State *L, int idx) {$/;"	f	file:
info	liblua/lparser.h	/^    int info;  \/* for generic use *\/$/;"	m	union:expdesc::__anon76
init	client/loclass/cipher.c	/^State init(uint8_t* k)$/;"	f
init	liblua/lstrlib.c	/^    const char *init;$/;"	m	struct:MatchState::__anon82	file:
init_exp	liblua/lparser.c	/^static void init_exp (expdesc *e, expkind k, int i) {$/;"	f	file:
init_registry	liblua/lstate.c	/^static void init_registry (lua_State *L, global_State *g) {$/;"	f	file:
initb	liblua/lauxlib.h	/^  char initb[LUAL_BUFFERSIZE];  \/* initial buffer *\/$/;"	m	struct:luaL_Buffer
initial_value	include/crc.h	/^	uint32_t initial_value;$/;"	m	struct:crc
input	fpga/fpga_hf.v	/^	input cross_hi, input cross_lo,$/;"	p
input	fpga/fpga_hf.v	/^	input pck0, input ck_1356meg, input ck_1356megb,$/;"	p
input	fpga/fpga_lf.v	/^	input cross_hi, input cross_lo,$/;"	p
input	fpga/fpga_lf.v	/^	input pck0, input ck_1356meg, input ck_1356megb,$/;"	p
input	fpga/lo_edge_detect.v	/^    input lf_ed_toggle_mode, input [7:0] lf_ed_threshold$/;"	p
input	fpga/lo_edge_detect.v	/^    input pck0, input pck_divclk,$/;"	p
input	fpga/lo_edge_detect.v	/^    output ssp_frame, input ssp_dout, output ssp_clk,$/;"	p
input	fpga/lo_read.v	/^	input lf_field$/;"	p
input	fpga/lo_read.v	/^	input pck0, input [7:0] pck_cnt, input pck_divclk,$/;"	p
input 	client/lualibs/utils.lua	/^	input = function (message , default)$/;"	f
input 	client/scripts/mfkeys.lua	/^	input = function (message , default)$/;"	f
input_prev_1	fpga/hi_iso14443a.v	/^reg [7:0] input_prev_4, input_prev_3, input_prev_2, input_prev_1;$/;"	r
input_prev_2	fpga/hi_iso14443a.v	/^reg [7:0] input_prev_4, input_prev_3, input_prev_2, input_prev_1;$/;"	r
input_prev_3	fpga/hi_iso14443a.v	/^reg [7:0] input_prev_4, input_prev_3, input_prev_2, input_prev_1;$/;"	r
input_prev_4	fpga/hi_iso14443a.v	/^reg [7:0] input_prev_4, input_prev_3, input_prev_2, input_prev_1;$/;"	r
inspectstat	liblua/lauxlib.c	/^#define inspectstat(/;"	d	file:
instack	liblua/lobject.h	/^  lu_byte instack;  \/* whether it is in stack *\/$/;"	m	struct:Upvaldesc
int16_t	armsrc/stdint.h	/^typedef short int				int16_t;$/;"	t
int32_t	armsrc/stdint.h	/^typedef int						int32_t;$/;"	t
int64_t	armsrc/stdint.h	/^typedef long long int			int64_t;$/;"	t
int8_t	armsrc/stdint.h	/^typedef signed char				int8_t;$/;"	t
intMfSniffSend	armsrc/mifaresniff.c	/^bool intMfSniffSend() {$/;"	f
internshrstr	liblua/lstring.c	/^static TString *internshrstr (lua_State *L, const char *str, size_t l) {$/;"	f	file:
intmax_t	armsrc/printf.c	/^typedef int32_t intmax_t;$/;"	t	file:
intptr_t	armsrc/stdint.h	/^typedef int						intptr_t;$/;"	t
inv32	armsrc/hitag2.c	/^#define inv32(/;"	d	file:
inv_ip_permtab	armsrc/des.c	/^const uint8_t inv_ip_permtab[] ={$/;"	v
invalidateTMcache	liblua/ltable.h	/^#define invalidateTMcache(/;"	d
invert	tools/findbits.py	/^def invert(data):$/;"	f
invertjump	liblua/lcode.c	/^static void invertjump (FuncState *fs, expdesc *e) {$/;"	f	file:
io_close	liblua/liolib.c	/^static int io_close (lua_State *L) {$/;"	f	file:
io_fclose	liblua/liolib.c	/^static int io_fclose (lua_State *L) {$/;"	f	file:
io_flush	liblua/liolib.c	/^static int io_flush (lua_State *L) {$/;"	f	file:
io_input	liblua/liolib.c	/^static int io_input (lua_State *L) {$/;"	f	file:
io_lines	liblua/liolib.c	/^static int io_lines (lua_State *L) {$/;"	f	file:
io_noclose	liblua/liolib.c	/^static int io_noclose (lua_State *L) {$/;"	f	file:
io_open	liblua/liolib.c	/^static int io_open (lua_State *L) {$/;"	f	file:
io_output	liblua/liolib.c	/^static int io_output (lua_State *L) {$/;"	f	file:
io_pclose	liblua/liolib.c	/^static int io_pclose (lua_State *L) {$/;"	f	file:
io_popen	liblua/liolib.c	/^static int io_popen (lua_State *L) {$/;"	f	file:
io_read	liblua/liolib.c	/^static int io_read (lua_State *L) {$/;"	f	file:
io_readline	liblua/liolib.c	/^static int io_readline (lua_State *L) {$/;"	f	file:
io_tmpfile	liblua/liolib.c	/^static int io_tmpfile (lua_State *L) {$/;"	f	file:
io_type	liblua/liolib.c	/^static int io_type (lua_State *L) {$/;"	f	file:
io_write	liblua/liolib.c	/^static int io_write (lua_State *L) {$/;"	f	file:
iolib	liblua/liolib.c	/^static const luaL_Reg iolib[] = {$/;"	v	file:
ip_permtab	armsrc/des.c	/^const uint8_t ip_permtab[] ={$/;"	v
ipairsaux	liblua/lbaselib.c	/^static int ipairsaux (lua_State *L) {$/;"	f	file:
isBlockEmpty	client/mifarehost.c	/^int isBlockEmpty(int blockN) {$/;"	f
isBlockTrailer	client/mifarehost.c	/^int isBlockTrailer(int blockN) {$/;"	f
isLfunction	liblua/lobject.h	/^#define isLfunction(/;"	d
isLua	liblua/lstate.h	/^#define isLua(/;"	d
isTraceCardEmpty	client/mifarehost.c	/^int isTraceCardEmpty(void) {$/;"	f
is_high	fpga/lf_edge_detect.v	/^	reg is_high = 0;$/;"	r
is_high	fpga/lo_simulate.v	/^reg is_high;$/;"	r
is_low	fpga/lf_edge_detect.v	/^	reg is_low = 0;$/;"	r
is_low	fpga/lo_simulate.v	/^reg is_low;$/;"	r
is_vararg	liblua/lobject.h	/^  lu_byte is_vararg;$/;"	m	struct:Proto
is_zero	fpga/lf_edge_detect.v	/^	reg is_zero = 0;$/;"	r
isblack	liblua/lgc.h	/^#define isblack(/;"	d
iscleared	liblua/lgc.c	/^static int iscleared (global_State *g, const TValue *o) {$/;"	f	file:
isclosed	liblua/liolib.c	/^#define isclosed(/;"	d	file:
iscollectable	liblua/lobject.h	/^#define iscollectable(/;"	d
isdead	liblua/lgc.h	/^#define isdead(/;"	d
isdeadm	liblua/lgc.h	/^#define isdeadm(/;"	d
isdummy	liblua/ltable.c	/^#define isdummy(/;"	d	file:
isfinalized	liblua/lgc.c	/^#define isfinalized(/;"	d	file:
isgenerational	liblua/lgc.h	/^#define isgenerational(/;"	d
isgray	liblua/lgc.h	/^#define isgray(/;"	d
isinstack	liblua/ldebug.c	/^static int isinstack (CallInfo *ci, const TValue *o) {$/;"	f	file:
isloop	liblua/lparser.c	/^  lu_byte isloop;  \/* true if `block' is a loop *\/$/;"	m	struct:BlockCnt	file:
isneg	liblua/lobject.c	/^static int isneg (const char **s) {$/;"	f	file:
isnumeral	liblua/lcode.c	/^static int isnumeral(expdesc *e) {$/;"	f	file:
iso14443B_CRC_check	client/cmdhf.c	/^uint8_t iso14443B_CRC_check(bool isResponse, uint8_t* data, uint8_t len)$/;"	f
iso14443a_select_card	armsrc/iso14443a.c	/^int iso14443a_select_card(byte_t *uid_ptr, iso14a_card_select_t *p_hi14a_card, uint32_t *cuid_ptr) {$/;"	f
iso14443a_setup	armsrc/iso14443a.c	/^void iso14443a_setup(uint8_t fpga_minor_mode) {$/;"	f
iso14_apdu	armsrc/iso14443a.c	/^int iso14_apdu(uint8_t *cmd, uint16_t cmd_len,bool useCID, uint8_t CID, void *data) {$/;"	f
iso14_pcb_blocknum	armsrc/iso14443a.c	/^static uint8_t iso14_pcb_blocknum = 0;$/;"	v	file:
iso14a_card_select_t	include/mifare.h	/^} __attribute__((__packed__)) iso14a_card_select_t;$/;"	t	typeref:struct:__anon61
iso14a_command_t	include/mifare.h	/^} iso14a_command_t;$/;"	t	typeref:enum:ISO14A_COMMAND
iso14a_set_ATS_timeout	armsrc/iso14443a.c	/^void iso14a_set_ATS_timeout(uint8_t *ats) {$/;"	f
iso14a_set_timeout	armsrc/iso14443a.c	/^void iso14a_set_timeout(uint32_t timeout) {$/;"	f
iso14a_set_trigger	armsrc/iso14443a.c	/^void iso14a_set_trigger(bool enable) {$/;"	f
iso14a_timeout	armsrc/iso14443a.c	/^static uint32_t iso14a_timeout;$/;"	v	file:
isold	liblua/lgc.h	/^#define isold(/;"	d
ispseudo	liblua/lapi.c	/^#define ispseudo(/;"	d	file:
isreserved	liblua/lstring.h	/^#define isreserved(/;"	d
isstackindex	liblua/lapi.c	/^#define isstackindex(/;"	d	file:
issweepphase	liblua/lgc.h	/^#define issweepphase(/;"	d
istailcall	liblua/lua.h	/^  char istailcall;	\/* (t) *\/$/;"	m	struct:lua_Debug
isvalid	liblua/lapi.c	/^#define isvalid(/;"	d	file:
isvararg	liblua/lua.h	/^  char isvararg;        \/* (u) *\/$/;"	m	struct:lua_Debug
iswhite	liblua/lgc.h	/^#define iswhite(/;"	d
itoa	armsrc/string.c	/^void itoa(int n, char s[])$/;"	f
jpc	liblua/lparser.h	/^  int jpc;  \/* list of pending jumps to `pc' *\/$/;"	m	struct:FuncState
jumponcond	liblua/lcode.c	/^static int jumponcond (FuncState *fs, expdesc *e, int cond) {$/;"	f	file:
justNoise	common/lfdemod.c	/^uint8_t justNoise(uint8_t *BitStream, size_t size)$/;"	f
k	liblua/lobject.h	/^  TValue *k;  \/* constants used by the function *\/$/;"	m	struct:Proto
k	liblua/lparser.h	/^  expkind k;$/;"	m	struct:expdesc
k	liblua/lstate.h	/^      lua_CFunction k;  \/* continuation in case of yields *\/$/;"	m	struct:CallInfo::__anon79::__anon81
keepinvariant	liblua/lgc.h	/^#define keepinvariant(/;"	d
keepinvariantout	liblua/lgc.h	/^#define keepinvariantout(/;"	d
key	armsrc/hitag2.c	/^static byte_t key[8];$/;"	v	file:
key	include/hitag2.h	/^	byte_t key[4];$/;"	m	struct:__anon59
keyPressEvent	client/proxguiqt.cpp	/^void ProxWidget::keyPressEvent(QKeyEvent *event)$/;"	f	class:ProxWidget
keyType	client/mifarehost.c	/^		uint32_t keyType;$/;"	m	struct:__anon47	file:
keyhead	client/mifarehost.c	/^			uint64_t *keyhead;$/;"	m	union:__anon47::__anon48	file:
keytable	client/loclass/cipher.c	/^uint8_t keytable[] = { 0,0,0,0,0,0,0,0};$/;"	v
keytail	client/mifarehost.c	/^			uint64_t *keytail;$/;"	m	union:__anon47::__anon49	file:
kname	liblua/ldebug.c	/^static void kname (Proto *p, int pc, int c, const char **name) {$/;"	f	file:
ks1	client/mifarehost.c	/^		uint32_t ks1;$/;"	m	struct:__anon47	file:
ks2	client/mifarehost.c	/^uint32_t ks2;$/;"	v
ks3	client/mifarehost.c	/^uint32_t ks3;$/;"	v
ksprintn	armsrc/printf.c	/^ksprintn(char *nbuf, uintmax_t num, int base, int *lenp, int upper)$/;"	f	file:
kvsprintf	armsrc/printf.c	/^kvsprintf(char const *fmt, void *arg, int radix, va_list ap)$/;"	f
l	client/loclass/cipher.c	/^	uint8_t l;$/;"	m	struct:__anon40	file:
l	liblua/lobject.h	/^    } l;$/;"	m	union:UpVal::__anon70	typeref:struct:UpVal::__anon70::__anon71
l	liblua/lobject.h	/^  LClosure l;$/;"	m	union:Closure
l	liblua/lstate.c	/^  LX l;$/;"	m	struct:LG	file:
l	liblua/lstate.c	/^  lua_State l;$/;"	m	struct:LX	file:
l	liblua/lstate.h	/^    } l;$/;"	m	union:CallInfo::__anon79	typeref:struct:CallInfo::__anon79::__anon80
l_CmdConsole	client/scripting.c	/^static int l_CmdConsole(lua_State *L)$/;"	f	file:
l_G	liblua/lstate.h	/^  global_State *l_G;$/;"	m	struct:lua_State
l_SendCommand	client/scripting.c	/^static int l_SendCommand(lua_State *L){$/;"	f	file:
l_WaitForResponseTimeout	client/scripting.c	/^static int l_WaitForResponseTimeout(lua_State *L){$/;"	f	file:
l_aes	client/scripting.c	/^static int l_aes(lua_State *L)$/;"	f	file:
l_alloc	liblua/lauxlib.c	/^static void *l_alloc (void *ud, void *ptr, size_t osize, size_t nsize) {$/;"	f	file:
l_clearCommandBuffer	client/scripting.c	/^static int l_clearCommandBuffer(lua_State *L){$/;"	f	file:
l_crc16	client/scripting.c	/^static int l_crc16(lua_State *L)$/;"	f	file:
l_d	liblua/llimits.h	/^union luai_Cast { double l_d; LUA_INT32 l_p[2]; };$/;"	m	union:luai_Cast
l_foobar	client/scripting.c	/^static int l_foobar(lua_State *L)$/;"	f	file:
l_fseek	liblua/liolib.c	/^#define l_fseek(/;"	d	file:
l_ftell	liblua/liolib.c	/^#define l_ftell(/;"	d	file:
l_gmtime	liblua/loslib.c	/^#define l_gmtime(/;"	d	file:
l_isfalse	liblua/lobject.h	/^#define l_isfalse(/;"	d
l_iso15693_crc	client/scripting.c	/^static int l_iso15693_crc(lua_State *L)$/;"	f	file:
l_localtime	liblua/loslib.c	/^#define l_localtime(/;"	d	file:
l_mathop	liblua/luaconf.h	/^#define l_mathop(/;"	d
l_mem	liblua/llimits.h	/^typedef LUAI_MEM l_mem;$/;"	t
l_message	liblua/lua.c	/^static void l_message (const char *pname, const char *msg) {$/;"	f	file:
l_nonce2key	client/scripting.c	/^static int l_nonce2key(lua_State *L){$/;"	f	file:
l_noret	liblua/llimits.h	/^#define l_noret	/;"	d
l_p	liblua/llimits.h	/^union luai_Cast { double l_d; LUA_INT32 l_p[2]; };$/;"	m	union:luai_Cast
l_pack	client/pm3_binlib.c	/^static int l_pack(lua_State *L) 		\/** pack(f,...) *\/$/;"	f	file:
l_registry	liblua/lstate.h	/^  TValue l_registry;$/;"	m	struct:global_State
l_seeknum	liblua/liolib.c	/^#define l_seeknum	/;"	d	file:
l_setbit	liblua/lgc.h	/^#define l_setbit(/;"	d
l_strcmp	liblua/lvm.c	/^static int l_strcmp (const TString *ls, const TString *rs) {$/;"	f	file:
l_uacNumber	liblua/llimits.h	/^typedef LUAI_UACNUMBER l_uacNumber;$/;"	t
l_ukbhit	client/scripting.c	/^static int l_ukbhit(lua_State *L)$/;"	f	file:
l_unpack	client/pm3_binlib.c	/^static int l_unpack(lua_State *L) 		\/** unpack(f,s, [init]) *\/$/;"	f	file:
label	liblua/lparser.h	/^  Labellist label;   \/* list of active labels *\/$/;"	m	struct:Dyndata
labelstat	liblua/lparser.c	/^static void labelstat (LexState *ls, TString *label, int line) {$/;"	f	file:
laction	liblua/lua.c	/^static void laction (int i) {$/;"	f	file:
lapi_c	liblua/lapi.c	/^#define lapi_c$/;"	d	file:
lapi_h	liblua/lapi.h	/^#define lapi_h$/;"	d
lastfree	liblua/lobject.h	/^  Node *lastfree;  \/* any free position is before this position *\/$/;"	m	struct:Table
lastline	liblua/llex.h	/^  int lastline;  \/* line of last token `consumed' *\/$/;"	m	struct:LexState
lastlinedefined	liblua/lobject.h	/^  int lastlinedefined;$/;"	m	struct:Proto
lastlinedefined	liblua/lua.h	/^  int lastlinedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug
lastlistfield	liblua/lparser.c	/^static void lastlistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	file:
lasttarget	liblua/lparser.h	/^  int lasttarget;   \/* 'label' of last 'jump label' *\/$/;"	m	struct:FuncState
lauxlib_c	liblua/lauxlib.c	/^#define lauxlib_c$/;"	d	file:
lauxlib_h	liblua/lauxlib.h	/^#define lauxlib_h$/;"	d
lbaselib_c	liblua/lbaselib.c	/^#define lbaselib_c$/;"	d	file:
lbitlib_c	liblua/lbitlib.c	/^#define lbitlib_c$/;"	d	file:
lcode_c	liblua/lcode.c	/^#define lcode_c$/;"	d	file:
lcode_h	liblua/lcode.h	/^#define lcode_h$/;"	d
lconfig_h	liblua/luaconf.h	/^#define lconfig_h$/;"	d
lcorolib_c	liblua/lcorolib.c	/^#define lcorolib_c$/;"	d	file:
lctype_c	liblua/lctype.c	/^#define lctype_c$/;"	d	file:
lctype_h	liblua/lctype.h	/^#define lctype_h$/;"	d
ldblib_c	liblua/ldblib.c	/^#define ldblib_c$/;"	d	file:
ldebug_c	liblua/ldebug.c	/^#define ldebug_c$/;"	d	file:
ldebug_h	liblua/ldebug.h	/^#define ldebug_h$/;"	d
ldo_c	liblua/ldo.c	/^#define ldo_c$/;"	d	file:
ldo_h	liblua/ldo.h	/^#define ldo_h$/;"	d
ldump_c	liblua/ldump.c	/^#define ldump_c$/;"	d	file:
le16	client/hid-flasher/proxendian.h	/^# define le16(/;"	d
le16	client/hid-flasher/proxendian.h	/^static inline uint16_t le16(uint16_t v)$/;"	f
le16	client/proxendian.h	/^# define le16(/;"	d
le16	client/proxendian.h	/^static inline uint16_t le16(uint16_t v)$/;"	f
le24toh	armsrc/util.c	/^int32_t le24toh (uint8_t data[3])$/;"	f
le32	client/hid-flasher/proxendian.h	/^# define le32(/;"	d
le32	client/hid-flasher/proxendian.h	/^static inline uint32_t le32(uint32_t v)$/;"	f
le32	client/proxendian.h	/^# define le32(/;"	d
le32	client/proxendian.h	/^static inline uint32_t le32(uint32_t v)$/;"	f
leaveblock	liblua/lparser.c	/^static void leaveblock (FuncState *fs) {$/;"	f	file:
leavelevel	liblua/lparser.c	/^#define leavelevel(/;"	d	file:
left	liblua/lparser.c	/^  lu_byte left;  \/* left priority for each binary operator *\/$/;"	m	struct:__anon74	file:
legic_crc	armsrc/legicrf.c	/^static crc_t    legic_crc;$/;"	v	file:
legic_frame	armsrc/legicrf.c	/^static struct legic_frame {$/;"	s	file:
legic_frame_drift	armsrc/legicrf.c	/^static int      legic_frame_drift;$/;"	v	file:
legic_phase_drift	armsrc/legicrf.c	/^static int      legic_phase_drift;$/;"	v	file:
legic_prng_bc	armsrc/legicrf.c	/^static uint32_t legic_prng_bc;$/;"	v	file:
legic_prng_count	common/legic_prng.c	/^int legic_prng_count() {$/;"	f
legic_prng_forward	common/legic_prng.c	/^void legic_prng_forward(int count) {$/;"	f
legic_prng_get_bit	common/legic_prng.c	/^uint8_t legic_prng_get_bit() {$/;"	f
legic_prng_init	common/legic_prng.c	/^void legic_prng_init(uint8_t init) {$/;"	f
legic_prng_iv	armsrc/legicrf.c	/^static uint32_t legic_prng_iv;$/;"	v	file:
legic_read_byte	armsrc/legicrf.c	/^int legic_read_byte(int byte_index, int cmd_sz) {$/;"	f
legic_read_count	armsrc/legicrf.c	/^static int      legic_read_count;$/;"	v	file:
legic_reqresp_drift	armsrc/legicrf.c	/^static int      legic_reqresp_drift;$/;"	v	file:
legic_state	armsrc/legicrf.c	/^} legic_state;$/;"	v	typeref:enum:__anon23	file:
legic_write_byte	armsrc/legicrf.c	/^int legic_write_byte(int byte, int addr, int addr_sz) {$/;"	f
len	armsrc/iclass.c	/^    int     len;$/;"	m	struct:__anon10	file:
len	armsrc/iso14443.c	/^	int     len;$/;"	m	struct:__anon15	file:
len	armsrc/iso14443a.h	/^	uint16_t len;$/;"	m	struct:__anon17
len	armsrc/iso14443a.h	/^	uint16_t len;$/;"	m	struct:__anon20
len	client/mifarehost.c	/^		uint32_t len;$/;"	m	struct:__anon47	file:
len	liblua/lobject.h	/^    size_t len;  \/* number of bytes *\/$/;"	m	struct:Udata::__anon69
len	liblua/lobject.h	/^    size_t len;  \/* number of characters in string *\/$/;"	m	struct:TString::__anon68
len	liblua/lstrlib.c	/^    ptrdiff_t len;$/;"	m	struct:MatchState::__anon82	file:
length	client/flash.h	/^	uint32_t length;$/;"	m	struct:__anon32
length	client/hid-flasher/flash.h	/^	uint32_t length;$/;"	m	struct:__anon36
level	liblua/lstrlib.c	/^  int level;  \/* total number of captures (finished or unfinished) *\/$/;"	m	struct:MatchState	file:
lexerror	liblua/llex.c	/^static l_noret lexerror (LexState *ls, const char *msg, int token) {$/;"	f	file:
lf_ed_threshold	fpga/fpga_lf.v	/^wire [7:0] lf_ed_threshold = user_byte1;$/;"	n
lf_ed_toggle_mode	fpga/fpga_lf.v	/^wire lf_ed_toggle_mode = conf_word[1]; \/\/ for lo_edge_detect$/;"	n
lf_edge_detect	fpga/lf_edge_detect.v	/^module lf_edge_detect(input clk, input [7:0] adc_d, input [7:0] lf_ed_threshold,$/;"	m
lf_edge_detect_tb	fpga/tests/tb_lf_edge_detect.v	/^module lf_edge_detect_tb;$/;"	m
lf_field	fpga/fpga_lf.v	/^wire lf_field = conf_word[0];$/;"	n
lf_field	fpga/lo_edge_detect.v	/^    input lf_field,$/;"	p
lfsr	client/mifarehost.c	/^uint64_t lfsr;$/;"	v
lfsr	common/legic_prng.c	/^struct lfsr {$/;"	s	file:
lfsr	common/legic_prng.c	/^} lfsr;$/;"	v	typeref:struct:lfsr
lfsr_common_prefix	armsrc/crapto1.c	/^lfsr_common_prefix(uint32_t pfx, uint32_t rr, uint8_t ks[8], uint8_t par[8][8])$/;"	f
lfsr_common_prefix	client/nonce2key/crapto1.c	/^lfsr_common_prefix(uint32_t pfx, uint32_t rr, uint8_t ks[8], uint8_t par[8][8], uint8_t no_par)$/;"	f
lfsr_common_prefix	tools/mfkey/crapto1.c	/^lfsr_common_prefix(uint32_t pfx, uint32_t rr, uint8_t ks[8], uint8_t par[8][8])$/;"	f
lfsr_common_prefix	tools/nonce2key/crapto1.c	/^lfsr_common_prefix(uint32_t pfx, uint32_t rr, uint8_t ks[8], uint8_t par[8][8])$/;"	f
lfsr_prefix_ks	armsrc/crapto1.c	/^uint32_t *lfsr_prefix_ks(uint8_t ks[8], int isodd)$/;"	f
lfsr_prefix_ks	client/nonce2key/crapto1.c	/^uint32_t *lfsr_prefix_ks(uint8_t ks[8], int isodd)$/;"	f
lfsr_prefix_ks	tools/mfkey/crapto1.c	/^uint32_t *lfsr_prefix_ks(uint8_t ks[8], int isodd)$/;"	f
lfsr_prefix_ks	tools/nonce2key/crapto1.c	/^uint32_t *lfsr_prefix_ks(uint8_t ks[8], int isodd)$/;"	f
lfsr_recovery32	armsrc/crapto1.c	/^struct Crypto1State* lfsr_recovery32(uint32_t ks2, uint32_t in)$/;"	f
lfsr_recovery32	client/nonce2key/crapto1.c	/^struct Crypto1State* lfsr_recovery32(uint32_t ks2, uint32_t in)$/;"	f
lfsr_recovery32	tools/mfkey/crapto1.c	/^struct Crypto1State* lfsr_recovery32(uint32_t ks2, uint32_t in)$/;"	f
lfsr_recovery32	tools/nonce2key/crapto1.c	/^struct Crypto1State* lfsr_recovery32(uint32_t ks2, uint32_t in)$/;"	f
lfsr_recovery64	armsrc/crapto1.c	/^struct Crypto1State* lfsr_recovery64(uint32_t ks2, uint32_t ks3)$/;"	f
lfsr_recovery64	client/nonce2key/crapto1.c	/^struct Crypto1State* lfsr_recovery64(uint32_t ks2, uint32_t ks3)$/;"	f
lfsr_recovery64	tools/mfkey/crapto1.c	/^struct Crypto1State* lfsr_recovery64(uint32_t ks2, uint32_t ks3)$/;"	f
lfsr_recovery64	tools/nonce2key/crapto1.c	/^struct Crypto1State* lfsr_recovery64(uint32_t ks2, uint32_t ks3)$/;"	f
lfsr_rollback_bit	armsrc/crapto1.c	/^uint8_t lfsr_rollback_bit(struct Crypto1State *s, uint32_t in, int fb)$/;"	f
lfsr_rollback_bit	client/nonce2key/crapto1.c	/^void lfsr_rollback_bit(struct Crypto1State *s, uint32_t in, int fb)$/;"	f
lfsr_rollback_bit	tools/mfkey/crapto1.c	/^uint8_t lfsr_rollback_bit(struct Crypto1State *s, uint32_t in, int fb)$/;"	f
lfsr_rollback_bit	tools/nonce2key/crapto1.c	/^void lfsr_rollback_bit(struct Crypto1State *s, uint32_t in, int fb)$/;"	f
lfsr_rollback_byte	armsrc/crapto1.c	/^uint8_t lfsr_rollback_byte(struct Crypto1State *s, uint32_t in, int fb)$/;"	f
lfsr_rollback_byte	client/nonce2key/crapto1.c	/^void lfsr_rollback_byte(struct Crypto1State *s, uint32_t in, int fb)$/;"	f
lfsr_rollback_byte	tools/mfkey/crapto1.c	/^uint8_t lfsr_rollback_byte(struct Crypto1State *s, uint32_t in, int fb)$/;"	f
lfsr_rollback_byte	tools/nonce2key/crapto1.c	/^void lfsr_rollback_byte(struct Crypto1State *s, uint32_t in, int fb)$/;"	f
lfsr_rollback_word	armsrc/crapto1.c	/^uint32_t lfsr_rollback_word(struct Crypto1State *s, uint32_t in, int fb)$/;"	f
lfsr_rollback_word	client/nonce2key/crapto1.c	/^void lfsr_rollback_word(struct Crypto1State *s, uint32_t in, int fb)$/;"	f
lfsr_rollback_word	tools/mfkey/crapto1.c	/^uint32_t lfsr_rollback_word(struct Crypto1State *s, uint32_t in, int fb)$/;"	f
lfsr_rollback_word	tools/nonce2key/crapto1.c	/^void lfsr_rollback_word(struct Crypto1State *s, uint32_t in, int fb)$/;"	f
lfunc_c	liblua/lfunc.c	/^#define lfunc_c$/;"	d	file:
lfunc_h	liblua/lfunc.h	/^#define lfunc_h$/;"	d
lgc_c	liblua/lgc.c	/^#define lgc_c$/;"	d	file:
lgc_h	liblua/lgc.h	/^#define lgc_h$/;"	d
libsize	liblua/lauxlib.c	/^static int libsize (const luaL_Reg *l) {$/;"	f	file:
line	common/usb_cdc.c	/^AT91S_CDC_LINE_CODING line = {$/;"	v
line	liblua/lparser.h	/^  int line;  \/* line where it appeared *\/$/;"	m	struct:Labeldesc
linedefined	liblua/lobject.h	/^  int linedefined;$/;"	m	struct:Proto
linedefined	liblua/lua.h	/^  int linedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug
lineinfo	liblua/lobject.h	/^  int *lineinfo;  \/* map from opcodes to source lines (debug information) *\/$/;"	m	struct:Proto
linenumber	liblua/llex.h	/^  int linenumber;  \/* input line counter *\/$/;"	m	struct:LexState
linit_c	liblua/linit.c	/^#define linit_c$/;"	d	file:
linktable	liblua/lgc.c	/^#define linktable(/;"	d	file:
liolib_c	liblua/liolib.c	/^#define liolib_c$/;"	d	file:
lisdigit	liblua/lctype.h	/^#define lisdigit(/;"	d
lislalnum	liblua/lctype.h	/^#define lislalnum(/;"	d
lislalpha	liblua/lctype.h	/^#define lislalpha(/;"	d
lisprint	liblua/lctype.h	/^#define lisprint(/;"	d
lisspace	liblua/lctype.h	/^#define lisspace(/;"	d
listfield	liblua/lparser.c	/^static void listfield (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
listing	liblua/luac.c	/^static int listing=0;			\/* list bytecodes? *\/$/;"	v	file:
lisxdigit	liblua/lctype.h	/^#define lisxdigit(/;"	d
ll_addtoclib	liblua/loadlib.c	/^static void ll_addtoclib (lua_State *L, const char *path, void *plib) {$/;"	f	file:
ll_checkclib	liblua/loadlib.c	/^static void *ll_checkclib (lua_State *L, const char *path) {$/;"	f	file:
ll_funcs	liblua/loadlib.c	/^static const luaL_Reg ll_funcs[] = {$/;"	v	file:
ll_load	liblua/loadlib.c	/^static void *ll_load (lua_State *L, const char *path, int seeglb) {$/;"	f	file:
ll_loadfunc	liblua/loadlib.c	/^static int ll_loadfunc (lua_State *L, const char *path, const char *sym) {$/;"	f	file:
ll_loadlib	liblua/loadlib.c	/^static int ll_loadlib (lua_State *L) {$/;"	f	file:
ll_module	liblua/loadlib.c	/^static int ll_module (lua_State *L) {$/;"	f	file:
ll_require	liblua/loadlib.c	/^static int ll_require (lua_State *L) {$/;"	f	file:
ll_searchpath	liblua/loadlib.c	/^static int ll_searchpath (lua_State *L) {$/;"	f	file:
ll_seeall	liblua/loadlib.c	/^static int ll_seeall (lua_State *L) {$/;"	f	file:
ll_sym	liblua/loadlib.c	/^static lua_CFunction ll_sym (lua_State *L, void *lib, const char *sym) {$/;"	f	file:
ll_unloadlib	liblua/loadlib.c	/^static void ll_unloadlib (void *lib) {$/;"	f	file:
llex	liblua/llex.c	/^static int llex (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
llex_c	liblua/llex.c	/^#define llex_c$/;"	d	file:
llex_h	liblua/llex.h	/^#define llex_h$/;"	d
lli	client/proxmark3.h	/^#define lli /;"	d
lli	tools/mfkey/mfkey32.c	/^#define lli /;"	d	file:
lli	tools/mfkey/mfkey64.c	/^#define lli /;"	d	file:
llimits_h	liblua/llimits.h	/^#define llimits_h$/;"	d
llx	client/nonce2key/nonce2key.c	/^#define llx /;"	d	file:
llx	client/proxmark3.h	/^#define llx /;"	d
llx	tools/mfkey/mfkey32.c	/^#define llx /;"	d	file:
llx	tools/mfkey/mfkey64.c	/^#define llx /;"	d	file:
llx	tools/nonce2key/nonce2key.c	/^#define llx /;"	d	file:
lmathlib_c	liblua/lmathlib.c	/^#define lmathlib_c$/;"	d	file:
lmem_c	liblua/lmem.c	/^#define lmem_c$/;"	d	file:
lmem_h	liblua/lmem.h	/^#define lmem_h$/;"	d
lmemfind	liblua/lstrlib.c	/^static const char *lmemfind (const char *s1, size_t l1,$/;"	f	file:
lmod	liblua/lobject.h	/^#define lmod(/;"	d
lo_edge_detect	fpga/lo_edge_detect.v	/^module lo_edge_detect($/;"	m
lo_is_125khz	fpga/testbed_lo_read.v	/^	reg  lo_is_125khz;$/;"	r
lo_passthru	fpga/lo_passthru.v	/^module lo_passthru($/;"	m
lo_read	fpga/lo_read.v	/^module lo_read($/;"	m
lo_simulate	fpga/lo_simulate.v	/^module lo_simulate($/;"	m
loadGeneralInfo	client/lualibs/htmlskel.lua	/^	function loadGeneralInfo(data, info)$/;"	f
loadIntoTable	client/lualibs/htmlskel.lua	/^	function loadIntoTable(data, info, ascii)$/;"	f
loadTraceCard	client/mifarehost.c	/^int loadTraceCard(uint8_t *tuid) {$/;"	f
load_aux	liblua/lbaselib.c	/^static int load_aux (lua_State *L, int status, int envidx) {$/;"	f	file:
loadedlibs	liblua/linit.c	/^static const luaL_Reg loadedlibs[] = {$/;"	v	file:
loadfunc	liblua/loadlib.c	/^static int loadfunc (lua_State *L, const char *filename, const char *modname) {$/;"	f	file:
loadlib_c	liblua/loadlib.c	/^#define loadlib_c$/;"	d	file:
loadline	liblua/lua.c	/^static int loadline (lua_State *L) {$/;"	f	file:
lobject_c	liblua/lobject.c	/^#define lobject_c$/;"	d	file:
lobject_h	liblua/lobject.h	/^#define lobject_h$/;"	d
local get 	client/scripts/mifare_autopwn.lua	/^			local get = function(num)$/;"	f
localfunc	liblua/lparser.c	/^static void localfunc (LexState *ls) {$/;"	f	file:
localstat	liblua/lparser.c	/^static void localstat (LexState *ls) {$/;"	f	file:
locvars	liblua/lobject.h	/^  LocVar *locvars;  \/* information about local variables (debug information) *\/$/;"	m	struct:Proto
logHexFileName	client/mifarehost.c	/^char logHexFileName[FILE_PATH_SIZE] = {0x00};$/;"	v
logfilename	client/ui.c	/^static char *logfilename = "proxmark3.log";$/;"	v	file:
lookahead	liblua/llex.h	/^  Token lookahead;  \/* look ahead token *\/$/;"	m	struct:LexState
lookup	client/lualibs/htmlskel.lua	/^		function lookup(atqa, sak)$/;"	f
lookupChipID	client/cmdhw.c	/^static void lookupChipID(uint32_t iChipID)$/;"	f	file:
lookupManufacturer 	client/lualibs/taglib.lua	/^	lookupManufacturer = function (value)$/;"	f
lopcodes_c	liblua/lopcodes.c	/^#define lopcodes_c$/;"	d	file:
lopcodes_h	liblua/lopcodes.h	/^#define lopcodes_h$/;"	d
loslib_c	liblua/loslib.c	/^#define loslib_c$/;"	d	file:
low	fpga/tests/plot_edgedetect.py	/^low = map(lambda x: ord(x), low)$/;"	v
low	fpga/tests/plot_edgedetect.py	/^low = open(BASENAME + ".low").read()$/;"	v
low_threshold	fpga/lo_edge_detect.v	/^wire [7:0] high_threshold, highz_threshold, lowz_threshold, low_threshold;$/;"	n
low_threshold	fpga/tests/tb_lf_edge_detect.v	/^    wire [7:0] low_threshold;$/;"	n
lowz	fpga/tests/plot_edgedetect.py	/^lowz = map(lambda x: ord(x), lowz)$/;"	v
lowz	fpga/tests/plot_edgedetect.py	/^lowz = open(BASENAME + ".lowz").read()$/;"	v
lowz_threshold	fpga/lf_edge_detect.v	/^	output [7:0] lowz_threshold, output [7:0] low_threshold,$/;"	p
lowz_threshold	fpga/lo_edge_detect.v	/^wire [7:0] high_threshold, highz_threshold, lowz_threshold, low_threshold;$/;"	n
lowz_threshold	fpga/tests/tb_lf_edge_detect.v	/^    wire [7:0] lowz_threshold;$/;"	n
lp20khz_1MSa_iir_filter	fpga/lp20khz_1MSa_iir_filter.v	/^module lp20khz_1MSa_iir_filter(input clk, input [7:0] adc_d, output rdy, output [7:0] out);$/;"	m
lp20khz_1MSa_iir_filter_tb	fpga/tests/tb_lp20khz_1MSa_iir_filter.v	/^module lp20khz_1MSa_iir_filter_tb;$/;"	m
lparser_c	liblua/lparser.c	/^#define lparser_c$/;"	d	file:
lparser_h	liblua/lparser.h	/^#define lparser_h$/;"	d
lrc	tools/xorcheck.py	/^lrc= 0x00$/;"	v
ls	liblua/lparser.h	/^  struct LexState *ls;  \/* lexical state *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::LexState
lsizenode	liblua/lobject.h	/^  lu_byte lsizenode;  \/* log2 of size of `node' array *\/$/;"	m	struct:Table
lsl	armsrc/util.c	/^void lsl (uint8_t *data, size_t len) {$/;"	f
lstate_c	liblua/lstate.c	/^#define lstate_c$/;"	d	file:
lstate_h	liblua/lstate.h	/^#define lstate_h$/;"	d
lstop	liblua/lua.c	/^static void lstop (lua_State *L, lua_Debug *ar) {$/;"	f	file:
lstring_c	liblua/lstring.c	/^#define lstring_c$/;"	d	file:
lstring_h	liblua/lstring.h	/^#define lstring_h$/;"	d
lstrlib_c	liblua/lstrlib.c	/^#define lstrlib_c$/;"	d	file:
ltable_c	liblua/ltable.c	/^#define ltable_c$/;"	d	file:
ltable_h	liblua/ltable.h	/^#define ltable_h$/;"	d
ltablib_c	liblua/ltablib.c	/^#define ltablib_c$/;"	d	file:
ltm_c	liblua/ltm.c	/^#define ltm_c$/;"	d	file:
ltm_h	liblua/ltm.h	/^#define ltm_h$/;"	d
ltolower	liblua/lctype.h	/^#define ltolower(/;"	d
lu_byte	liblua/llimits.h	/^typedef unsigned char lu_byte;$/;"	t
lu_int32	liblua/llimits.h	/^typedef unsigned LUA_INT32 lu_int32;$/;"	t
lu_mem	liblua/llimits.h	/^typedef LUAI_UMEM lu_mem;$/;"	t
luaB_assert	liblua/lbaselib.c	/^static int luaB_assert (lua_State *L) {$/;"	f	file:
luaB_auxwrap	liblua/lcorolib.c	/^static int luaB_auxwrap (lua_State *L) {$/;"	f	file:
luaB_cocreate	liblua/lcorolib.c	/^static int luaB_cocreate (lua_State *L) {$/;"	f	file:
luaB_collectgarbage	liblua/lbaselib.c	/^static int luaB_collectgarbage (lua_State *L) {$/;"	f	file:
luaB_coresume	liblua/lcorolib.c	/^static int luaB_coresume (lua_State *L) {$/;"	f	file:
luaB_corunning	liblua/lcorolib.c	/^static int luaB_corunning (lua_State *L) {$/;"	f	file:
luaB_costatus	liblua/lcorolib.c	/^static int luaB_costatus (lua_State *L) {$/;"	f	file:
luaB_cowrap	liblua/lcorolib.c	/^static int luaB_cowrap (lua_State *L) {$/;"	f	file:
luaB_dofile	liblua/lbaselib.c	/^static int luaB_dofile (lua_State *L) {$/;"	f	file:
luaB_error	liblua/lbaselib.c	/^static int luaB_error (lua_State *L) {$/;"	f	file:
luaB_getmetatable	liblua/lbaselib.c	/^static int luaB_getmetatable (lua_State *L) {$/;"	f	file:
luaB_ipairs	liblua/lbaselib.c	/^static int luaB_ipairs (lua_State *L) {$/;"	f	file:
luaB_load	liblua/lbaselib.c	/^static int luaB_load (lua_State *L) {$/;"	f	file:
luaB_loadfile	liblua/lbaselib.c	/^static int luaB_loadfile (lua_State *L) {$/;"	f	file:
luaB_next	liblua/lbaselib.c	/^static int luaB_next (lua_State *L) {$/;"	f	file:
luaB_pairs	liblua/lbaselib.c	/^static int luaB_pairs (lua_State *L) {$/;"	f	file:
luaB_pcall	liblua/lbaselib.c	/^static int luaB_pcall (lua_State *L) {$/;"	f	file:
luaB_print	liblua/lbaselib.c	/^static int luaB_print (lua_State *L) {$/;"	f	file:
luaB_rawequal	liblua/lbaselib.c	/^static int luaB_rawequal (lua_State *L) {$/;"	f	file:
luaB_rawget	liblua/lbaselib.c	/^static int luaB_rawget (lua_State *L) {$/;"	f	file:
luaB_rawlen	liblua/lbaselib.c	/^static int luaB_rawlen (lua_State *L) {$/;"	f	file:
luaB_rawset	liblua/lbaselib.c	/^static int luaB_rawset (lua_State *L) {$/;"	f	file:
luaB_select	liblua/lbaselib.c	/^static int luaB_select (lua_State *L) {$/;"	f	file:
luaB_setmetatable	liblua/lbaselib.c	/^static int luaB_setmetatable (lua_State *L) {$/;"	f	file:
luaB_tonumber	liblua/lbaselib.c	/^static int luaB_tonumber (lua_State *L) {$/;"	f	file:
luaB_tostring	liblua/lbaselib.c	/^static int luaB_tostring (lua_State *L) {$/;"	f	file:
luaB_type	liblua/lbaselib.c	/^static int luaB_type (lua_State *L) {$/;"	f	file:
luaB_xpcall	liblua/lbaselib.c	/^static int luaB_xpcall (lua_State *L) {$/;"	f	file:
luaB_yield	liblua/lcorolib.c	/^static int luaB_yield (lua_State *L) {$/;"	f	file:
luaC_barrier	liblua/lgc.h	/^#define luaC_barrier(/;"	d
luaC_barrier_	liblua/lgc.c	/^void luaC_barrier_ (lua_State *L, GCObject *o, GCObject *v) {$/;"	f
luaC_barrierback	liblua/lgc.h	/^#define luaC_barrierback(/;"	d
luaC_barrierback_	liblua/lgc.c	/^void luaC_barrierback_ (lua_State *L, GCObject *o) {$/;"	f
luaC_barrierproto	liblua/lgc.h	/^#define luaC_barrierproto(/;"	d
luaC_barrierproto_	liblua/lgc.c	/^LUAI_FUNC void luaC_barrierproto_ (lua_State *L, Proto *p, Closure *c) {$/;"	f
luaC_changemode	liblua/lgc.c	/^void luaC_changemode (lua_State *L, int mode) {$/;"	f
luaC_checkGC	liblua/lgc.h	/^#define luaC_checkGC(/;"	d
luaC_checkfinalizer	liblua/lgc.c	/^void luaC_checkfinalizer (lua_State *L, GCObject *o, Table *mt) {$/;"	f
luaC_checkupvalcolor	liblua/lgc.c	/^void luaC_checkupvalcolor (global_State *g, UpVal *uv) {$/;"	f
luaC_condGC	liblua/lgc.h	/^#define luaC_condGC(/;"	d
luaC_forcestep	liblua/lgc.c	/^void luaC_forcestep (lua_State *L) {$/;"	f
luaC_freeallobjects	liblua/lgc.c	/^void luaC_freeallobjects (lua_State *L) {$/;"	f
luaC_fullgc	liblua/lgc.c	/^void luaC_fullgc (lua_State *L, int isemergency) {$/;"	f
luaC_newobj	liblua/lgc.c	/^GCObject *luaC_newobj (lua_State *L, int tt, size_t sz, GCObject **list,$/;"	f
luaC_objbarrier	liblua/lgc.h	/^#define luaC_objbarrier(/;"	d
luaC_objbarrierback	liblua/lgc.h	/^#define luaC_objbarrierback(/;"	d
luaC_runtilstate	liblua/lgc.c	/^void luaC_runtilstate (lua_State *L, int statesmask) {$/;"	f
luaC_step	liblua/lgc.c	/^void luaC_step (lua_State *L) {$/;"	f
luaC_white	liblua/lgc.h	/^#define luaC_white(/;"	d
luaD_call	liblua/ldo.c	/^void luaD_call (lua_State *L, StkId func, int nResults, int allowyield) {$/;"	f
luaD_checkstack	liblua/ldo.h	/^#define luaD_checkstack(/;"	d
luaD_growstack	liblua/ldo.c	/^void luaD_growstack (lua_State *L, int n) {$/;"	f
luaD_hook	liblua/ldo.c	/^void luaD_hook (lua_State *L, int event, int line) {$/;"	f
luaD_pcall	liblua/ldo.c	/^int luaD_pcall (lua_State *L, Pfunc func, void *u,$/;"	f
luaD_poscall	liblua/ldo.c	/^int luaD_poscall (lua_State *L, StkId firstResult) {$/;"	f
luaD_precall	liblua/ldo.c	/^int luaD_precall (lua_State *L, StkId func, int nresults) {$/;"	f
luaD_protectedparser	liblua/ldo.c	/^int luaD_protectedparser (lua_State *L, ZIO *z, const char *name,$/;"	f
luaD_rawrunprotected	liblua/ldo.c	/^int luaD_rawrunprotected (lua_State *L, Pfunc f, void *ud) {$/;"	f
luaD_reallocstack	liblua/ldo.c	/^void luaD_reallocstack (lua_State *L, int newsize) {$/;"	f
luaD_shrinkstack	liblua/ldo.c	/^void luaD_shrinkstack (lua_State *L) {$/;"	f
luaD_throw	liblua/ldo.c	/^l_noret luaD_throw (lua_State *L, int errcode) {$/;"	f
luaE_extendCI	liblua/lstate.c	/^CallInfo *luaE_extendCI (lua_State *L) {$/;"	f
luaE_freeCI	liblua/lstate.c	/^void luaE_freeCI (lua_State *L) {$/;"	f
luaE_freethread	liblua/lstate.c	/^void luaE_freethread (lua_State *L, lua_State *L1) {$/;"	f
luaE_setdebt	liblua/lstate.c	/^void luaE_setdebt (global_State *g, l_mem debt) {$/;"	f
luaF_close	liblua/lfunc.c	/^void luaF_close (lua_State *L, StkId level) {$/;"	f
luaF_findupval	liblua/lfunc.c	/^UpVal *luaF_findupval (lua_State *L, StkId level) {$/;"	f
luaF_freeproto	liblua/lfunc.c	/^void luaF_freeproto (lua_State *L, Proto *f) {$/;"	f
luaF_freeupval	liblua/lfunc.c	/^void luaF_freeupval (lua_State *L, UpVal *uv) {$/;"	f
luaF_getlocalname	liblua/lfunc.c	/^const char *luaF_getlocalname (const Proto *f, int local_number, int pc) {$/;"	f
luaF_newCclosure	liblua/lfunc.c	/^Closure *luaF_newCclosure (lua_State *L, int n) {$/;"	f
luaF_newLclosure	liblua/lfunc.c	/^Closure *luaF_newLclosure (lua_State *L, int n) {$/;"	f
luaF_newproto	liblua/lfunc.c	/^Proto *luaF_newproto (lua_State *L) {$/;"	f
luaF_newupval	liblua/lfunc.c	/^UpVal *luaF_newupval (lua_State *L) {$/;"	f
luaG_aritherror	liblua/ldebug.c	/^l_noret luaG_aritherror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_concaterror	liblua/ldebug.c	/^l_noret luaG_concaterror (lua_State *L, StkId p1, StkId p2) {$/;"	f
luaG_errormsg	liblua/ldebug.c	/^l_noret luaG_errormsg (lua_State *L) {$/;"	f
luaG_ordererror	liblua/ldebug.c	/^l_noret luaG_ordererror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_runerror	liblua/ldebug.c	/^l_noret luaG_runerror (lua_State *L, const char *fmt, ...) {$/;"	f
luaG_typeerror	liblua/ldebug.c	/^l_noret luaG_typeerror (lua_State *L, const TValue *o, const char *op) {$/;"	f
luaH_free	liblua/ltable.c	/^void luaH_free (lua_State *L, Table *t) {$/;"	f
luaH_get	liblua/ltable.c	/^const TValue *luaH_get (Table *t, const TValue *key) {$/;"	f
luaH_getint	liblua/ltable.c	/^const TValue *luaH_getint (Table *t, int key) {$/;"	f
luaH_getn	liblua/ltable.c	/^int luaH_getn (Table *t) {$/;"	f
luaH_getstr	liblua/ltable.c	/^const TValue *luaH_getstr (Table *t, TString *key) {$/;"	f
luaH_isdummy	liblua/ltable.c	/^int luaH_isdummy (Node *n) { return isdummy(n); }$/;"	f
luaH_mainposition	liblua/ltable.c	/^Node *luaH_mainposition (const Table *t, const TValue *key) {$/;"	f
luaH_new	liblua/ltable.c	/^Table *luaH_new (lua_State *L) {$/;"	f
luaH_newkey	liblua/ltable.c	/^TValue *luaH_newkey (lua_State *L, Table *t, const TValue *key) {$/;"	f
luaH_next	liblua/ltable.c	/^int luaH_next (lua_State *L, Table *t, StkId key) {$/;"	f
luaH_resize	liblua/ltable.c	/^void luaH_resize (lua_State *L, Table *t, int nasize, int nhsize) {$/;"	f
luaH_resizearray	liblua/ltable.c	/^void luaH_resizearray (lua_State *L, Table *t, int nasize) {$/;"	f
luaH_set	liblua/ltable.c	/^TValue *luaH_set (lua_State *L, Table *t, const TValue *key) {$/;"	f
luaH_setint	liblua/ltable.c	/^void luaH_setint (lua_State *L, Table *t, int key, TValue *value) {$/;"	f
luaK_checkstack	liblua/lcode.c	/^void luaK_checkstack (FuncState *fs, int n) {$/;"	f
luaK_code	liblua/lcode.c	/^static int luaK_code (FuncState *fs, Instruction i) {$/;"	f	file:
luaK_codeABC	liblua/lcode.c	/^int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {$/;"	f
luaK_codeABx	liblua/lcode.c	/^int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {$/;"	f
luaK_codeAsBx	liblua/lcode.h	/^#define luaK_codeAsBx(/;"	d
luaK_codek	liblua/lcode.c	/^int luaK_codek (FuncState *fs, int reg, int k) {$/;"	f
luaK_concat	liblua/lcode.c	/^void luaK_concat (FuncState *fs, int *l1, int l2) {$/;"	f
luaK_dischargevars	liblua/lcode.c	/^void luaK_dischargevars (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2RK	liblua/lcode.c	/^int luaK_exp2RK (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2anyreg	liblua/lcode.c	/^int luaK_exp2anyreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2anyregup	liblua/lcode.c	/^void luaK_exp2anyregup (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2nextreg	liblua/lcode.c	/^void luaK_exp2nextreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2val	liblua/lcode.c	/^void luaK_exp2val (FuncState *fs, expdesc *e) {$/;"	f
luaK_fixline	liblua/lcode.c	/^void luaK_fixline (FuncState *fs, int line) {$/;"	f
luaK_getlabel	liblua/lcode.c	/^int luaK_getlabel (FuncState *fs) {$/;"	f
luaK_goiffalse	liblua/lcode.c	/^void luaK_goiffalse (FuncState *fs, expdesc *e) {$/;"	f
luaK_goiftrue	liblua/lcode.c	/^void luaK_goiftrue (FuncState *fs, expdesc *e) {$/;"	f
luaK_indexed	liblua/lcode.c	/^void luaK_indexed (FuncState *fs, expdesc *t, expdesc *k) {$/;"	f
luaK_infix	liblua/lcode.c	/^void luaK_infix (FuncState *fs, BinOpr op, expdesc *v) {$/;"	f
luaK_jump	liblua/lcode.c	/^int luaK_jump (FuncState *fs) {$/;"	f
luaK_jumpto	liblua/lcode.h	/^#define luaK_jumpto(/;"	d
luaK_nil	liblua/lcode.c	/^void luaK_nil (FuncState *fs, int from, int n) {$/;"	f
luaK_numberK	liblua/lcode.c	/^int luaK_numberK (FuncState *fs, lua_Number r) {$/;"	f
luaK_patchclose	liblua/lcode.c	/^LUAI_FUNC void luaK_patchclose (FuncState *fs, int list, int level) {$/;"	f
luaK_patchlist	liblua/lcode.c	/^void luaK_patchlist (FuncState *fs, int list, int target) {$/;"	f
luaK_patchtohere	liblua/lcode.c	/^void luaK_patchtohere (FuncState *fs, int list) {$/;"	f
luaK_posfix	liblua/lcode.c	/^void luaK_posfix (FuncState *fs, BinOpr op,$/;"	f
luaK_prefix	liblua/lcode.c	/^void luaK_prefix (FuncState *fs, UnOpr op, expdesc *e, int line) {$/;"	f
luaK_reserveregs	liblua/lcode.c	/^void luaK_reserveregs (FuncState *fs, int n) {$/;"	f
luaK_ret	liblua/lcode.c	/^void luaK_ret (FuncState *fs, int first, int nret) {$/;"	f
luaK_self	liblua/lcode.c	/^void luaK_self (FuncState *fs, expdesc *e, expdesc *key) {$/;"	f
luaK_setlist	liblua/lcode.c	/^void luaK_setlist (FuncState *fs, int base, int nelems, int tostore) {$/;"	f
luaK_setmultret	liblua/lcode.h	/^#define luaK_setmultret(/;"	d
luaK_setoneret	liblua/lcode.c	/^void luaK_setoneret (FuncState *fs, expdesc *e) {$/;"	f
luaK_setreturns	liblua/lcode.c	/^void luaK_setreturns (FuncState *fs, expdesc *e, int nresults) {$/;"	f
luaK_storevar	liblua/lcode.c	/^void luaK_storevar (FuncState *fs, expdesc *var, expdesc *ex) {$/;"	f
luaK_stringK	liblua/lcode.c	/^int luaK_stringK (FuncState *fs, TString *s) {$/;"	f
luaL_Buffer	liblua/lauxlib.h	/^typedef struct luaL_Buffer {$/;"	s
luaL_Buffer	liblua/lauxlib.h	/^} luaL_Buffer;$/;"	t	typeref:struct:luaL_Buffer
luaL_Reg	liblua/lauxlib.h	/^typedef struct luaL_Reg {$/;"	s
luaL_Reg	liblua/lauxlib.h	/^} luaL_Reg;$/;"	t	typeref:struct:luaL_Reg
luaL_Stream	liblua/lauxlib.h	/^typedef struct luaL_Stream {$/;"	s
luaL_Stream	liblua/lauxlib.h	/^} luaL_Stream;$/;"	t	typeref:struct:luaL_Stream
luaL_addchar	liblua/lauxlib.h	/^#define luaL_addchar(/;"	d
luaL_addlstring	liblua/lauxlib.c	/^LUALIB_API void luaL_addlstring (luaL_Buffer *B, const char *s, size_t l) {$/;"	f
luaL_addsize	liblua/lauxlib.h	/^#define luaL_addsize(/;"	d
luaL_addstring	liblua/lauxlib.c	/^LUALIB_API void luaL_addstring (luaL_Buffer *B, const char *s) {$/;"	f
luaL_addvalue	liblua/lauxlib.c	/^LUALIB_API void luaL_addvalue (luaL_Buffer *B) {$/;"	f
luaL_argcheck	liblua/lauxlib.h	/^#define luaL_argcheck(/;"	d
luaL_argerror	liblua/lauxlib.c	/^LUALIB_API int luaL_argerror (lua_State *L, int narg, const char *extramsg) {$/;"	f
luaL_buffinit	liblua/lauxlib.c	/^LUALIB_API void luaL_buffinit (lua_State *L, luaL_Buffer *B) {$/;"	f
luaL_buffinitsize	liblua/lauxlib.c	/^LUALIB_API char *luaL_buffinitsize (lua_State *L, luaL_Buffer *B, size_t sz) {$/;"	f
luaL_callmeta	liblua/lauxlib.c	/^LUALIB_API int luaL_callmeta (lua_State *L, int obj, const char *event) {$/;"	f
luaL_checkany	liblua/lauxlib.c	/^LUALIB_API void luaL_checkany (lua_State *L, int narg) {$/;"	f
luaL_checkint	liblua/lauxlib.h	/^#define luaL_checkint(/;"	d
luaL_checkinteger	liblua/lauxlib.c	/^LUALIB_API lua_Integer luaL_checkinteger (lua_State *L, int narg) {$/;"	f
luaL_checklong	liblua/lauxlib.h	/^#define luaL_checklong(/;"	d
luaL_checklstring	liblua/lauxlib.c	/^LUALIB_API const char *luaL_checklstring (lua_State *L, int narg, size_t *len) {$/;"	f
luaL_checknumber	liblua/lauxlib.c	/^LUALIB_API lua_Number luaL_checknumber (lua_State *L, int narg) {$/;"	f
luaL_checkoption	liblua/lauxlib.c	/^LUALIB_API int luaL_checkoption (lua_State *L, int narg, const char *def,$/;"	f
luaL_checkstack	liblua/lauxlib.c	/^LUALIB_API void luaL_checkstack (lua_State *L, int space, const char *msg) {$/;"	f
luaL_checkstring	liblua/lauxlib.h	/^#define luaL_checkstring(/;"	d
luaL_checktype	liblua/lauxlib.c	/^LUALIB_API void luaL_checktype (lua_State *L, int narg, int t) {$/;"	f
luaL_checkudata	liblua/lauxlib.c	/^LUALIB_API void *luaL_checkudata (lua_State *L, int ud, const char *tname) {$/;"	f
luaL_checkunsigned	liblua/lauxlib.c	/^LUALIB_API lua_Unsigned luaL_checkunsigned (lua_State *L, int narg) {$/;"	f
luaL_checkversion	liblua/lauxlib.h	/^#define luaL_checkversion(/;"	d
luaL_checkversion_	liblua/lauxlib.c	/^LUALIB_API void luaL_checkversion_ (lua_State *L, lua_Number ver) {$/;"	f
luaL_dofile	liblua/lauxlib.h	/^#define luaL_dofile(/;"	d
luaL_dostring	liblua/lauxlib.h	/^#define luaL_dostring(/;"	d
luaL_error	liblua/lauxlib.c	/^LUALIB_API int luaL_error (lua_State *L, const char *fmt, ...) {$/;"	f
luaL_execresult	liblua/lauxlib.c	/^LUALIB_API int luaL_execresult (lua_State *L, int stat) {$/;"	f
luaL_fileresult	liblua/lauxlib.c	/^LUALIB_API int luaL_fileresult (lua_State *L, int stat, const char *fname) {$/;"	f
luaL_findtable	liblua/lauxlib.c	/^static const char *luaL_findtable (lua_State *L, int idx,$/;"	f	file:
luaL_getmetafield	liblua/lauxlib.c	/^LUALIB_API int luaL_getmetafield (lua_State *L, int obj, const char *event) {$/;"	f
luaL_getmetatable	liblua/lauxlib.h	/^#define luaL_getmetatable(/;"	d
luaL_getsubtable	liblua/lauxlib.c	/^LUALIB_API int luaL_getsubtable (lua_State *L, int idx, const char *fname) {$/;"	f
luaL_gsub	liblua/lauxlib.c	/^LUALIB_API const char *luaL_gsub (lua_State *L, const char *s, const char *p,$/;"	f
luaL_len	liblua/lauxlib.c	/^LUALIB_API int luaL_len (lua_State *L, int idx) {$/;"	f
luaL_loadbuffer	liblua/lauxlib.h	/^#define luaL_loadbuffer(/;"	d
luaL_loadbufferx	liblua/lauxlib.c	/^LUALIB_API int luaL_loadbufferx (lua_State *L, const char *buff, size_t size,$/;"	f
luaL_loadfile	liblua/lauxlib.h	/^#define luaL_loadfile(/;"	d
luaL_loadfilex	liblua/lauxlib.c	/^LUALIB_API int luaL_loadfilex (lua_State *L, const char *filename,$/;"	f
luaL_loadstring	liblua/lauxlib.c	/^LUALIB_API int luaL_loadstring (lua_State *L, const char *s) {$/;"	f
luaL_newlib	liblua/lauxlib.h	/^#define luaL_newlib(/;"	d
luaL_newlibtable	liblua/lauxlib.h	/^#define luaL_newlibtable(/;"	d
luaL_newmetatable	liblua/lauxlib.c	/^LUALIB_API int luaL_newmetatable (lua_State *L, const char *tname) {$/;"	f
luaL_newstate	liblua/lauxlib.c	/^LUALIB_API lua_State *luaL_newstate (void) {$/;"	f
luaL_openlib	liblua/lauxlib.c	/^LUALIB_API void luaL_openlib (lua_State *L, const char *libname,$/;"	f
luaL_openlibs	liblua/linit.c	/^LUALIB_API void luaL_openlibs (lua_State *L) {$/;"	f
luaL_opt	liblua/lauxlib.h	/^#define luaL_opt(/;"	d
luaL_optint	liblua/lauxlib.h	/^#define luaL_optint(/;"	d
luaL_optinteger	liblua/lauxlib.c	/^LUALIB_API lua_Integer luaL_optinteger (lua_State *L, int narg,$/;"	f
luaL_optlong	liblua/lauxlib.h	/^#define luaL_optlong(/;"	d
luaL_optlstring	liblua/lauxlib.c	/^LUALIB_API const char *luaL_optlstring (lua_State *L, int narg,$/;"	f
luaL_optnumber	liblua/lauxlib.c	/^LUALIB_API lua_Number luaL_optnumber (lua_State *L, int narg, lua_Number def) {$/;"	f
luaL_optstring	liblua/lauxlib.h	/^#define luaL_optstring(/;"	d
luaL_optunsigned	liblua/lauxlib.c	/^LUALIB_API lua_Unsigned luaL_optunsigned (lua_State *L, int narg,$/;"	f
luaL_prepbuffer	liblua/lauxlib.h	/^#define luaL_prepbuffer(/;"	d
luaL_prepbuffsize	liblua/lauxlib.c	/^LUALIB_API char *luaL_prepbuffsize (luaL_Buffer *B, size_t sz) {$/;"	f
luaL_pushmodule	liblua/lauxlib.c	/^LUALIB_API void luaL_pushmodule (lua_State *L, const char *modname,$/;"	f
luaL_pushresult	liblua/lauxlib.c	/^LUALIB_API void luaL_pushresult (luaL_Buffer *B) {$/;"	f
luaL_pushresultsize	liblua/lauxlib.c	/^LUALIB_API void luaL_pushresultsize (luaL_Buffer *B, size_t sz) {$/;"	f
luaL_ref	liblua/lauxlib.c	/^LUALIB_API int luaL_ref (lua_State *L, int t) {$/;"	f
luaL_register	liblua/lauxlib.h	/^#define luaL_register(/;"	d
luaL_requiref	liblua/lauxlib.c	/^LUALIB_API void luaL_requiref (lua_State *L, const char *modname,$/;"	f
luaL_setfuncs	liblua/lauxlib.c	/^LUALIB_API void luaL_setfuncs (lua_State *L, const luaL_Reg *l, int nup) {$/;"	f
luaL_setmetatable	liblua/lauxlib.c	/^LUALIB_API void luaL_setmetatable (lua_State *L, const char *tname) {$/;"	f
luaL_testudata	liblua/lauxlib.c	/^LUALIB_API void *luaL_testudata (lua_State *L, int ud, const char *tname) {$/;"	f
luaL_tolstring	liblua/lauxlib.c	/^LUALIB_API const char *luaL_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f
luaL_traceback	liblua/lauxlib.c	/^LUALIB_API void luaL_traceback (lua_State *L, lua_State *L1,$/;"	f
luaL_typename	liblua/lauxlib.h	/^#define luaL_typename(/;"	d
luaL_unref	liblua/lauxlib.c	/^LUALIB_API void luaL_unref (lua_State *L, int t, int ref) {$/;"	f
luaL_where	liblua/lauxlib.c	/^LUALIB_API void luaL_where (lua_State *L, int level) {$/;"	f
luaM_free	liblua/lmem.h	/^#define luaM_free(/;"	d
luaM_freearray	liblua/lmem.h	/^#define luaM_freearray(/;"	d
luaM_freemem	liblua/lmem.h	/^#define luaM_freemem(/;"	d
luaM_growaux_	liblua/lmem.c	/^void *luaM_growaux_ (lua_State *L, void *block, int *size, size_t size_elems,$/;"	f
luaM_growvector	liblua/lmem.h	/^#define luaM_growvector(/;"	d
luaM_malloc	liblua/lmem.h	/^#define luaM_malloc(/;"	d
luaM_new	liblua/lmem.h	/^#define luaM_new(/;"	d
luaM_newobject	liblua/lmem.h	/^#define luaM_newobject(/;"	d
luaM_newvector	liblua/lmem.h	/^#define luaM_newvector(/;"	d
luaM_realloc_	liblua/lmem.c	/^void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {$/;"	f
luaM_reallocv	liblua/lmem.h	/^#define luaM_reallocv(/;"	d
luaM_reallocvector	liblua/lmem.h	/^#define luaM_reallocvector(/;"	d
luaM_toobig	liblua/lmem.c	/^l_noret luaM_toobig (lua_State *L) {$/;"	f
luaO_arith	liblua/lobject.c	/^lua_Number luaO_arith (int op, lua_Number v1, lua_Number v2) {$/;"	f
luaO_ceillog2	liblua/lobject.c	/^int luaO_ceillog2 (unsigned int x) {$/;"	f
luaO_chunkid	liblua/lobject.c	/^void luaO_chunkid (char *out, const char *source, size_t bufflen) {$/;"	f
luaO_fb2int	liblua/lobject.c	/^int luaO_fb2int (int x) {$/;"	f
luaO_hexavalue	liblua/lobject.c	/^int luaO_hexavalue (int c) {$/;"	f
luaO_int2fb	liblua/lobject.c	/^int luaO_int2fb (unsigned int x) {$/;"	f
luaO_nilobject	liblua/lobject.h	/^#define luaO_nilobject	/;"	d
luaO_nilobject_	liblua/lobject.c	/^LUAI_DDEF const TValue luaO_nilobject_ = {NILCONSTANT};$/;"	v
luaO_nilobject_	liblua/lobject.h	/^LUAI_DDEC const TValue luaO_nilobject_;$/;"	v
luaO_pushfstring	liblua/lobject.c	/^const char *luaO_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
luaO_pushvfstring	liblua/lobject.c	/^const char *luaO_pushvfstring (lua_State *L, const char *fmt, va_list argp) {$/;"	f
luaO_str2d	liblua/lobject.c	/^int luaO_str2d (const char *s, size_t len, lua_Number *result) {$/;"	f
luaP_opmodes	liblua/lopcodes.c	/^LUAI_DDEF const lu_byte luaP_opmodes[NUM_OPCODES] = {$/;"	v
luaP_opmodes	liblua/lopcodes.h	/^LUAI_DDEC const lu_byte luaP_opmodes[NUM_OPCODES];$/;"	v
luaP_opnames	liblua/lopcodes.c	/^LUAI_DDEF const char *const luaP_opnames[NUM_OPCODES+1] = {$/;"	v
luaP_opnames	liblua/lopcodes.h	/^LUAI_DDEC const char *const luaP_opnames[NUM_OPCODES+1];  \/* opcode names *\/$/;"	v
luaS_eqlngstr	liblua/lstring.c	/^int luaS_eqlngstr (TString *a, TString *b) {$/;"	f
luaS_eqstr	liblua/lstring.c	/^int luaS_eqstr (TString *a, TString *b) {$/;"	f
luaS_fix	liblua/lstring.h	/^#define luaS_fix(/;"	d
luaS_hash	liblua/lstring.c	/^unsigned int luaS_hash (const char *str, size_t l, unsigned int seed) {$/;"	f
luaS_new	liblua/lstring.c	/^TString *luaS_new (lua_State *L, const char *str) {$/;"	f
luaS_newliteral	liblua/lstring.h	/^#define luaS_newliteral(/;"	d
luaS_newlstr	liblua/lstring.c	/^TString *luaS_newlstr (lua_State *L, const char *str, size_t l) {$/;"	f
luaS_newudata	liblua/lstring.c	/^Udata *luaS_newudata (lua_State *L, size_t s, Table *e) {$/;"	f
luaS_resize	liblua/lstring.c	/^void luaS_resize (lua_State *L, int newsize) {$/;"	f
luaT_gettm	liblua/ltm.c	/^const TValue *luaT_gettm (Table *events, TMS event, TString *ename) {$/;"	f
luaT_gettmbyobj	liblua/ltm.c	/^const TValue *luaT_gettmbyobj (lua_State *L, const TValue *o, TMS event) {$/;"	f
luaT_init	liblua/ltm.c	/^void luaT_init (lua_State *L) {$/;"	f
luaT_typenames_	liblua/ltm.c	/^LUAI_DDEF const char *const luaT_typenames_[LUA_TOTALTAGS] = {$/;"	v
luaT_typenames_	liblua/ltm.h	/^LUAI_DDEC const char *const luaT_typenames_[LUA_TOTALTAGS];$/;"	v
luaU_dump	liblua/ldump.c	/^int luaU_dump (lua_State* L, const Proto* f, lua_Writer w, void* data, int strip)$/;"	f
luaU_header	liblua/lundump.c	/^void luaU_header (lu_byte* h)$/;"	f
luaU_print	liblua/luac.c	/^#define luaU_print	/;"	d	file:
luaU_undump	liblua/lundump.c	/^Closure* luaU_undump (lua_State* L, ZIO* Z, Mbuffer* buff, const char* name)$/;"	f
luaV_arith	liblua/lvm.c	/^void luaV_arith (lua_State *L, StkId ra, const TValue *rb,$/;"	f
luaV_concat	liblua/lvm.c	/^void luaV_concat (lua_State *L, int total) {$/;"	f
luaV_equalobj_	liblua/lvm.c	/^int luaV_equalobj_ (lua_State *L, const TValue *t1, const TValue *t2) {$/;"	f
luaV_execute	liblua/lvm.c	/^void luaV_execute (lua_State *L) {$/;"	f
luaV_finishOp	liblua/lvm.c	/^void luaV_finishOp (lua_State *L) {$/;"	f
luaV_gettable	liblua/lvm.c	/^void luaV_gettable (lua_State *L, const TValue *t, TValue *key, StkId val) {$/;"	f
luaV_lessequal	liblua/lvm.c	/^int luaV_lessequal (lua_State *L, const TValue *l, const TValue *r) {$/;"	f
luaV_lessthan	liblua/lvm.c	/^int luaV_lessthan (lua_State *L, const TValue *l, const TValue *r) {$/;"	f
luaV_objlen	liblua/lvm.c	/^void luaV_objlen (lua_State *L, StkId ra, const TValue *rb) {$/;"	f
luaV_rawequalobj	liblua/lvm.h	/^#define luaV_rawequalobj(/;"	d
luaV_settable	liblua/lvm.c	/^void luaV_settable (lua_State *L, const TValue *t, TValue *key, StkId val) {$/;"	f
luaV_tonumber	liblua/lvm.c	/^const TValue *luaV_tonumber (const TValue *obj, TValue *n) {$/;"	f
luaV_tostring	liblua/lvm.c	/^int luaV_tostring (lua_State *L, StkId obj) {$/;"	f
luaX_init	liblua/llex.c	/^void luaX_init (lua_State *L) {$/;"	f
luaX_lookahead	liblua/llex.c	/^int luaX_lookahead (LexState *ls) {$/;"	f
luaX_newstring	liblua/llex.c	/^TString *luaX_newstring (LexState *ls, const char *str, size_t l) {$/;"	f
luaX_next	liblua/llex.c	/^void luaX_next (LexState *ls) {$/;"	f
luaX_setinput	liblua/llex.c	/^void luaX_setinput (lua_State *L, LexState *ls, ZIO *z, TString *source,$/;"	f
luaX_syntaxerror	liblua/llex.c	/^l_noret luaX_syntaxerror (LexState *ls, const char *msg) {$/;"	f
luaX_token2str	liblua/llex.c	/^const char *luaX_token2str (LexState *ls, int token) {$/;"	f
luaX_tokens	liblua/llex.c	/^static const char *const luaX_tokens [] = {$/;"	v	file:
luaY_parser	liblua/lparser.c	/^Closure *luaY_parser (lua_State *L, ZIO *z, Mbuffer *buff,$/;"	f
luaZ_buffer	liblua/lzio.h	/^#define luaZ_buffer(/;"	d
luaZ_bufflen	liblua/lzio.h	/^#define luaZ_bufflen(/;"	d
luaZ_fill	liblua/lzio.c	/^int luaZ_fill (ZIO *z) {$/;"	f
luaZ_freebuffer	liblua/lzio.h	/^#define luaZ_freebuffer(/;"	d
luaZ_init	liblua/lzio.c	/^void luaZ_init (lua_State *L, ZIO *z, lua_Reader reader, void *data) {$/;"	f
luaZ_initbuffer	liblua/lzio.h	/^#define luaZ_initbuffer(/;"	d
luaZ_openspace	liblua/lzio.c	/^char *luaZ_openspace (lua_State *L, Mbuffer *buff, size_t n) {$/;"	f
luaZ_read	liblua/lzio.c	/^size_t luaZ_read (ZIO *z, void *b, size_t n) {$/;"	f
luaZ_resetbuffer	liblua/lzio.h	/^#define luaZ_resetbuffer(/;"	d
luaZ_resizebuffer	liblua/lzio.h	/^#define luaZ_resizebuffer(/;"	d
luaZ_sizebuffer	liblua/lzio.h	/^#define luaZ_sizebuffer(/;"	d
lua_Alloc	liblua/lua.h	/^typedef void * (*lua_Alloc) (void *ud, void *ptr, size_t osize, size_t nsize);$/;"	t
lua_CFunction	liblua/lua.h	/^typedef int (*lua_CFunction) (lua_State *L);$/;"	t
lua_Debug	liblua/lua.h	/^struct lua_Debug {$/;"	s
lua_Debug	liblua/lua.h	/^typedef struct lua_Debug lua_Debug;  \/* activation record *\/$/;"	t	typeref:struct:lua_Debug
lua_Hook	liblua/lua.h	/^typedef void (*lua_Hook) (lua_State *L, lua_Debug *ar);$/;"	t
lua_Integer	liblua/lua.h	/^typedef LUA_INTEGER lua_Integer;$/;"	t
lua_Number	liblua/lua.h	/^typedef LUA_NUMBER lua_Number;$/;"	t
lua_Reader	liblua/lua.h	/^typedef const char * (*lua_Reader) (lua_State *L, void *ud, size_t *sz);$/;"	t
lua_State	liblua/lstate.h	/^struct lua_State {$/;"	s
lua_State	liblua/lua.h	/^typedef struct lua_State lua_State;$/;"	t	typeref:struct:lua_State
lua_TValue	liblua/lobject.h	/^struct lua_TValue {$/;"	s
lua_UInteger	client/pm3_bitlib.c	/^typedef size_t lua_UInteger;$/;"	t	file:
lua_Unsigned	liblua/lua.h	/^typedef LUA_UNSIGNED lua_Unsigned;$/;"	t
lua_Writer	liblua/lua.h	/^typedef int (*lua_Writer) (lua_State *L, const void* p, size_t sz, void* ud);$/;"	t
lua_absindex	liblua/lapi.c	/^LUA_API int lua_absindex (lua_State *L, int idx) {$/;"	f
lua_arith	liblua/lapi.c	/^LUA_API void lua_arith (lua_State *L, int op) {$/;"	f
lua_assert	liblua/llimits.h	/^#define lua_assert(/;"	d
lua_assert	liblua/lualib.h	/^#define lua_assert(/;"	d
lua_atpanic	liblua/lapi.c	/^LUA_API lua_CFunction lua_atpanic (lua_State *L, lua_CFunction panicf) {$/;"	f
lua_c	liblua/lua.c	/^#define lua_c$/;"	d	file:
lua_call	liblua/lua.h	/^#define lua_call(/;"	d
lua_callk	liblua/lapi.c	/^LUA_API void lua_callk (lua_State *L, int nargs, int nresults, int ctx,$/;"	f
lua_checkmode	liblua/liolib.c	/^#define lua_checkmode(/;"	d	file:
lua_checkstack	liblua/lapi.c	/^LUA_API int lua_checkstack (lua_State *L, int size) {$/;"	f
lua_close	liblua/lstate.c	/^LUA_API void lua_close (lua_State *L) {$/;"	f
lua_compare	liblua/lapi.c	/^LUA_API int lua_compare (lua_State *L, int index1, int index2, int op) {$/;"	f
lua_concat	liblua/lapi.c	/^LUA_API void lua_concat (lua_State *L, int n) {$/;"	f
lua_copy	liblua/lapi.c	/^LUA_API void lua_copy (lua_State *L, int fromidx, int toidx) {$/;"	f
lua_cpcall	liblua/luaconf.h	/^#define lua_cpcall(/;"	d
lua_createtable	liblua/lapi.c	/^LUA_API void lua_createtable (lua_State *L, int narray, int nrec) {$/;"	f
lua_dump	liblua/lapi.c	/^LUA_API int lua_dump (lua_State *L, lua_Writer writer, void *data) {$/;"	f
lua_equal	liblua/luaconf.h	/^#define lua_equal(/;"	d
lua_error	liblua/lapi.c	/^LUA_API int lua_error (lua_State *L) {$/;"	f
lua_freeline	liblua/lua.c	/^#define lua_freeline(/;"	d	file:
lua_gc	liblua/lapi.c	/^LUA_API int lua_gc (lua_State *L, int what, int data) {$/;"	f
lua_getallocf	liblua/lapi.c	/^LUA_API lua_Alloc lua_getallocf (lua_State *L, void **ud) {$/;"	f
lua_getctx	liblua/lapi.c	/^LUA_API int lua_getctx (lua_State *L, int *ctx) {$/;"	f
lua_getfield	liblua/lapi.c	/^LUA_API void lua_getfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_getglobal	liblua/lapi.c	/^LUA_API void lua_getglobal (lua_State *L, const char *var) {$/;"	f
lua_gethook	liblua/ldebug.c	/^LUA_API lua_Hook lua_gethook (lua_State *L) {$/;"	f
lua_gethookcount	liblua/ldebug.c	/^LUA_API int lua_gethookcount (lua_State *L) {$/;"	f
lua_gethookmask	liblua/ldebug.c	/^LUA_API int lua_gethookmask (lua_State *L) {$/;"	f
lua_getinfo	liblua/ldebug.c	/^LUA_API int lua_getinfo (lua_State *L, const char *what, lua_Debug *ar) {$/;"	f
lua_getlocal	liblua/ldebug.c	/^LUA_API const char *lua_getlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_getmetatable	liblua/lapi.c	/^LUA_API int lua_getmetatable (lua_State *L, int objindex) {$/;"	f
lua_getstack	liblua/ldebug.c	/^LUA_API int lua_getstack (lua_State *L, int level, lua_Debug *ar) {$/;"	f
lua_gettable	liblua/lapi.c	/^LUA_API void lua_gettable (lua_State *L, int idx) {$/;"	f
lua_gettop	liblua/lapi.c	/^LUA_API int lua_gettop (lua_State *L) {$/;"	f
lua_getupvalue	liblua/lapi.c	/^LUA_API const char *lua_getupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_getuservalue	liblua/lapi.c	/^LUA_API void lua_getuservalue (lua_State *L, int idx) {$/;"	f
lua_h	liblua/lua.h	/^#define lua_h$/;"	d
lua_ident	liblua/lapi.c	/^const char lua_ident[] =$/;"	v
lua_insert	liblua/lapi.c	/^LUA_API void lua_insert (lua_State *L, int idx) {$/;"	f
lua_isboolean	liblua/lua.h	/^#define lua_isboolean(/;"	d
lua_iscfunction	liblua/lapi.c	/^LUA_API int lua_iscfunction (lua_State *L, int idx) {$/;"	f
lua_isfunction	liblua/lua.h	/^#define lua_isfunction(/;"	d
lua_islightuserdata	liblua/lua.h	/^#define lua_islightuserdata(/;"	d
lua_isnil	liblua/lua.h	/^#define lua_isnil(/;"	d
lua_isnone	liblua/lua.h	/^#define lua_isnone(/;"	d
lua_isnoneornil	liblua/lua.h	/^#define lua_isnoneornil(/;"	d
lua_isnumber	liblua/lapi.c	/^LUA_API int lua_isnumber (lua_State *L, int idx) {$/;"	f
lua_isstring	liblua/lapi.c	/^LUA_API int lua_isstring (lua_State *L, int idx) {$/;"	f
lua_istable	liblua/lua.h	/^#define lua_istable(/;"	d
lua_isthread	liblua/lua.h	/^#define lua_isthread(/;"	d
lua_isuserdata	liblua/lapi.c	/^LUA_API int lua_isuserdata (lua_State *L, int idx) {$/;"	f
lua_len	liblua/lapi.c	/^LUA_API void lua_len (lua_State *L, int idx) {$/;"	f
lua_lessthan	liblua/luaconf.h	/^#define lua_lessthan(/;"	d
lua_load	liblua/lapi.c	/^LUA_API int lua_load (lua_State *L, lua_Reader reader, void *data,$/;"	f
lua_lock	liblua/llimits.h	/^#define lua_lock(/;"	d
lua_longassert	liblua/llimits.h	/^#define lua_longassert(/;"	d
lua_longjmp	liblua/ldo.c	/^struct lua_longjmp {$/;"	s	file:
lua_newstate	liblua/lstate.c	/^LUA_API lua_State *lua_newstate (lua_Alloc f, void *ud) {$/;"	f
lua_newtable	liblua/lua.h	/^#define lua_newtable(/;"	d
lua_newthread	liblua/lstate.c	/^LUA_API lua_State *lua_newthread (lua_State *L) {$/;"	f
lua_newuserdata	liblua/lapi.c	/^LUA_API void *lua_newuserdata (lua_State *L, size_t size) {$/;"	f
lua_next	liblua/lapi.c	/^LUA_API int lua_next (lua_State *L, int idx) {$/;"	f
lua_number2int	liblua/llimits.h	/^#define lua_number2int(/;"	d
lua_number2int32	liblua/llimits.h	/^#define lua_number2int32(/;"	d
lua_number2integer	liblua/llimits.h	/^#define lua_number2integer(/;"	d
lua_number2str	liblua/luaconf.h	/^#define lua_number2str(/;"	d
lua_number2unsigned	liblua/llimits.h	/^#define lua_number2unsigned(/;"	d
lua_objlen	liblua/luaconf.h	/^#define lua_objlen(/;"	d
lua_pcall	liblua/lua.h	/^#define lua_pcall(/;"	d
lua_pcallk	liblua/lapi.c	/^LUA_API int lua_pcallk (lua_State *L, int nargs, int nresults, int errfunc,$/;"	f
lua_pclose	liblua/liolib.c	/^#define lua_pclose(/;"	d	file:
lua_pop	liblua/lua.h	/^#define lua_pop(/;"	d
lua_popen	liblua/liolib.c	/^#define lua_popen(/;"	d	file:
lua_pushboolean	liblua/lapi.c	/^LUA_API void lua_pushboolean (lua_State *L, int b) {$/;"	f
lua_pushcclosure	liblua/lapi.c	/^LUA_API void lua_pushcclosure (lua_State *L, lua_CFunction fn, int n) {$/;"	f
lua_pushcfunction	liblua/lua.h	/^#define lua_pushcfunction(/;"	d
lua_pushfstring	liblua/lapi.c	/^LUA_API const char *lua_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
lua_pushglobaltable	liblua/lua.h	/^#define lua_pushglobaltable(/;"	d
lua_pushinteger	liblua/lapi.c	/^LUA_API void lua_pushinteger (lua_State *L, lua_Integer n) {$/;"	f
lua_pushlightuserdata	liblua/lapi.c	/^LUA_API void lua_pushlightuserdata (lua_State *L, void *p) {$/;"	f
lua_pushliteral	liblua/lua.h	/^#define lua_pushliteral(/;"	d
lua_pushlstring	liblua/lapi.c	/^LUA_API const char *lua_pushlstring (lua_State *L, const char *s, size_t len) {$/;"	f
lua_pushnil	liblua/lapi.c	/^LUA_API void lua_pushnil (lua_State *L) {$/;"	f
lua_pushnumber	liblua/lapi.c	/^LUA_API void lua_pushnumber (lua_State *L, lua_Number n) {$/;"	f
lua_pushstring	liblua/lapi.c	/^LUA_API const char *lua_pushstring (lua_State *L, const char *s) {$/;"	f
lua_pushthread	liblua/lapi.c	/^LUA_API int lua_pushthread (lua_State *L) {$/;"	f
lua_pushunsigned	liblua/lapi.c	/^LUA_API void lua_pushunsigned (lua_State *L, lua_Unsigned u) {$/;"	f
lua_pushvalue	liblua/lapi.c	/^LUA_API void lua_pushvalue (lua_State *L, int idx) {$/;"	f
lua_pushvfstring	liblua/lapi.c	/^LUA_API const char *lua_pushvfstring (lua_State *L, const char *fmt,$/;"	f
lua_rawequal	liblua/lapi.c	/^LUA_API int lua_rawequal (lua_State *L, int index1, int index2) {$/;"	f
lua_rawget	liblua/lapi.c	/^LUA_API void lua_rawget (lua_State *L, int idx) {$/;"	f
lua_rawgeti	liblua/lapi.c	/^LUA_API void lua_rawgeti (lua_State *L, int idx, int n) {$/;"	f
lua_rawgetp	liblua/lapi.c	/^LUA_API void lua_rawgetp (lua_State *L, int idx, const void *p) {$/;"	f
lua_rawlen	liblua/lapi.c	/^LUA_API size_t lua_rawlen (lua_State *L, int idx) {$/;"	f
lua_rawset	liblua/lapi.c	/^LUA_API void lua_rawset (lua_State *L, int idx) {$/;"	f
lua_rawseti	liblua/lapi.c	/^LUA_API void lua_rawseti (lua_State *L, int idx, int n) {$/;"	f
lua_rawsetp	liblua/lapi.c	/^LUA_API void lua_rawsetp (lua_State *L, int idx, const void *p) {$/;"	f
lua_readline	liblua/lua.c	/^#define lua_readline(/;"	d	file:
lua_register	liblua/lua.h	/^#define lua_register(/;"	d
lua_remove	liblua/lapi.c	/^LUA_API void lua_remove (lua_State *L, int idx) {$/;"	f
lua_replace	liblua/lapi.c	/^LUA_API void lua_replace (lua_State *L, int idx) {$/;"	f
lua_resume	liblua/ldo.c	/^LUA_API int lua_resume (lua_State *L, lua_State *from, int nargs) {$/;"	f
lua_saveline	liblua/lua.c	/^#define lua_saveline(/;"	d	file:
lua_setallocf	liblua/lapi.c	/^LUA_API void lua_setallocf (lua_State *L, lua_Alloc f, void *ud) {$/;"	f
lua_setfield	liblua/lapi.c	/^LUA_API void lua_setfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_setglobal	liblua/lapi.c	/^LUA_API void lua_setglobal (lua_State *L, const char *var) {$/;"	f
lua_sethook	liblua/ldebug.c	/^LUA_API int lua_sethook (lua_State *L, lua_Hook func, int mask, int count) {$/;"	f
lua_setlocal	liblua/ldebug.c	/^LUA_API const char *lua_setlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_setmetatable	liblua/lapi.c	/^LUA_API int lua_setmetatable (lua_State *L, int objindex) {$/;"	f
lua_settable	liblua/lapi.c	/^LUA_API void lua_settable (lua_State *L, int idx) {$/;"	f
lua_settop	liblua/lapi.c	/^LUA_API void lua_settop (lua_State *L, int idx) {$/;"	f
lua_setupvalue	liblua/lapi.c	/^LUA_API const char *lua_setupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_setuservalue	liblua/lapi.c	/^LUA_API void lua_setuservalue (lua_State *L, int idx) {$/;"	f
lua_status	liblua/lapi.c	/^LUA_API int lua_status (lua_State *L) {$/;"	f
lua_stdin_is_tty	liblua/lua.c	/^#define lua_stdin_is_tty(/;"	d	file:
lua_str2number	liblua/luaconf.h	/^#define lua_str2number(/;"	d
lua_strlen	liblua/luaconf.h	/^#define lua_strlen(/;"	d
lua_strx2number	liblua/lobject.c	/^static lua_Number lua_strx2number (const char *s, char **endptr) {$/;"	f	file:
lua_strx2number	liblua/luaconf.h	/^#define lua_strx2number(/;"	d
lua_tmpnam	liblua/loslib.c	/^#define lua_tmpnam(/;"	d	file:
lua_toboolean	liblua/lapi.c	/^LUA_API int lua_toboolean (lua_State *L, int idx) {$/;"	f
lua_tocfunction	liblua/lapi.c	/^LUA_API lua_CFunction lua_tocfunction (lua_State *L, int idx) {$/;"	f
lua_tointeger	liblua/lua.h	/^#define lua_tointeger(/;"	d
lua_tointegerx	liblua/lapi.c	/^LUA_API lua_Integer lua_tointegerx (lua_State *L, int idx, int *isnum) {$/;"	f
lua_tolstring	liblua/lapi.c	/^LUA_API const char *lua_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f
lua_tonumber	liblua/lua.h	/^#define lua_tonumber(/;"	d
lua_tonumberx	liblua/lapi.c	/^LUA_API lua_Number lua_tonumberx (lua_State *L, int idx, int *isnum) {$/;"	f
lua_topointer	liblua/lapi.c	/^LUA_API const void *lua_topointer (lua_State *L, int idx) {$/;"	f
lua_tostring	liblua/lua.h	/^#define lua_tostring(/;"	d
lua_tothread	liblua/lapi.c	/^LUA_API lua_State *lua_tothread (lua_State *L, int idx) {$/;"	f
lua_tounsigned	liblua/lua.h	/^#define lua_tounsigned(/;"	d
lua_tounsignedx	liblua/lapi.c	/^LUA_API lua_Unsigned lua_tounsignedx (lua_State *L, int idx, int *isnum) {$/;"	f
lua_touserdata	liblua/lapi.c	/^LUA_API void *lua_touserdata (lua_State *L, int idx) {$/;"	f
lua_type	liblua/lapi.c	/^LUA_API int lua_type (lua_State *L, int idx) {$/;"	f
lua_typename	liblua/lapi.c	/^LUA_API const char *lua_typename (lua_State *L, int t) {$/;"	f
lua_unlock	liblua/llimits.h	/^#define lua_unlock(/;"	d
lua_unsigned2number	liblua/llimits.h	/^#define lua_unsigned2number(/;"	d
lua_upvalueid	liblua/lapi.c	/^LUA_API void *lua_upvalueid (lua_State *L, int fidx, int n) {$/;"	f
lua_upvalueindex	liblua/lua.h	/^#define lua_upvalueindex(/;"	d
lua_upvaluejoin	liblua/lapi.c	/^LUA_API void lua_upvaluejoin (lua_State *L, int fidx1, int n1,$/;"	f
lua_version	liblua/lapi.c	/^LUA_API const lua_Number *lua_version (lua_State *L) {$/;"	f
lua_xmove	liblua/lapi.c	/^LUA_API void lua_xmove (lua_State *from, lua_State *to, int n) {$/;"	f
lua_yield	liblua/lua.h	/^#define lua_yield(/;"	d
lua_yieldk	liblua/ldo.c	/^LUA_API int lua_yieldk (lua_State *L, int nresults, int ctx, lua_CFunction k) {$/;"	f
luac_c	liblua/luac.c	/^#define luac_c$/;"	d	file:
luai_Cast	liblua/llimits.h	/^union luai_Cast { double l_d; LUA_INT32 l_p[2]; };$/;"	u
luai_apicheck	liblua/llimits.h	/^#define luai_apicheck(/;"	d
luai_checknum	liblua/lobject.h	/^#define luai_checknum(/;"	d
luai_checknum	liblua/lobject.h	/^#undef luai_checknum$/;"	d
luai_ctype_	liblua/lctype.c	/^LUAI_DDEF const lu_byte luai_ctype_[UCHAR_MAX + 2] = {$/;"	v
luai_ctype_	liblua/lctype.h	/^LUAI_DDEC const lu_byte luai_ctype_[UCHAR_MAX + 2];$/;"	v
luai_hashnum	liblua/llimits.h	/^#define luai_hashnum(/;"	d
luai_jmpbuf	liblua/ldo.c	/^#define luai_jmpbuf	/;"	d	file:
luai_makeseed	liblua/lstate.c	/^#define luai_makeseed(/;"	d	file:
luai_numadd	liblua/luaconf.h	/^#define luai_numadd(/;"	d
luai_numdiv	liblua/luaconf.h	/^#define luai_numdiv(/;"	d
luai_numeq	liblua/luaconf.h	/^#define luai_numeq(/;"	d
luai_numisnan	liblua/luaconf.h	/^#define luai_numisnan(/;"	d
luai_numle	liblua/luaconf.h	/^#define luai_numle(/;"	d
luai_numlt	liblua/luaconf.h	/^#define luai_numlt(/;"	d
luai_nummod	liblua/luaconf.h	/^#define luai_nummod(/;"	d
luai_nummul	liblua/luaconf.h	/^#define luai_nummul(/;"	d
luai_numpow	liblua/luaconf.h	/^#define luai_numpow(/;"	d
luai_numsub	liblua/luaconf.h	/^#define luai_numsub(/;"	d
luai_numunm	liblua/luaconf.h	/^#define luai_numunm(/;"	d
luai_runtimecheck	liblua/lvm.c	/^#define luai_runtimecheck(/;"	d	file:
luai_threadyield	liblua/llimits.h	/^#define luai_threadyield(/;"	d
luai_userstateclose	liblua/llimits.h	/^#define luai_userstateclose(/;"	d
luai_userstatefree	liblua/llimits.h	/^#define luai_userstatefree(/;"	d
luai_userstateopen	liblua/llimits.h	/^#define luai_userstateopen(/;"	d
luai_userstateresume	liblua/llimits.h	/^#define luai_userstateresume(/;"	d
luai_userstatethread	liblua/llimits.h	/^#define luai_userstatethread(/;"	d
luai_userstateyield	liblua/llimits.h	/^#define luai_userstateyield(/;"	d
luai_verifycode	liblua/lundump.c	/^#define luai_verifycode(/;"	d	file:
luai_writeline	liblua/luaconf.h	/^#define luai_writeline(/;"	d
luai_writestring	liblua/luaconf.h	/^#define luai_writestring(/;"	d
luai_writestringerror	liblua/luaconf.h	/^#define luai_writestringerror(/;"	d
lualib_h	liblua/lualib.h	/^#define lualib_h$/;"	d
luaopen_base	liblua/lbaselib.c	/^LUAMOD_API int luaopen_base (lua_State *L) {$/;"	f
luaopen_binlib	client/pm3_binlib.c	/^LUALIB_API int luaopen_binlib (lua_State *L) {$/;"	f
luaopen_bit	client/pm3_bitlib.c	/^LUALIB_API int luaopen_bit (lua_State *L) {$/;"	f
luaopen_bit32	liblua/lbitlib.c	/^LUAMOD_API int luaopen_bit32 (lua_State *L) {$/;"	f
luaopen_coroutine	liblua/lcorolib.c	/^LUAMOD_API int luaopen_coroutine (lua_State *L) {$/;"	f
luaopen_debug	liblua/ldblib.c	/^LUAMOD_API int luaopen_debug (lua_State *L) {$/;"	f
luaopen_io	liblua/liolib.c	/^LUAMOD_API int luaopen_io (lua_State *L) {$/;"	f
luaopen_math	liblua/lmathlib.c	/^LUAMOD_API int luaopen_math (lua_State *L) {$/;"	f
luaopen_os	liblua/loslib.c	/^LUAMOD_API int luaopen_os (lua_State *L) {$/;"	f
luaopen_package	liblua/loadlib.c	/^LUAMOD_API int luaopen_package (lua_State *L) {$/;"	f
luaopen_string	liblua/lstrlib.c	/^LUAMOD_API int luaopen_string (lua_State *L) {$/;"	f
luaopen_table	liblua/ltablib.c	/^LUAMOD_API int luaopen_table (lua_State *L) {$/;"	f
lundump_c	liblua/lundump.c	/^#define lundump_c$/;"	d	file:
lundump_h	liblua/lundump.h	/^#define lundump_h$/;"	d
lvm_c	liblua/lvm.c	/^#define lvm_c$/;"	d	file:
lvm_h	liblua/lvm.h	/^#define lvm_h$/;"	d
lzio_c	liblua/lzio.c	/^#define lzio_c$/;"	d	file:
lzio_h	liblua/lzio.h	/^#define lzio_h$/;"	d
mac	client/loclass/elite_crack.h	/^	uint8_t mac[4];$/;"	m	struct:__anon45
magic	include/proxmark3.h	/^	int magic; \/* Magic sequence to identify this as a correct version information structure. Must be VERSION_INFORMATION_MAGIC *\/$/;"	m	struct:version_information
magic	include/proxmark3.h	/^	int magic; \/* Magic sequence, to distinguish against random uninitialized memory *\/$/;"	m	struct:common_area
main	armsrc/aes.c	/^int main()$/;"	f
main	client/cli.c	/^int main(int argc, char **argv)$/;"	f
main	client/flasher.c	/^int main(int argc, char **argv)$/;"	f
main	client/hid-flasher/flasher.c	/^int main(int argc, char **argv)$/;"	f
main	client/loclass/main.c	/^int main (int argc, char **argv)$/;"	f
main	client/pm3_eml2mfd.py	/^def main(argv):$/;"	f
main	client/pm3_mfd2eml.py	/^def main(argv):$/;"	f
main	client/proxmark3.c	/^int main(int argc, char* argv[]) {$/;"	f
main	client/scripts/14araw.lua	/^function main(args)$/;"	f
main	client/scripts/dumptoemul.lua	/^local function main(args)$/;"	f
main	client/scripts/emul2dump.lua	/^local function main(args)$/;"	f
main	client/scripts/emul2html.lua	/^local function main(args)$/;"	f
main	client/scripts/formatMifare.lua	/^local function main(args)$/;"	f
main	client/scripts/hf_read.lua	/^local function main(args)$/;"	f
main	client/scripts/htmldump.lua	/^local function main(args)$/;"	f
main	client/scripts/mfkeys.lua	/^local function main( args)$/;"	f
main	client/scripts/mifare_autopwn.lua	/^function main(args)$/;"	f
main	client/scripts/ndef_dump.lua	/^local function main( args)$/;"	f
main	client/scripts/parameters.lua	/^local function main(args)$/;"	f
main	client/scripts/remagic.lua	/^function main(args)$/;"	f
main	client/scripts/test_t55x7_psk.lua	/^local function main(args)$/;"	f
main	client/scripts/tnp3dump.lua	/^local function main(args)$/;"	f
main	client/scripts/tnp3sim.lua	/^local function main(args)$/;"	f
main	client/scripts/tracetest.lua	/^local function main(args)$/;"	f
main	client/snooper.c	/^int main()$/;"	f
main	liblua/lua.c	/^int main (int argc, char **argv) {$/;"	f
main	liblua/luac.c	/^int main(int argc, char* argv[])$/;"	f
main	tools/findbits.py	/^def main():$/;"	f
main	tools/mfkey/mfkey32.c	/^int main (int argc, char *argv[]) {$/;"	f
main	tools/mfkey/mfkey64.c	/^int main (int argc, char *argv[]) {$/;"	f
main	tools/nonce2key/nonce2key.c	/^int main(const int argc, const char* argv[]) {$/;"	f
main_func	client/proxguiqt.h	/^		void (*main_func)(void);$/;"	m	class:ProxGuiQT
main_loop	client/proxmark3.c	/^static void *main_loop(void *targ) {$/;"	f	file:
main_loop_arg	client/proxmark3.c	/^struct main_loop_arg {$/;"	s	file:
mainfunc	liblua/lparser.c	/^static void mainfunc (LexState *ls, FuncState *fs) {$/;"	f	file:
mainposition	liblua/ltable.c	/^static Node *mainposition (const Table *t, const TValue *key) {$/;"	f	file:
mainthread	liblua/lstate.h	/^  struct lua_State *mainthread;$/;"	m	struct:global_State	typeref:struct:global_State::lua_State
major_mode	fpga/fpga_hf.v	/^wire [2:0] major_mode;$/;"	n
major_mode	fpga/fpga_lf.v	/^wire [2:0] major_mode = conf_word[7:5];$/;"	n
makemask	liblua/ldblib.c	/^static int makemask (const char *smask, int count) {$/;"	f	file:
makeseed	liblua/lstate.c	/^static unsigned int makeseed (lua_State *L) {$/;"	f	file:
makewhite	liblua/lgc.c	/^#define makewhite(/;"	d	file:
manrawdecode	common/lfdemod.c	/^int manrawdecode(uint8_t * BitStream, size_t *size)$/;"	f
manufactureMapping	client/cmdhf14a.c	/^const manufactureName manufactureMapping[] = {$/;"	v
manufactureName	client/cmdhf14a.c	/^} manufactureName; $/;"	t	typeref:struct:__anon28	file:
markbeingfnz	liblua/lgc.c	/^static void markbeingfnz (global_State *g) {$/;"	f	file:
marklen	liblua/lua.c	/^#define marklen	/;"	d	file:
markmt	liblua/lgc.c	/^static void markmt (global_State *g) {$/;"	f	file:
markobject	liblua/lgc.c	/^#define markobject(/;"	d	file:
markupval	liblua/lparser.c	/^static void markupval (FuncState *fs, int level) {$/;"	f	file:
markvalue	liblua/lgc.c	/^#define markvalue(/;"	d	file:
mask	client/cmdhf15.c	/^	int mask; \/\/ how many MSB bits used$/;"	m	struct:__anon29	file:
mask	include/crc.h	/^	uint32_t mask;$/;"	m	struct:crc
mask	liblua/lbitlib.c	/^#define mask(/;"	d	file:
maskcolors	liblua/lgc.c	/^#define maskcolors	/;"	d	file:
match	liblua/lstrlib.c	/^static const char *match (MatchState *ms, const char *s, const char *p) {$/;"	f	file:
match_capture	liblua/lstrlib.c	/^static const char *match_capture (MatchState *ms, const char *s, int l) {$/;"	f	file:
match_class	liblua/lstrlib.c	/^static int match_class (int c, int cl) {$/;"	f	file:
matchbalance	liblua/lstrlib.c	/^static const char *matchbalance (MatchState *ms, const char *s,$/;"	f	file:
matchbracketclass	liblua/lstrlib.c	/^static int matchbracketclass (int c, const char *p, const char *ec) {$/;"	f	file:
matchdepth	liblua/lstrlib.c	/^  int matchdepth;  \/* control for recursive depth (to avoid C stack overflow) *\/$/;"	m	struct:MatchState	file:
math_abs	liblua/lmathlib.c	/^static int math_abs (lua_State *L) {$/;"	f	file:
math_acos	liblua/lmathlib.c	/^static int math_acos (lua_State *L) {$/;"	f	file:
math_asin	liblua/lmathlib.c	/^static int math_asin (lua_State *L) {$/;"	f	file:
math_atan	liblua/lmathlib.c	/^static int math_atan (lua_State *L) {$/;"	f	file:
math_atan2	liblua/lmathlib.c	/^static int math_atan2 (lua_State *L) {$/;"	f	file:
math_ceil	liblua/lmathlib.c	/^static int math_ceil (lua_State *L) {$/;"	f	file:
math_cos	liblua/lmathlib.c	/^static int math_cos (lua_State *L) {$/;"	f	file:
math_cosh	liblua/lmathlib.c	/^static int math_cosh (lua_State *L) {$/;"	f	file:
math_deg	liblua/lmathlib.c	/^static int math_deg (lua_State *L) {$/;"	f	file:
math_exp	liblua/lmathlib.c	/^static int math_exp (lua_State *L) {$/;"	f	file:
math_floor	liblua/lmathlib.c	/^static int math_floor (lua_State *L) {$/;"	f	file:
math_fmod	liblua/lmathlib.c	/^static int math_fmod (lua_State *L) {$/;"	f	file:
math_frexp	liblua/lmathlib.c	/^static int math_frexp (lua_State *L) {$/;"	f	file:
math_ldexp	liblua/lmathlib.c	/^static int math_ldexp (lua_State *L) {$/;"	f	file:
math_log	liblua/lmathlib.c	/^static int math_log (lua_State *L) {$/;"	f	file:
math_log10	liblua/lmathlib.c	/^static int math_log10 (lua_State *L) {$/;"	f	file:
math_max	liblua/lmathlib.c	/^static int math_max (lua_State *L) {$/;"	f	file:
math_min	liblua/lmathlib.c	/^static int math_min (lua_State *L) {$/;"	f	file:
math_modf	liblua/lmathlib.c	/^static int math_modf (lua_State *L) {$/;"	f	file:
math_pow	liblua/lmathlib.c	/^static int math_pow (lua_State *L) {$/;"	f	file:
math_rad	liblua/lmathlib.c	/^static int math_rad (lua_State *L) {$/;"	f	file:
math_random	liblua/lmathlib.c	/^static int math_random (lua_State *L) {$/;"	f	file:
math_randomseed	liblua/lmathlib.c	/^static int math_randomseed (lua_State *L) {$/;"	f	file:
math_sin	liblua/lmathlib.c	/^static int math_sin (lua_State *L) {$/;"	f	file:
math_sinh	liblua/lmathlib.c	/^static int math_sinh (lua_State *L) {$/;"	f	file:
math_sqrt	liblua/lmathlib.c	/^static int math_sqrt (lua_State *L) {$/;"	f	file:
math_tan	liblua/lmathlib.c	/^static int math_tan (lua_State *L) {$/;"	f	file:
math_tanh	liblua/lmathlib.c	/^static int math_tanh (lua_State *L) {$/;"	f	file:
mathlib	liblua/lmathlib.c	/^static const luaL_Reg mathlib[] = {$/;"	v	file:
matplotlib	fpga/tests/plot_edgedetect.py	/^import matplotlib.pyplot as plt$/;"	i
max	armsrc/lfops.c	/^#define max(/;"	d	file:
max	fpga/lf_edge_detect.v	/^	output [7:0] max, output [7:0] min,$/;"	p
max	fpga/lo_edge_detect.v	/^wire [7:0] max, min;$/;"	n
max	fpga/tests/tb_lf_edge_detect.v	/^    wire [7:0] max;$/;"	n
max	fpga/tests/tb_min_max_tracker.v	/^	wire [7:0] max;$/;"	n
max_expand	liblua/lstrlib.c	/^static const char *max_expand (MatchState *ms, const char *s,$/;"	f	file:
max_val	fpga/min_max_tracker.v	/^	reg [7:0] max_val = 0;$/;"	r
max_vals	fpga/tests/plot_edgedetect.py	/^max_vals = map(lambda x: ord(x), max_vals)$/;"	v
max_vals	fpga/tests/plot_edgedetect.py	/^max_vals = open(BASENAME + ".max").read()$/;"	v
maxn	liblua/ltablib.c	/^static int maxn (lua_State *L) {$/;"	f	file:
maxstacksize	liblua/lobject.h	/^  lu_byte maxstacksize;  \/* maximum stack used by this function *\/$/;"	m	struct:Proto
memcmp	armsrc/string.c	/^int memcmp(const void *av, const void *bv, int len)$/;"	f
memcpy	armsrc/string.c	/^void *memcpy(void *dest, const void *src, int len)$/;"	f
memerrmsg	liblua/lstate.h	/^  TString *memerrmsg;  \/* memory-error message *\/$/;"	m	struct:global_State
memset	armsrc/string.c	/^void *memset(void *dest, int c, int len)$/;"	f
memxor	armsrc/string.c	/^void memxor(uint8_t * dest, uint8_t * src, size_t len) {$/;"	f
metaObject	client/proxguiqt.moc.cpp	/^const QMetaObject *ProxGuiQT::metaObject() const$/;"	f	class:ProxGuiQT
metaObject	client/proxguiqt.moc.cpp	/^const QMetaObject *ProxWidget::metaObject() const$/;"	f	class:ProxWidget
metatable	liblua/lobject.h	/^    struct Table *metatable;$/;"	m	struct:Udata::__anon69	typeref:struct:Udata::__anon69::Table
metatable	liblua/lobject.h	/^  struct Table *metatable;$/;"	m	struct:Table	typeref:struct:Table::Table
metric	armsrc/iso14443.c	/^	int     metric;$/;"	m	struct:__anon15	file:
metricN	armsrc/iso14443.c	/^	int     metricN;$/;"	m	struct:__anon15	file:
mfCGetBlock	client/mifarehost.c	/^int mfCGetBlock(uint8_t blockNo, uint8_t *data, uint8_t params) {$/;"	f
mfCSetBlock	client/mifarehost.c	/^int mfCSetBlock(uint8_t blockNo, uint8_t *data, uint8_t *uid, bool wantWipe, uint8_t params) {$/;"	f
mfCSetUID	client/mifarehost.c	/^int mfCSetUID(uint8_t *uid, uint8_t *atqa, uint8_t *sak, uint8_t *oldUID, bool wantWipe) {$/;"	f
mfCheckKeys	client/mifarehost.c	/^int mfCheckKeys (uint8_t blockNo, uint8_t keyType, uint8_t keycnt, uint8_t * keyBlock, uint64_t * key){$/;"	f
mfEmlGetMem	client/mifarehost.c	/^int mfEmlGetMem(uint8_t *data, int blockNum, int blocksCount) {$/;"	f
mfEmlSetMem	client/mifarehost.c	/^int mfEmlSetMem(uint8_t *data, int blockNum, int blocksCount) {$/;"	f
mfTraceDecode	client/mifarehost.c	/^int mfTraceDecode(uint8_t *data_src, int len, bool wantSaveToEmlFile) {$/;"	f
mfTraceInit	client/mifarehost.c	/^int mfTraceInit(uint8_t *tuid, uint8_t *atqa, uint8_t sak, bool wantSaveToEmlFile) {$/;"	f
mf_crypto1_decrypt	armsrc/mifareutil.c	/^void mf_crypto1_decrypt(struct Crypto1State *pcs, uint8_t *data, int len){$/;"	f
mf_crypto1_decrypt	client/mifarehost.c	/^void mf_crypto1_decrypt(struct Crypto1State *pcs, uint8_t *data, int len, bool isEncrypted){$/;"	f
mf_crypto1_encrypt	armsrc/mifareutil.c	/^void mf_crypto1_encrypt(struct Crypto1State *pcs, uint8_t *data, uint16_t len, uint8_t *par) {$/;"	f
mf_crypto1_encrypt4bit	armsrc/mifareutil.c	/^uint8_t mf_crypto1_encrypt4bit(struct Crypto1State *pcs, uint8_t data) {$/;"	f
mfcrack	client/scripts/mifare_autopwn.lua	/^function mfcrack()$/;"	f
mfcrack_inner	client/scripts/mifare_autopwn.lua	/^function mfcrack_inner()$/;"	f
mfnested	client/mifarehost.c	/^int mfnested(uint8_t blockNo, uint8_t keyType, uint8_t * key, uint8_t trgBlockNo, uint8_t trgKeyType, uint8_t * resultKey, bool calibrate) $/;"	f
mifare_classic_auth	armsrc/mifareutil.c	/^int mifare_classic_auth(struct Crypto1State *pcs, uint32_t uid, uint8_t blockNo, uint8_t keyType, uint64_t ui64Key, uint8_t isNested) $/;"	f
mifare_classic_authex	armsrc/mifareutil.c	/^int mifare_classic_authex(struct Crypto1State *pcs, uint32_t uid, uint8_t blockNo, uint8_t keyType, uint64_t ui64Key, uint8_t isNested, uint32_t *ntptr, uint32_t *timing) $/;"	f
mifare_classic_halt	armsrc/mifareutil.c	/^int mifare_classic_halt(struct Crypto1State *pcs, uint32_t uid) $/;"	f
mifare_classic_readblock	armsrc/mifareutil.c	/^int mifare_classic_readblock(struct Crypto1State *pcs, uint32_t uid, uint8_t blockNo, uint8_t *blockData) $/;"	f
mifare_classic_writeblock	armsrc/mifareutil.c	/^int mifare_classic_writeblock(struct Crypto1State *pcs, uint32_t uid, uint8_t blockNo, uint8_t *blockData) $/;"	f
mifare_desfire_des_auth1	armsrc/mifareutil.c	/^int mifare_desfire_des_auth1(uint32_t uid, uint8_t *blockData){$/;"	f
mifare_desfire_des_auth2	armsrc/mifareutil.c	/^int mifare_desfire_des_auth2(uint32_t uid, uint8_t *key, uint8_t *blockData){$/;"	f
mifare_sendcmd_short	armsrc/mifareutil.c	/^int mifare_sendcmd_short(struct Crypto1State *pcs, uint8_t crypted, uint8_t cmd, uint8_t data, uint8_t* answer, uint8_t *answer_parity, uint32_t *timing)$/;"	f
mifare_sendcmd_short_mfucauth	armsrc/mifareutil.c	/^int mifare_sendcmd_short_mfucauth(struct Crypto1State *pcs, uint8_t crypted, uint8_t cmd, uint8_t *data, uint8_t *answer, uint8_t *answer_parity, uint32_t *timing)$/;"	f
mifare_sendcmd_short_special	armsrc/mifareutil.c	/^int mifare_sendcmd_short_special(struct Crypto1State *pcs, uint8_t crypted, uint8_t cmd, uint8_t* data, uint8_t* answer, uint8_t *answer_parity, uint32_t *timing)$/;"	f
mifare_sendcmd_shortex	armsrc/mifareutil.c	/^int mifare_sendcmd_shortex(struct Crypto1State *pcs, uint8_t crypted, uint8_t cmd, uint8_t data, uint8_t *answer, uint8_t *answer_parity, uint32_t *timing)$/;"	f
mifare_sendcmd_special	armsrc/mifareutil.c	/^int mifare_sendcmd_special(struct Crypto1State *pcs, uint8_t crypted, uint8_t cmd, uint8_t* data, uint8_t* answer, uint8_t *answer_parity, uint32_t *timing)$/;"	f
mifare_sendcmd_special2	armsrc/mifareutil.c	/^int mifare_sendcmd_special2(struct Crypto1State *pcs, uint8_t crypted, uint8_t cmd, uint8_t* data, uint8_t* answer,uint8_t *answer_parity, uint32_t *timing)$/;"	f
mifare_ultra_auth1	armsrc/mifareutil.c	/^int mifare_ultra_auth1(uint32_t uid, uint8_t *blockData){$/;"	f
mifare_ultra_auth2	armsrc/mifareutil.c	/^int mifare_ultra_auth2(uint32_t uid, uint8_t *key, uint8_t *blockData){$/;"	f
mifare_ultra_halt	armsrc/mifareutil.c	/^int mifare_ultra_halt(uint32_t uid)$/;"	f
mifare_ultra_readblock	armsrc/mifareutil.c	/^int mifare_ultra_readblock(uint32_t uid, uint8_t blockNo, uint8_t *blockData)$/;"	f
mifare_ultra_special_writeblock	armsrc/mifareutil.c	/^int mifare_ultra_special_writeblock(uint32_t uid, uint8_t blockNo, uint8_t *blockData)$/;"	f
mifare_ultra_writeblock	armsrc/mifareutil.c	/^int mifare_ultra_writeblock(uint32_t uid, uint8_t blockNo, uint8_t *blockData) $/;"	f
min	fpga/lo_edge_detect.v	/^wire [7:0] max, min;$/;"	n
min	fpga/min_max_tracker.v	/^	output [7:0] min, output [7:0] max);$/;"	p
min	fpga/tests/tb_lf_edge_detect.v	/^    wire [7:0] min;$/;"	n
min	fpga/tests/tb_min_max_tracker.v	/^	wire [7:0] min;$/;"	n
min_expand	liblua/lstrlib.c	/^static const char *min_expand (MatchState *ms, const char *s,$/;"	f	file:
min_max_tracker	fpga/min_max_tracker.v	/^module min_max_tracker(input clk, input [7:0] adc_d, input [7:0] threshold,$/;"	m
min_max_tracker_tb	fpga/tests/tb_min_max_tracker.v	/^module min_max_tracker_tb;$/;"	m
min_val	fpga/min_max_tracker.v	/^	reg [7:0] min_val = 255;$/;"	r
min_vals	fpga/tests/plot_edgedetect.py	/^min_vals = map(lambda x: ord(x), min_vals)$/;"	v
min_vals	fpga/tests/plot_edgedetect.py	/^min_vals = open(BASENAME + ".min").read()$/;"	v
miso	fpga/testbed_fpga.v	/^    wire miso;$/;"	n
mkdtemp	client/pm3_eml_mfd_test.py	/^from tempfile import mkdtemp$/;"	i
mod_detect_reset_time	fpga/hi_iso14443a.v	/^reg [3:0] mod_detect_reset_time;$/;"	r
mod_sig	fpga/hi_iso14443a.v	/^reg mod_sig;$/;"	r
mod_sig_buf	fpga/hi_iso14443a.v	/^reg [31:0] mod_sig_buf;$/;"	r
mod_sig_coil	fpga/hi_iso14443a.v	/^reg mod_sig_coil;$/;"	r
mod_sig_flip	fpga/hi_iso14443a.v	/^reg [3:0] mod_sig_flip;$/;"	r
mod_sig_ptr	fpga/hi_iso14443a.v	/^reg [4:0] mod_sig_ptr;$/;"	r
mod_type	fpga/hi_iso14443a.v	/^    input [2:0] mod_type;$/;"	p
mod_type	fpga/hi_simulate.v	/^    input [2:0] mod_type;$/;"	p
mod_type	fpga/testbed_hi_simulate.v	/^	reg  mod_type;$/;"	r
mode	client/loclass/des.h	/^	int mode;                   \/*!<  encrypt\/decrypt   *\/$/;"	m	struct:__anon43
mode	client/loclass/des.h	/^	int mode;                   \/*!<  encrypt\/decrypt   *\/$/;"	m	struct:__anon44
mode	liblua/ldo.c	/^  const char *mode;$/;"	m	struct:SParser	file:
modinit	liblua/loadlib.c	/^static void modinit (lua_State *L, const char *modname) {$/;"	f	file:
modulating_carrier	fpga/hi_simulate.v	/^reg modulating_carrier;$/;"	r
modulation	armsrc/iso14443a.h	/^  uint8_t* modulation;$/;"	m	struct:__anon22
modulation_n	armsrc/iso14443a.h	/^  size_t   modulation_n;$/;"	m	struct:__anon22
mosi	fpga/testbed_fpga.v	/^    reg spck, mosi, ncs;$/;"	r
mouseMoveEvent	client/proxguiqt.cpp	/^void ProxWidget::mouseMoveEvent(QMouseEvent *event)$/;"	f	class:ProxWidget
mousePressEvent	client/proxguiqt.h	/^		void mousePressEvent(QMouseEvent *event) { mouseMoveEvent(event); }$/;"	f	class:ProxWidget
movegotosout	liblua/lparser.c	/^static void movegotosout (FuncState *fs, BlockCnt *bl) {$/;"	f	file:
moveto	liblua/lapi.c	/^static void moveto (lua_State *L, TValue *fr, int idx) {$/;"	f	file:
msleep	client/hid-flasher/sleep.h	/^#define msleep(/;"	d
msleep	client/sleep.h	/^# define msleep(/;"	d
mt	liblua/lstate.h	/^  struct Table *mt[LUA_NUMTAGS];  \/* metatables for basic types *\/$/;"	m	struct:global_State	typeref:struct:global_State::Table
mux8	fpga/util.v	/^module mux8(sel, y, x0, x1, x2, x3, x4, x5, x6, x7);$/;"	m
myround2	common/lfdemod.c	/^uint32_t myround2(float f)$/;"	f
n	liblua/lauxlib.c	/^  int n;  \/* number of pre-read characters *\/$/;"	m	struct:LoadF	file:
n	liblua/lauxlib.h	/^  size_t n;  \/* number of characters in buffer *\/$/;"	m	struct:luaL_Buffer
n	liblua/lparser.h	/^    int n;$/;"	m	struct:Dyndata::__anon78
n	liblua/lparser.h	/^  int n;  \/* number of entries in use *\/$/;"	m	struct:Labellist
n	liblua/lzio.h	/^  size_t n;			\/* bytes still unread *\/$/;"	m	struct:Zio
n	liblua/lzio.h	/^  size_t n;$/;"	m	struct:Mbuffer
nCcalls	liblua/lstate.h	/^  unsigned short nCcalls;  \/* number of nested C calls *\/$/;"	m	struct:lua_State
nOutOfCnt	armsrc/iclass.c	/^    int     nOutOfCnt;$/;"	m	struct:__anon8	file:
na	liblua/lparser.c	/^  int na;  \/* total number of array elements *\/$/;"	m	struct:ConsControl	file:
nactvar	liblua/lparser.c	/^  lu_byte nactvar;  \/* # active locals outside the block *\/$/;"	m	struct:BlockCnt	file:
nactvar	liblua/lparser.h	/^  lu_byte nactvar;  \/* local level where it appears in current block *\/$/;"	m	struct:Labeldesc
nactvar	liblua/lparser.h	/^  lu_byte nactvar;  \/* number of active local variables *\/$/;"	m	struct:FuncState
name	liblua/lauxlib.h	/^  const char *name;$/;"	m	struct:luaL_Reg
name	liblua/ldo.c	/^  const char *name;$/;"	m	struct:SParser	file:
name	liblua/lobject.h	/^  TString *name;  \/* upvalue name (for debug information) *\/$/;"	m	struct:Upvaldesc
name	liblua/lparser.h	/^  TString *name;  \/* label identifier *\/$/;"	m	struct:Labeldesc
name	liblua/lua.h	/^  const char *name;	\/* (n) *\/$/;"	m	struct:lua_Debug
name	liblua/lundump.c	/^ const char* name;$/;"	m	struct:__anon84	file:
namewhat	liblua/lua.h	/^  const char *namewhat;	\/* (n) 'global', 'local', 'field', 'method' *\/$/;"	m	struct:lua_Debug
nbytes	armsrc/util.c	/^size_t nbytes(size_t nbits) {$/;"	f
nbytes	client/cmdlfhitag.c	/^size_t nbytes(size_t nbits) {$/;"	f
ncs	fpga/testbed_fpga.v	/^    reg spck, mosi, ncs;$/;"	r
need_value	liblua/lcode.c	/^static int need_value (FuncState *fs, int list) {$/;"	f	file:
negedge_cnt	fpga/hi_iso14443a.v	/^reg [6:0] negedge_cnt;$/;"	r
nested	client/scripts/mifare_autopwn.lua	/^function nested(key,sak)$/;"	f
nested_worker_thread	client/mifarehost.c	/^void* nested_worker_thread(void *arg)$/;"	f
new 	client/lualibs/commands.lua	/^	new = function(self, o)$/;"	f
new_localvar	liblua/lparser.c	/^static void new_localvar (LexState *ls, TString *name) {$/;"	f	file:
new_localvarliteral	liblua/lparser.c	/^#define new_localvarliteral(/;"	d	file:
new_localvarliteral_	liblua/lparser.c	/^static void new_localvarliteral_ (LexState *ls, const char *name, size_t sz) {$/;"	f	file:
newfile	liblua/liolib.c	/^static LStream *newfile (lua_State *L) {$/;"	f	file:
newlabelentry	liblua/lparser.c	/^static int newlabelentry (LexState *ls, Labellist *l, TString *name,$/;"	f	file:
newprefile	liblua/liolib.c	/^static LStream *newprefile (lua_State *L) {$/;"	f	file:
newshrstr	liblua/lstring.c	/^static TString *newshrstr (lua_State *L, const char *str, size_t l,$/;"	f	file:
newupvalue	liblua/lparser.c	/^static int newupvalue (FuncState *fs, TString *name, expdesc *v) {$/;"	f	file:
next	liblua/llex.c	/^#define next(/;"	d	file:
next	liblua/lobject.h	/^      struct UpVal *next;$/;"	m	struct:UpVal::__anon70::__anon71	typeref:struct:UpVal::__anon70::__anon71::UpVal
next	liblua/lobject.h	/^    struct Node *next;  \/* for chaining *\/$/;"	m	struct:TKey::__anon72	typeref:struct:TKey::__anon72::Node
next	liblua/lstate.h	/^  struct CallInfo *previous, *next;  \/* dynamic call link *\/$/;"	m	struct:CallInfo	typeref:struct:CallInfo::
next_ci	liblua/ldo.c	/^#define next_ci(/;"	d	file:
nh	liblua/lparser.c	/^  int nh;  \/* total number of `record' elements *\/$/;"	m	struct:ConsControl	file:
nilK	liblua/lcode.c	/^static int nilK (FuncState *fs) {$/;"	f	file:
nk	liblua/lobject.h	/^  } nk;$/;"	m	union:TKey	typeref:struct:TKey::__anon72
nk	liblua/lparser.h	/^  int nk;  \/* number of elements in `k' *\/$/;"	m	struct:FuncState
nlocvars	liblua/lparser.h	/^  short nlocvars;  \/* number of elements in 'f->locvars' *\/$/;"	m	struct:FuncState
nny	liblua/lstate.h	/^  unsigned short nny;  \/* number of non-yieldable calls in stack *\/$/;"	m	struct:lua_State
noLuaClosure	liblua/ldebug.c	/^#define noLuaClosure(/;"	d	file:
node	liblua/lobject.h	/^  Node *node;$/;"	m	struct:Table
noenv	liblua/loadlib.c	/^static int noenv (lua_State *L) {$/;"	f	file:
noextrachars	liblua/lua.c	/^#define noextrachars(/;"	d	file:
nonce2key	client/nonce2key/nonce2key.c	/^int nonce2key(uint32_t uid, uint32_t nt, uint32_t nr, uint64_t par_info, uint64_t ks_info, uint64_t * key) {$/;"	f
nonce_distance	armsrc/crapto1.c	/^int nonce_distance(uint32_t from, uint32_t to)$/;"	f
nonce_distance	client/nonce2key/crapto1.c	/^int nonce_distance(uint32_t from, uint32_t to)$/;"	f
nonce_distance	tools/mfkey/crapto1.c	/^int nonce_distance(uint32_t from, uint32_t to)$/;"	f
nonce_distance	tools/nonce2key/crapto1.c	/^int nonce_distance(uint32_t from, uint32_t to)$/;"	f
nospecials	liblua/lstrlib.c	/^static int nospecials (const char *p, size_t l) {$/;"	f	file:
novariant	liblua/lobject.h	/^#define novariant(/;"	d
np	liblua/lparser.h	/^  int np;  \/* number of elements in `p' *\/$/;"	m	struct:FuncState
nparams	liblua/lua.h	/^  unsigned char nparams;\/* (u) number of parameters *\/$/;"	m	struct:lua_Debug
nr	client/aes.h	/^    int nr;                     \/*!<  number of rounds  *\/$/;"	m	struct:__anon26
nr_enc	client/mifarehost.c	/^uint32_t nr_enc;  \/\/ encrypted reader challenge$/;"	v
nresults	liblua/lapi.c	/^  int nresults;$/;"	m	struct:CallS	file:
nresults	liblua/lstate.h	/^  short nresults;  \/* expected number of results from this function *\/$/;"	m	struct:CallInfo
nrzRawDemod	common/lfdemod.c	/^int nrzRawDemod(uint8_t *dest, size_t *size, int *clk, int *invert, int maxErr)$/;"	f
nsleep	client/sleep.c	/^void nsleep(uint64_t n) {$/;"	f
nt	client/mifarehost.c	/^		uint32_t nt;$/;"	m	struct:__anon47	file:
nt	client/mifarehost.c	/^uint32_t nt;      \/\/ tag challenge$/;"	v
numBits	client/loclass/cipherutils.c	/^int numBits(BitstreamOut *stream)$/;"	f
num_	liblua/lobject.h	/^#define num_(/;"	d
num_	liblua/lobject.h	/^#undef num_$/;"	d
num_has	liblua/lua.c	/^#define num_has	/;"	d	file:
num_segs	client/flash.h	/^	int num_segs;$/;"	m	struct:__anon33
num_segs	client/hid-flasher/flash.h	/^	int num_segs;$/;"	m	struct:__anon37
num_to_bytes	armsrc/util.c	/^void num_to_bytes(uint64_t n, size_t len, uint8_t* dest)$/;"	f
num_to_bytes	client/util.c	/^void num_to_bytes(uint64_t n, size_t len, uint8_t* dest)$/;"	f
numbits	armsrc/lfsampling.c	/^	uint32_t numbits;$/;"	m	struct:__anon24	file:
numbits	client/cmddata.c	/^	uint32_t numbits;$/;"	m	struct:__anon27	file:
numbits	client/loclass/cipherutils.h	/^	uint8_t numbits;$/;"	m	struct:__anon41
numbits	client/loclass/cipherutils.h	/^	uint8_t numbits;$/;"	m	struct:__anon42
numbuckets	client/nonce2key/crapto1.c	/^		uint32_t numbuckets;$/;"	m	struct:bucket_info	file:
numfield	liblua/lobject.h	/^#define numfield	/;"	d
numfield	liblua/lobject.h	/^#undef numfield$/;"	d
numparams	liblua/lobject.h	/^  lu_byte numparams;  \/* number of fixed parameters *\/$/;"	m	struct:Proto
numpy	fpga/tests/plot_edgedetect.py	/^import numpy$/;"	i
numusearray	liblua/ltable.c	/^static int numusearray (const Table *t, int *nums) {$/;"	f	file:
numusehash	liblua/ltable.c	/^static int numusehash (const Table *t, int *nums, int *pnasize) {$/;"	f	file:
nups	liblua/lparser.h	/^  lu_byte nups;  \/* number of upvalues *\/$/;"	m	struct:FuncState
nups	liblua/lua.h	/^  unsigned char nups;	\/* (u) number of upvalues *\/$/;"	m	struct:lua_Debug
nuse	liblua/lstate.h	/^  lu_int32 nuse;  \/* number of elements *\/$/;"	m	struct:stringtable
nval	liblua/lparser.h	/^    lua_Number nval;  \/* for VKNUM *\/$/;"	m	union:expdesc::__anon76
nvalue	liblua/lobject.h	/^#define nvalue(/;"	d
nx	fpga/tests/plot_edgedetect.py	/^nx = numpy.fromfile(BASENAME + ".time")$/;"	v
obj2gco	liblua/lstate.h	/^#define obj2gco(/;"	d
objtypename	liblua/ltm.h	/^#define objtypename(/;"	d
odd	armsrc/crapto1.h	/^struct Crypto1State {uint32_t odd, even;};$/;"	m	struct:Crypto1State
odd	client/nonce2key/crapto1.h	/^struct Crypto1State {uint32_t odd, even;};$/;"	m	struct:Crypto1State
odd	tools/mfkey/crapto1.h	/^struct Crypto1State {uint32_t odd, even;};$/;"	m	struct:Crypto1State
odd	tools/nonce2key/crapto1.h	/^struct Crypto1State {uint32_t odd, even;};$/;"	m	struct:Crypto1State
odd_parity_table	client/loclass/des.c	/^static const unsigned char odd_parity_table[128] = { 1,  2,  4,  7,  8,$/;"	v	file:
oddparity	armsrc/iso14443a.c	/^byte_t oddparity (const byte_t bt)$/;"	f
offline	client/ui.c	/^int offline;$/;"	v
oid	armsrc/epa.h	/^	uint8_t oid[10];$/;"	m	struct:__anon6
oid_pace_start	armsrc/epa.c	/^static const uint8_t oid_pace_start[] = {$/;"	v	file:
ok1	fpga/go.bat	/^:ok1$/;"	l
ok10	fpga/go.bat	/^:ok10$/;"	l
ok2	fpga/go.bat	/^:ok2$/;"	l
ok3	fpga/go.bat	/^:ok3$/;"	l
ok4	fpga/go.bat	/^:ok4$/;"	l
ok5	fpga/go.bat	/^:ok5$/;"	l
ok6	fpga/go.bat	/^:ok6$/;"	l
ok7	fpga/go.bat	/^:ok7$/;"	l
ok8	fpga/go.bat	/^:ok8$/;"	l
ok9	fpga/go.bat	/^:ok9$/;"	l
old_allowhook	liblua/lstate.h	/^      lu_byte old_allowhook;$/;"	m	struct:CallInfo::__anon79::__anon81
old_errfunc	liblua/lstate.h	/^      ptrdiff_t old_errfunc;$/;"	m	struct:CallInfo::__anon79::__anon81
oldpc	liblua/lstate.h	/^  const Instruction *oldpc;  \/* last pc traced *\/$/;"	m	struct:lua_State
oops	client/lualibs/html_dumplib.lua	/^local function oops(err)$/;"	f
oops	client/scripts/14araw.lua	/^function oops(err)$/;"	f
oops	client/scripts/dumptoemul.lua	/^function oops(err)$/;"	f
oops	client/scripts/emul2dump.lua	/^function oops(err)$/;"	f
oops	client/scripts/emul2html.lua	/^function oops(err)$/;"	f
oops	client/scripts/formatMifare.lua	/^function oops(err)$/;"	f
oops	client/scripts/htmldump.lua	/^function oops(err)$/;"	f
oops	client/scripts/mifare_autopwn.lua	/^function oops(err)$/;"	f
oops	client/scripts/ndef_dump.lua	/^function oops(err)$/;"	f
oops	client/scripts/remagic.lua	/^function oops(err)$/;"	f
oops	client/scripts/test_t55x7_psk.lua	/^function oops(err)$/;"	f
oops	client/scripts/tnp3dump.lua	/^function oops(err)$/;"	f
oops	client/scripts/tnp3sim.lua	/^function oops(err)$/;"	f
oops	client/scripts/tracetest.lua	/^function oops(err)$/;"	f
open	client/scripts/ndef_dump.lua	/^local function open()$/;"	f
open_func	liblua/lparser.c	/^static void open_func (LexState *ls, FuncState *fs, BlockCnt *bl) {$/;"	f	file:
opencheck	liblua/liolib.c	/^static void opencheck (lua_State *L, const char *fname, const char *mode) {$/;"	f	file:
openupval	liblua/lstate.h	/^  GCObject *openupval;  \/* list of open upvalues in this stack *\/$/;"	m	struct:lua_State
opmode	liblua/lopcodes.c	/^#define opmode(/;"	d	file:
order	include/crc.h	/^	int order;$/;"	m	struct:crc
os	client/pm3_eml_mfd_test.py	/^import unittest, os$/;"	i
os	tools/findbits.py	/^import os$/;"	i
os	tools/xorcheck.py	/^import os$/;"	i
os_clock	liblua/loslib.c	/^static int os_clock (lua_State *L) {$/;"	f	file:
os_date	liblua/loslib.c	/^static int os_date (lua_State *L) {$/;"	f	file:
os_difftime	liblua/loslib.c	/^static int os_difftime (lua_State *L) {$/;"	f	file:
os_execute	liblua/loslib.c	/^static int os_execute (lua_State *L) {$/;"	f	file:
os_exit	liblua/loslib.c	/^static int os_exit (lua_State *L) {$/;"	f	file:
os_getenv	liblua/loslib.c	/^static int os_getenv (lua_State *L) {$/;"	f	file:
os_remove	liblua/loslib.c	/^static int os_remove (lua_State *L) {$/;"	f	file:
os_rename	liblua/loslib.c	/^static int os_rename (lua_State *L) {$/;"	f	file:
os_setlocale	liblua/loslib.c	/^static int os_setlocale (lua_State *L) {$/;"	f	file:
os_time	liblua/loslib.c	/^static int os_time (lua_State *L) {$/;"	f	file:
os_tmpname	liblua/loslib.c	/^static int os_tmpname (lua_State *L) {$/;"	f	file:
osimage_present	include/proxmark3.h	/^		unsigned int osimage_present:1; \/* Set when a osimage that is capable of parsing the common area is present *\/$/;"	m	struct:common_area::__anon62
otherwhite	liblua/lgc.h	/^#define otherwhite(/;"	d
output	armsrc/iclass.c	/^    uint8_t *output;$/;"	m	struct:__anon10	file:
output	armsrc/iclass.c	/^    uint8_t *output;$/;"	m	struct:__anon8	file:
output	armsrc/iso14443.c	/^	uint8_t   *output;$/;"	m	struct:__anon13	file:
output	armsrc/iso14443.c	/^	uint8_t   *output;$/;"	m	struct:__anon15	file:
output	armsrc/iso14443a.h	/^	uint8_t  *output;$/;"	m	struct:__anon17
output	armsrc/iso14443a.h	/^    uint8_t *output;$/;"	m	struct:__anon20
output	client/loclass/cipher.c	/^void output(uint8_t* k,State s, BitstreamIn* in,  BitstreamOut* out)$/;"	f
output	fpga/fpga_hf.v	/^	input [7:0] adc_d, output adc_clk, output adc_noe,$/;"	p
output	fpga/fpga_hf.v	/^	input spck, output miso, input mosi, input ncs,$/;"	p
output	fpga/fpga_hf.v	/^	output pwr_lo, output pwr_hi,$/;"	p
output	fpga/fpga_hf.v	/^	output pwr_oe1, output pwr_oe2, output pwr_oe3, output pwr_oe4,$/;"	p
output	fpga/fpga_hf.v	/^	output ssp_frame, output ssp_din, input ssp_dout, output ssp_clk,$/;"	p
output	fpga/fpga_lf.v	/^	input [7:0] adc_d, output adc_clk, output adc_noe,$/;"	p
output	fpga/fpga_lf.v	/^	input spck, output miso, input mosi, input ncs,$/;"	p
output	fpga/fpga_lf.v	/^	output pwr_lo, output pwr_hi,$/;"	p
output	fpga/fpga_lf.v	/^	output pwr_oe1, output pwr_oe2, output pwr_oe3, output pwr_oe4,$/;"	p
output	fpga/fpga_lf.v	/^	output ssp_frame, output ssp_din, input ssp_dout, output ssp_clk,$/;"	p
output	fpga/lf_edge_detect.v	/^	output [7:0] high_threshold, output [7:0] highz_threshold,$/;"	p
output	fpga/lf_edge_detect.v	/^	output [7:0] lowz_threshold, output [7:0] low_threshold,$/;"	p
output	fpga/lf_edge_detect.v	/^	output [7:0] max, output [7:0] min,$/;"	p
output	fpga/lf_edge_detect.v	/^	output edge_state, output edge_toggle);$/;"	p
output	fpga/lo_edge_detect.v	/^    input [7:0] adc_d, output adc_clk,$/;"	p
output	fpga/lo_edge_detect.v	/^    output dbg,$/;"	p
output	fpga/lo_edge_detect.v	/^    output pwr_lo, output pwr_hi,$/;"	p
output	fpga/lo_edge_detect.v	/^    output pwr_oe1, output pwr_oe2, output pwr_oe3, output pwr_oe4,$/;"	p
output	fpga/lo_passthru.v	/^	output dbg$/;"	p
output	fpga/lo_passthru.v	/^	output pwr_lo, output pwr_hi,$/;"	p
output	fpga/lo_passthru.v	/^	output pwr_oe1, output pwr_oe2, output pwr_oe3, output pwr_oe4,$/;"	p
output	fpga/lo_passthru.v	/^	output ssp_din, input ssp_dout,$/;"	p
output	fpga/lo_read.v	/^	input [7:0] adc_d, output adc_clk,$/;"	p
output	fpga/lo_read.v	/^	output pwr_lo, output pwr_hi,$/;"	p
output	fpga/lo_read.v	/^	output pwr_oe1, output pwr_oe2, output pwr_oe3, output pwr_oe4,$/;"	p
output	fpga/lo_read.v	/^	output ssp_frame, output ssp_din, output ssp_clk,$/;"	p
output	fpga/min_max_tracker.v	/^	output [7:0] min, output [7:0] max);$/;"	p
output	liblua/luac.c	/^static const char* output=Output;	\/* actual output file name *\/$/;"	v	file:
output_edge	fpga/lf_edge_detect.v	/^	reg output_edge = 0;$/;"	r
output_state	fpga/lf_edge_detect.v	/^	reg output_state;$/;"	r
output_state	fpga/lo_simulate.v	/^reg output_state;$/;"	r
p	liblua/lobject.h	/^  struct Proto **p;  \/* functions defined inside the function *\/$/;"	m	struct:Proto	typeref:struct:Proto::Proto
p	liblua/lobject.h	/^  struct Proto *p;$/;"	m	struct:LClosure	typeref:struct:LClosure::Proto
p	liblua/lobject.h	/^  void *p;         \/* light userdata *\/$/;"	m	union:Value
p	liblua/lstate.h	/^  struct Proto p;$/;"	m	union:GCObject	typeref:struct:GCObject::Proto
p	liblua/lzio.h	/^  const char *p;		\/* current position in buffer *\/$/;"	m	struct:Zio
pUdp	common/usb_cdc.c	/^AT91PS_UDP pUdp = AT91C_BASE_UDP;$/;"	v
p_align	client/elf.h	/^	uint32_t p_align;$/;"	m	struct:__anon30
p_align	client/hid-flasher/elf.h	/^	uint32_t p_align;$/;"	m	struct:__anon34
p_end	liblua/lstrlib.c	/^  const char *p_end;  \/* end ('\\0') of pattern *\/$/;"	m	struct:MatchState	file:
p_filesz	client/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:__anon30
p_filesz	client/hid-flasher/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:__anon34
p_flags	client/elf.h	/^	uint32_t p_flags;$/;"	m	struct:__anon30
p_flags	client/hid-flasher/elf.h	/^	uint32_t p_flags;$/;"	m	struct:__anon34
p_memsz	client/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:__anon30
p_memsz	client/hid-flasher/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:__anon34
p_offset	client/elf.h	/^	uint32_t p_offset;$/;"	m	struct:__anon30
p_offset	client/hid-flasher/elf.h	/^	uint32_t p_offset;$/;"	m	struct:__anon34
p_paddr	client/elf.h	/^	uint32_t p_paddr;$/;"	m	struct:__anon30
p_paddr	client/hid-flasher/elf.h	/^	uint32_t p_paddr;$/;"	m	struct:__anon34
p_permtab	armsrc/des.c	/^const uint8_t p_permtab[] ={$/;"	v
p_type	client/elf.h	/^	uint32_t p_type;$/;"	m	struct:__anon30
p_type	client/hid-flasher/elf.h	/^	uint32_t p_type;$/;"	m	struct:__anon34
p_vaddr	client/elf.h	/^	uint32_t p_vaddr;$/;"	m	struct:__anon30
p_vaddr	client/hid-flasher/elf.h	/^	uint32_t p_vaddr;$/;"	m	struct:__anon34
pace_version_info_t	armsrc/epa.h	/^} pace_version_info_t;$/;"	t	typeref:struct:__anon6
pack	liblua/ltablib.c	/^static int pack (lua_State *L) {$/;"	f	file:
paintEvent	client/proxguiqt.cpp	/^void ProxWidget::paintEvent(QPaintEvent *event)$/;"	f	class:ProxWidget
pairsmeta	liblua/lbaselib.c	/^static int pairsmeta (lua_State *L, const char *method, int iszero,$/;"	f	file:
panic	liblua/lauxlib.c	/^static int panic (lua_State *L) {$/;"	f	file:
panic	liblua/lstate.h	/^  lua_CFunction panic;  \/* to be called in unprotected errors *\/$/;"	m	struct:global_State
param_get32ex	client/util.c	/^uint32_t param_get32ex(const char *line, int paramnum, int deflt, int base)$/;"	f
param_get64ex	client/util.c	/^uint64_t param_get64ex(const char *line, int paramnum, int deflt, int base)$/;"	f
param_get8	client/util.c	/^uint8_t param_get8(const char *line, int paramnum)$/;"	f
param_get8ex	client/util.c	/^uint8_t param_get8ex(const char *line, int paramnum, int deflt, int base)$/;"	f
param_getchar	client/util.c	/^char param_getchar(const char *line, int paramnum)$/;"	f
param_getdec	client/util.c	/^uint8_t param_getdec(const char *line, int paramnum, uint8_t *destination)$/;"	f
param_gethex	client/util.c	/^int param_gethex(const char *line, int paramnum, uint8_t * data, int hexcnt)$/;"	f
param_getptr	client/util.c	/^int param_getptr(const char *line, int *bg, int *en, int paramnum)$/;"	f
param_getstr	client/util.c	/^int param_getstr(const char *line, int paramnum, char * str)$/;"	f
param_isdec	client/util.c	/^uint8_t param_isdec(const char *line, int paramnum)$/;"	f
parameter_id	armsrc/epa.h	/^	uint8_t parameter_id;$/;"	m	struct:__anon6
parent	client/cmdparser.c	/^char *parent = pparent;$/;"	v
parity	armsrc/crapto1.h	/^static inline int parity(uint32_t x)$/;"	f
parity	armsrc/iso14443a.h	/^	uint8_t  *parity;$/;"	m	struct:__anon17
parity	armsrc/iso14443a.h	/^	uint8_t *parity;$/;"	m	struct:__anon20
parity	client/nonce2key/crapto1.h	/^static inline int parity(uint32_t x)$/;"	f
parity	tools/mfkey/crapto1.h	/^static inline int parity(uint32_t x)$/;"	f
parity	tools/nonce2key/crapto1.h	/^static inline int parity(uint32_t x)$/;"	f
parityBits	armsrc/iso14443a.h	/^	uint8_t  parityBits;$/;"	m	struct:__anon17
parityBits	armsrc/iso14443a.h	/^	uint8_t  parityBits;$/;"	m	struct:__anon20
parityLen	armsrc/iso14443a.h	/^	uint8_t  parityLen;$/;"	m	struct:__anon17
parityLen	armsrc/iso14443a.h	/^	uint8_t  parityLen;$/;"	m	struct:__anon20
parityTest	common/lfdemod.c	/^uint8_t parityTest(uint32_t bits, uint8_t bitLen, uint8_t pType)$/;"	f
parlist	liblua/lparser.c	/^static void parlist (LexState *ls) {$/;"	f	file:
parse 	client/lualibs/commands.lua	/^	parse = function (packet)$/;"	f
parse1443a	client/lualibs/read14a.lua	/^local function parse1443a(data)$/;"	f
parse15693	client/lualibs/hf_reader.lua	/^local function parse15693(data)$/;"	f
password	armsrc/hitag2.c	/^static byte_t password[4];$/;"	v	file:
password	include/hitag2.h	/^	byte_t password[4];$/;"	m	struct:__anon57
patchlistaux	liblua/lcode.c	/^static void patchlistaux (FuncState *fs, int list, int vtarget, int reg,$/;"	f	file:
patchtestreg	liblua/lcode.c	/^static int patchtestreg (FuncState *fs, int node, int reg) {$/;"	f	file:
pc	liblua/lparser.h	/^  int pc;  \/* next position to code (equivalent to `ncode') *\/$/;"	m	struct:FuncState
pc	liblua/lparser.h	/^  int pc;  \/* position in code *\/$/;"	m	struct:Labeldesc
pc1_permtab	armsrc/des.c	/^const uint8_t pc1_permtab[] ={$/;"	v
pc2_permtab	armsrc/des.c	/^const uint8_t pc2_permtab[] ={$/;"	v
pcRel	liblua/ldebug.h	/^#define pcRel(/;"	d
pcallcont	liblua/lbaselib.c	/^static int pcallcont (lua_State *L) {$/;"	f	file:
pck0	fpga/fpga_hf.v	/^	input pck0, input ck_1356meg, input ck_1356megb,$/;"	p
pck0	fpga/fpga_lf.v	/^	input pck0, input ck_1356meg, input ck_1356megb,$/;"	p
pck0	fpga/hi_iso14443a.v	/^    input pck0, ck_1356meg, ck_1356megb;$/;"	p
pck0	fpga/hi_read_rx_xcorr.v	/^    input pck0, ck_1356meg, ck_1356megb;$/;"	p
pck0	fpga/hi_read_tx.v	/^    input pck0, ck_1356meg, ck_1356megb;$/;"	p
pck0	fpga/hi_simulate.v	/^    input pck0, ck_1356meg, ck_1356megb;$/;"	p
pck0	fpga/lo_edge_detect.v	/^    input pck0, input pck_divclk,$/;"	p
pck0	fpga/lo_read.v	/^	input pck0, input [7:0] pck_cnt, input pck_divclk,$/;"	p
pck0	fpga/lo_simulate.v	/^    input pck0, ck_1356meg, ck_1356megb;$/;"	p
pck0	fpga/testbed_hi_read_tx.v	/^	reg  pck0;$/;"	r
pck0	fpga/testbed_hi_simulate.v	/^	reg  pck0;$/;"	r
pck0	fpga/testbed_lo_read.v	/^	reg  pck0;$/;"	r
pck0	fpga/testbed_lo_simulate.v	/^	reg  pck0;$/;"	r
pck0i	fpga/testbed_fpga.v	/^    reg pck0i, ck_1356meg, ck_1356megb;$/;"	r
pck_cnt	fpga/fpga_lf.v	/^wire [7:0] pck_cnt;$/;"	n
pck_divclk	fpga/fpga_lf.v	/^wire pck_divclk;$/;"	n
pck_divclk	fpga/lo_passthru.v	/^	input pck_divclk,$/;"	p
pck_divider	fpga/lo_simulate.v	/^reg [7:0] pck_divider;$/;"	r
perform_setup_phase_rwd	armsrc/legicrf.c	/^static uint32_t perform_setup_phase_rwd(int iv)$/;"	f	file:
permute	armsrc/des.c	/^void permute(const uint8_t *ptable, const uint8_t *in, uint8_t *out){$/;"	f
permute	client/loclass/ikeys.c	/^void permute(BitstreamIn *p_in, uint64_t z,int l,int r, BitstreamOut* out)$/;"	f
permutekey	client/loclass/elite_crack.c	/^void permutekey(uint8_t key[8], uint8_t dest[8])$/;"	f
permutekey_rev	client/loclass/elite_crack.c	/^void permutekey_rev(uint8_t key[8], uint8_t dest[8])$/;"	f
pi	client/loclass/ikeys.c	/^uint8_t pi[35] = {0x0F,0x17,0x1B,0x1D,0x1E,0x27,0x2B,0x2D,0x2E,0x33,0x35,0x39,0x36,0x3A,0x3C,0x47,0x4B,0x4D,0x4E,0x53,0x55,0x56,0x59,0x5A,0x5C,0x63,0x65,0x66,0x69,0x6A,0x6C,0x71,0x72,0x74,0x78};$/;"	v
pk_funcs	liblua/loadlib.c	/^static const luaL_Reg pk_funcs[] = {$/;"	v	file:
placeFirst	client/scripts/mfkeys.lua	/^local function placeFirst(akey, list)$/;"	f
plot_time	fpga/tests/plot_edgedetect.py	/^def plot_time(dat1):$/;"	f
plotapp	client/proxguiqt.h	/^		QApplication *plotapp;$/;"	m	class:ProxGuiQT
plotwidget	client/proxguiqt.h	/^		ProxWidget *plotwidget;$/;"	m	class:ProxGuiQT
plt	fpga/tests/plot_edgedetect.py	/^import matplotlib.pyplot as plt$/;"	i
pm3_eml2mfd	client/pm3_eml_mfd_test.py	/^import pm3_eml2mfd, pm3_mfd2eml$/;"	i
pm3_mfd2eml	client/pm3_eml_mfd_test.py	/^import pm3_eml2mfd, pm3_mfd2eml$/;"	i
pmain	liblua/lua.c	/^static int pmain (lua_State *L) {$/;"	f	file:
pmain	liblua/luac.c	/^static int pmain(lua_State* L)$/;"	f	file:
polarssl_printf	client/aes.c	/^#define polarssl_printf /;"	d	file:
polarssl_printf	client/loclass/des.c	/^#define polarssl_printf /;"	d	file:
polarssl_zeroize	client/aes.c	/^static void polarssl_zeroize( void *v, size_t n ) {$/;"	f	file:
polynom	include/crc.h	/^	uint32_t polynom;$/;"	m	struct:crc
posCnt	armsrc/iclass.c	/^    int     posCnt;$/;"	m	struct:__anon8	file:
posCnt	armsrc/iso14443.c	/^	int     posCnt;$/;"	m	struct:__anon13	file:
posCnt	armsrc/iso14443a.h	/^	uint16_t posCnt;$/;"	m	struct:__anon20
posCount	armsrc/iclass.c	/^    int     posCount;$/;"	m	struct:__anon10	file:
posCount	armsrc/iso14443.c	/^	int     posCount;$/;"	m	struct:__anon15	file:
position	armsrc/lfsampling.c	/^	uint32_t position;$/;"	m	struct:__anon24	file:
position	client/cmddata.c	/^	uint32_t position;$/;"	m	struct:__anon27	file:
position	client/loclass/cipherutils.h	/^	uint8_t position;$/;"	m	struct:__anon41
position	client/loclass/cipherutils.h	/^	uint8_t position;$/;"	m	struct:__anon42
posrelat	liblua/lstrlib.c	/^static size_t posrelat (ptrdiff_t pos, size_t len) {$/;"	f	file:
pparent	client/cmdparser.c	/^char pparent[512] = {0};$/;"	v
pps	armsrc/epa.c	/^static const uint8_t pps[] = {0xD0, 0x11, 0x00, 0x52, 0xA6};$/;"	v	file:
pre_after_hysteresis	fpga/hi_iso14443a.v	/^reg pre_after_hysteresis; $/;"	r
preambleSearch	common/lfdemod.c	/^uint8_t preambleSearch(uint8_t *BitStream, uint8_t *preamble, size_t pLen, size_t *size, size_t *startIdx)$/;"	f
prefetch_abort	bootrom/flash-reset.s	/^prefetch_abort:$/;"	l
preinit_state	liblua/lstate.c	/^static void preinit_state (lua_State *L, global_State *g) {$/;"	f	file:
preloadedlibs	liblua/linit.c	/^static const luaL_Reg preloadedlibs[] = {$/;"	v	file:
prepareHF15Cmd	client/cmdhf15.c	/^int prepareHF15Cmd(char **cmd, UsbCommand *c, uint8_t iso15cmd[], int iso15cmdlen) {$/;"	f
prepare_allocated_tag_modulation	armsrc/iso14443a.c	/^bool prepare_allocated_tag_modulation(tag_response_info_t* response_info) {$/;"	f
prepare_tag_modulation	armsrc/iso14443a.c	/^bool prepare_tag_modulation(tag_response_info_t* response_info, size_t max_buffer_size) {$/;"	f
present	include/proxmark3.h	/^	char present; \/* 1 if the version information could be created at compile time, otherwise 0 and the remaining fields (except for magic) are empty *\/$/;"	m	struct:version_information
prev	liblua/lobject.h	/^      struct UpVal *prev;$/;"	m	struct:UpVal::__anon70::__anon71	typeref:struct:UpVal::__anon70::__anon71::UpVal
prev	liblua/lparser.c	/^  struct LHS_assign *prev;$/;"	m	struct:LHS_assign	typeref:struct:LHS_assign::LHS_assign	file:
prev	liblua/lparser.h	/^  struct FuncState *prev;  \/* enclosing function *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::FuncState
previous	liblua/ldo.c	/^  struct lua_longjmp *previous;$/;"	m	struct:lua_longjmp	typeref:struct:lua_longjmp::lua_longjmp	file:
previous	liblua/lparser.c	/^  struct BlockCnt *previous;  \/* chain *\/$/;"	m	struct:BlockCnt	typeref:struct:BlockCnt::BlockCnt	file:
previous	liblua/lstate.h	/^  struct CallInfo *previous, *next;  \/* dynamic call link *\/$/;"	m	struct:CallInfo	typeref:struct:CallInfo::CallInfo
primaryexp	liblua/lparser.c	/^static void primaryexp (LexState *ls, expdesc *v) {$/;"	f	file:
print64bits	client/loclass/ikeys.c	/^void print64bits(char*name, uint64_t val)$/;"	f
printBitStream	client/cmddata.c	/^void printBitStream(uint8_t BitStream[], uint32_t bitLen)$/;"	f
printBits	client/util.c	/^char * printBits(size_t const size, void const * const ptr)$/;"	f
printConfig	armsrc/lfsampling.c	/^void printConfig()$/;"	f
printDemodBuff	client/cmddata.c	/^void printDemodBuff()$/;"	f
printEM410x	client/cmddata.c	/^void printEM410x(uint64_t id)$/;"	f
printState	client/loclass/ikeys.c	/^void printState(char* desc, uint64_t c)$/;"	f
printTraceLine	client/cmdhf.c	/^uint16_t printTraceLine(uint16_t tracepos, uint16_t traceLen, uint8_t *trace, uint8_t protocol, bool showWaitCycles)$/;"	f
print_hex	client/util.c	/^void print_hex(const uint8_t * data, const size_t len)$/;"	f
print_lock	client/proxmark3.c	/^pthread_mutex_t print_lock;$/;"	v
print_result	armsrc/util.c	/^void print_result(char *name, uint8_t *buf, size_t len) {$/;"	f
print_usage	liblua/lua.c	/^static void print_usage (const char *badoption) {$/;"	f	file:
print_version	liblua/lua.c	/^static void print_version (void) {$/;"	f	file:
printarr	client/loclass/cipherutils.c	/^void printarr(char * name, uint8_t* arr, int len)$/;"	f
printarr_human_readable	client/loclass/cipherutils.c	/^void printarr_human_readable(char * title, uint8_t* arr, int len)$/;"	f
printbegin	client/loclass/ikeys.c	/^void printbegin()$/;"	f
printvar	client/loclass/cipherutils.c	/^void printvar(char * name, uint8_t* arr, int len)$/;"	f
priority	liblua/lparser.c	/^} priority[] = {  \/* ORDER OPR *\/$/;"	v	typeref:struct:__anon74	file:
prlog	client/scripts/ndef_dump.lua	/^function prlog(...)$/;"	f
prng_successor	armsrc/crypto1.c	/^uint32_t prng_successor(uint32_t x, uint32_t n)$/;"	f
prng_successor	client/nonce2key/crypto1.c	/^uint32_t prng_successor(uint32_t x, uint32_t n)$/;"	f
prng_successor	tools/mfkey/crypto1.c	/^uint32_t prng_successor(uint32_t x, uint32_t n)$/;"	f
prng_successor	tools/nonce2key/crypto1.c	/^uint32_t prng_successor(uint32_t x, uint32_t n)$/;"	f
prng_timer	armsrc/legicrf.c	/^AT91PS_TC prng_timer;$/;"	v
prnlog	client/loclass/fileutils.c	/^void prnlog(char *fmt, ...)$/;"	f
productName	client/cmdhf15.c	/^} productName; $/;"	t	typeref:struct:__anon29	file:
progname	liblua/lua.c	/^static const char *progname = LUA_PROGNAME;$/;"	v	file:
progname	liblua/luac.c	/^static const char* progname=PROGNAME;	\/* actual program name *\/$/;"	v	file:
propagateall	liblua/lgc.c	/^static void propagateall (global_State *g) {$/;"	f	file:
propagatelist	liblua/lgc.c	/^static void propagatelist (global_State *g, GCObject *l) {$/;"	f	file:
propagatemark	liblua/lgc.c	/^static void propagatemark (global_State *g) {$/;"	f	file:
prox_unit	client/hid-flasher/proxusb.h	/^struct prox_unit {$/;"	s
prx	client/proxmark3.c	/^byte_t* prx = rx;$/;"	v
psk1TOpsk2	common/lfdemod.c	/^void psk1TOpsk2(uint8_t *BitStream, size_t size)$/;"	f
pskRawDemod	common/lfdemod.c	/^int pskRawDemod(uint8_t dest[], size_t *size, int *clock, int *invert)$/;"	f
pskTest	client/scripts/test_t55x7_psk.lua	/^function pskTest(modulation)$/;"	f
push6bits	client/loclass/cipherutils.c	/^void push6bits( BitstreamOut* stream, uint8_t bits)$/;"	f
pushBit	armsrc/lfsampling.c	/^void pushBit( BitstreamOut* stream, uint8_t bit)$/;"	f
pushBit	client/loclass/cipherutils.c	/^void pushBit( BitstreamOut* stream, bool bit)$/;"	f
push_captures	liblua/lstrlib.c	/^static int push_captures (MatchState *ms, const char *s, const char *e) {$/;"	f	file:
push_onecapture	liblua/lstrlib.c	/^static void push_onecapture (MatchState *ms, int i, const char *s,$/;"	f	file:
pushbackSixBitByte	client/loclass/ikeys.c	/^void pushbackSixBitByte(uint64_t *c, uint8_t z, int n)$/;"	f
pushclosure	liblua/lvm.c	/^static void pushclosure (lua_State *L, Proto *p, UpVal **encup, StkId base,$/;"	f	file:
pusherror	liblua/loadlib.c	/^static void pusherror (lua_State *L) {$/;"	f	file:
pushfuncname	liblua/lauxlib.c	/^static void pushfuncname (lua_State *L, lua_Debug *ar) {$/;"	f	file:
pushglobalfuncname	liblua/lauxlib.c	/^static int pushglobalfuncname (lua_State *L, lua_Debug *ar) {$/;"	f	file:
pushline	liblua/lua.c	/^static int pushline (lua_State *L, int firstline) {$/;"	f	file:
pushnexttemplate	liblua/loadlib.c	/^static const char *pushnexttemplate (lua_State *L, const char *path) {$/;"	f	file:
pushstr	liblua/lobject.c	/^static void pushstr (lua_State *L, const char *str, size_t l) {$/;"	f	file:
pvalue	liblua/lobject.h	/^#define pvalue(/;"	d
pwd	include/hitag2.h	/^	rht2d_password pwd;$/;"	m	union:__anon60
pwr_hi	fpga/hi_iso14443a.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_hi	fpga/hi_read_rx_xcorr.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_hi	fpga/hi_read_tx.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_hi	fpga/hi_read_tx.v	/^reg pwr_hi;$/;"	r
pwr_hi	fpga/hi_simulate.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_hi	fpga/lo_simulate.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_hi	fpga/testbed_fpga.v	/^    wire pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	n
pwr_hi	fpga/testbed_hi_read_tx.v	/^	wire pwr_hi;$/;"	n
pwr_hi	fpga/testbed_hi_simulate.v	/^	wire pwr_hi;$/;"	n
pwr_hi	fpga/testbed_lo_read.v	/^	wire pwr_hi;$/;"	n
pwr_hi	fpga/testbed_lo_simulate.v	/^	wire pwr_hi;$/;"	n
pwr_lo	fpga/fpga_hf.v	/^	output pwr_lo, output pwr_hi,$/;"	p
pwr_lo	fpga/fpga_lf.v	/^	output pwr_lo, output pwr_hi,$/;"	p
pwr_lo	fpga/hi_iso14443a.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_lo	fpga/hi_read_rx_xcorr.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_lo	fpga/hi_read_tx.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_lo	fpga/hi_simulate.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_lo	fpga/lo_edge_detect.v	/^    output pwr_lo, output pwr_hi,$/;"	p
pwr_lo	fpga/lo_read.v	/^	output pwr_lo, output pwr_hi,$/;"	p
pwr_lo	fpga/lo_simulate.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_lo	fpga/testbed_fpga.v	/^    wire pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	n
pwr_lo	fpga/testbed_hi_read_tx.v	/^	wire pwr_lo;$/;"	n
pwr_lo	fpga/testbed_hi_simulate.v	/^	wire pwr_lo;$/;"	n
pwr_lo	fpga/testbed_lo_read.v	/^	wire pwr_lo;$/;"	n
pwr_lo	fpga/testbed_lo_simulate.v	/^	wire pwr_lo;$/;"	n
pwr_oe1	fpga/fpga_hf.v	/^	output pwr_oe1, output pwr_oe2, output pwr_oe3, output pwr_oe4,$/;"	p
pwr_oe1	fpga/fpga_lf.v	/^	output pwr_oe1, output pwr_oe2, output pwr_oe3, output pwr_oe4,$/;"	p
pwr_oe1	fpga/hi_iso14443a.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_oe1	fpga/hi_read_rx_xcorr.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_oe1	fpga/hi_read_tx.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_oe1	fpga/hi_read_tx.v	/^reg pwr_oe1;$/;"	r
pwr_oe1	fpga/hi_simulate.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_oe1	fpga/lo_edge_detect.v	/^    output pwr_oe1, output pwr_oe2, output pwr_oe3, output pwr_oe4,$/;"	p
pwr_oe1	fpga/lo_passthru.v	/^	output pwr_oe1, output pwr_oe2, output pwr_oe3, output pwr_oe4,$/;"	p
pwr_oe1	fpga/lo_read.v	/^	output pwr_oe1, output pwr_oe2, output pwr_oe3, output pwr_oe4,$/;"	p
pwr_oe1	fpga/lo_simulate.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_oe1	fpga/testbed_fpga.v	/^    wire pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	n
pwr_oe1	fpga/testbed_hi_read_tx.v	/^	wire pwr_oe1;$/;"	n
pwr_oe1	fpga/testbed_hi_simulate.v	/^	wire pwr_oe1;$/;"	n
pwr_oe1	fpga/testbed_lo_read.v	/^	wire pwr_oe1;$/;"	n
pwr_oe1	fpga/testbed_lo_simulate.v	/^	wire pwr_oe1;$/;"	n
pwr_oe2	fpga/hi_iso14443a.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_oe2	fpga/hi_read_rx_xcorr.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_oe2	fpga/hi_read_tx.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_oe2	fpga/hi_read_tx.v	/^reg pwr_oe2;$/;"	r
pwr_oe2	fpga/hi_simulate.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_oe2	fpga/lo_simulate.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_oe2	fpga/testbed_fpga.v	/^    wire pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	n
pwr_oe2	fpga/testbed_hi_read_tx.v	/^	wire pwr_oe2;$/;"	n
pwr_oe2	fpga/testbed_hi_simulate.v	/^	wire pwr_oe2;$/;"	n
pwr_oe2	fpga/testbed_lo_read.v	/^	wire pwr_oe2;$/;"	n
pwr_oe2	fpga/testbed_lo_simulate.v	/^	wire pwr_oe2;$/;"	n
pwr_oe3	fpga/hi_iso14443a.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_oe3	fpga/hi_read_rx_xcorr.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_oe3	fpga/hi_read_tx.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_oe3	fpga/hi_read_tx.v	/^reg pwr_oe3;$/;"	r
pwr_oe3	fpga/hi_simulate.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_oe3	fpga/lo_simulate.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_oe3	fpga/testbed_fpga.v	/^    wire pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	n
pwr_oe3	fpga/testbed_hi_read_tx.v	/^	wire pwr_oe3;$/;"	n
pwr_oe3	fpga/testbed_hi_simulate.v	/^	wire pwr_oe3;$/;"	n
pwr_oe3	fpga/testbed_lo_read.v	/^	wire pwr_oe3;$/;"	n
pwr_oe3	fpga/testbed_lo_simulate.v	/^	wire pwr_oe3;$/;"	n
pwr_oe4	fpga/hi_iso14443a.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_oe4	fpga/hi_read_rx_xcorr.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_oe4	fpga/hi_read_tx.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_oe4	fpga/hi_read_tx.v	/^reg pwr_oe4;$/;"	r
pwr_oe4	fpga/hi_simulate.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_oe4	fpga/lo_simulate.v	/^    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	p
pwr_oe4	fpga/testbed_fpga.v	/^    wire pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;$/;"	n
pwr_oe4	fpga/testbed_hi_read_tx.v	/^	wire pwr_oe4;$/;"	n
pwr_oe4	fpga/testbed_hi_simulate.v	/^	wire pwr_oe4;$/;"	n
pwr_oe4	fpga/testbed_lo_read.v	/^	wire pwr_oe4;$/;"	n
pwr_oe4	fpga/testbed_lo_simulate.v	/^	wire pwr_oe4;$/;"	n
qt_meta_data_ProxGuiQT	client/proxguiqt.moc.cpp	/^static const uint qt_meta_data_ProxGuiQT[] = {$/;"	v	file:
qt_meta_data_ProxWidget	client/proxguiqt.moc.cpp	/^static const uint qt_meta_data_ProxWidget[] = {$/;"	v	file:
qt_meta_stringdata_ProxGuiQT	client/proxguiqt.moc.cpp	/^static const char qt_meta_stringdata_ProxGuiQT[] = {$/;"	v	file:
qt_meta_stringdata_ProxWidget	client/proxguiqt.moc.cpp	/^static const char qt_meta_stringdata_ProxWidget[] = {$/;"	v	file:
qt_metacall	client/proxguiqt.moc.cpp	/^int ProxGuiQT::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ProxGuiQT
qt_metacall	client/proxguiqt.moc.cpp	/^int ProxWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ProxWidget
qt_metacast	client/proxguiqt.moc.cpp	/^void *ProxGuiQT::qt_metacast(const char *_clname)$/;"	f	class:ProxGuiQT
qt_metacast	client/proxguiqt.moc.cpp	/^void *ProxWidget::qt_metacast(const char *_clname)$/;"	f	class:ProxWidget
qt_static_metacall	client/proxguiqt.moc.cpp	/^void ProxGuiQT::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ProxGuiQT
qt_static_metacall	client/proxguiqt.moc.cpp	/^void ProxWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ProxWidget
quad_t	armsrc/printf.c	/^typedef long long quad_t;$/;"	t	file:
quicksort	armsrc/crapto1.c	/^static void quicksort(uint32_t* const start, uint32_t* const stop)$/;"	f	file:
quicksort	tools/mfkey/crapto1.c	/^static void quicksort(uint32_t* const start, uint32_t* const stop)$/;"	f	file:
quicksort	tools/nonce2key/crapto1.c	/^static void quicksort(uint32_t* const start, uint32_t* const stop)$/;"	f	file:
r	client/loclass/cipher.c	/^	uint8_t r;$/;"	m	struct:__anon40	file:
r	fpga/tests/tb_lf_edge_detect.v	/^	integer r;$/;"	r
r	fpga/tests/tb_lp20khz_1MSa_iir_filter.v	/^	integer fin, fout, r;$/;"	r
r	fpga/tests/tb_min_max_tracker.v	/^	integer r;$/;"	r
r	liblua/llex.h	/^  lua_Number r;$/;"	m	union:__anon67
ram_start	bootrom/ram-reset.s	/^ram_start:$/;"	l
rawgco2ts	liblua/lstate.h	/^#define rawgco2ts(/;"	d
rawgco2u	liblua/lstate.h	/^#define rawgco2u(/;"	d
rawtsvalue	liblua/lobject.h	/^#define rawtsvalue(/;"	d
rawuvalue	liblua/lobject.h	/^#define rawuvalue(/;"	d
rcon	armsrc/aes.c	/^static const unsigned int rcon[] = {$/;"	v	file:
read14443B	client/lualibs/hf_reader.lua	/^local function read14443B()$/;"	f
read14443a	client/lualibs/read14a.lua	/^local function read14443a(dont_disconnect)$/;"	f
read15693	client/lualibs/hf_reader.lua	/^local function read15693()$/;"	f
readKeyFile	client/loclass/ikeys.c	/^int readKeyFile(uint8_t key[8])$/;"	f
read_all	liblua/liolib.c	/^static void read_all (lua_State *L, FILE *f) {$/;"	f	file:
read_chars	liblua/liolib.c	/^static int read_chars (lua_State *L, FILE *f, size_t n) {$/;"	f	file:
read_line	liblua/liolib.c	/^static int read_line (lua_State *L, FILE *f, int chop) {$/;"	f	file:
read_long_string	liblua/llex.c	/^static void read_long_string (LexState *ls, SemInfo *seminfo, int sep) {$/;"	f	file:
read_number	liblua/liolib.c	/^static int read_number (lua_State *L, FILE *f) {$/;"	f	file:
read_numeral	liblua/llex.c	/^static void read_numeral (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
read_string	liblua/llex.c	/^static void read_string (LexState *ls, int del, SemInfo *seminfo) {$/;"	f	file:
readable	liblua/loadlib.c	/^static int readable (const char *filename) {$/;"	f	file:
readdecesc	liblua/llex.c	/^static int readdecesc (LexState *ls) {$/;"	f	file:
readdump	client/scripts/dumptoemul.lua	/^local function readdump(infile)$/;"	f
readdumpkeys	client/scripts/tnp3dump.lua	/^local function readdumpkeys(infile)$/;"	f
reader	liblua/luac.c	/^static const char* reader(lua_State *L, void *ud, size_t *size)$/;"	f	file:
reader	liblua/lzio.h	/^  lua_Reader reader;		\/* reader function *\/$/;"	m	struct:Zio
reader_data	fpga/hi_iso14443a.v	/^reg [3:0] reader_data;$/;"	r
reader_falling_edge_time	fpga/hi_iso14443a.v	/^reg [3:0] reader_falling_edge_time;$/;"	r
reader_modulation	fpga/lo_edge_detect.v	/^wire reader_modulation = !ssp_dout & lf_field & pck_divclk;$/;"	n
readhexa	liblua/lobject.c	/^static lua_Number readhexa (const char **s, lua_Number r, int *count) {$/;"	f	file:
readhexaesc	liblua/llex.c	/^static int readhexaesc (LexState *ls) {$/;"	f	file:
reallymarkobject	liblua/lgc.c	/^static void reallymarkobject (global_State *g, GCObject *o) {$/;"	f	file:
receiver_arg	client/proxmark3.c	/^struct receiver_arg {$/;"	s	file:
recfield	liblua/lparser.c	/^static void recfield (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
recover	armsrc/crapto1.c	/^recover(uint32_t *o_head, uint32_t *o_tail, uint32_t oks,$/;"	f	file:
recover	client/nonce2key/crapto1.c	/^recover(uint32_t *o_head, uint32_t *o_tail, uint32_t oks,$/;"	f	file:
recover	liblua/ldo.c	/^static int recover (lua_State *L, int status) {$/;"	f	file:
recover	tools/mfkey/crapto1.c	/^recover(uint32_t *o_head, uint32_t *o_tail, uint32_t oks,$/;"	f	file:
recover	tools/nonce2key/crapto1.c	/^recover(uint32_t *o_head, uint32_t *o_tail, uint32_t oks,$/;"	f	file:
registerlocalvar	liblua/lparser.c	/^static int registerlocalvar (LexState *ls, TString *varname) {$/;"	f	file:
rehash	liblua/ltable.c	/^static void rehash (lua_State *L, Table *t, const TValue *ek) {$/;"	f	file:
remarkupvals	liblua/lgc.c	/^static void remarkupvals (global_State *g) {$/;"	f	file:
removeParity	common/lfdemod.c	/^size_t removeParity(uint8_t *BitStream, size_t startIdx, uint8_t pLen, uint8_t pType, size_t bLen)$/;"	f
removeentry	liblua/lgc.c	/^static void removeentry (Node *n) {$/;"	f	file:
removevalues	liblua/lcode.c	/^static void removevalues (FuncState *fs, int list) {$/;"	f	file:
removevars	liblua/lparser.c	/^static void removevars (FuncState *fs, int tolevel) {$/;"	f	file:
repeatstat	liblua/lparser.c	/^static void repeatstat (LexState *ls, int line) {$/;"	f	file:
report	liblua/lua.c	/^static int report (lua_State *L, int status) {$/;"	f	file:
reset	bootrom/flash-reset.s	/^reset:$/;"	l
resetbit	liblua/lgc.h	/^#define resetbit(/;"	d
resetbits	liblua/lgc.h	/^#define resetbits(/;"	d
resethookcount	liblua/ldebug.h	/^#define resethookcount(/;"	d
resetoldbit	liblua/lgc.h	/^#define resetoldbit(/;"	d
respAC	armsrc/emvcard.h	/^    uint8_t respAC[255];$/;"	m	struct:__anon3
respAC_len	armsrc/emvcard.h	/^    uint8_t respAC_len;$/;"	m	struct:__anon3
respPDOLEMV	armsrc/emvcard.h	/^    uint8_t respPDOLEMV[255];$/;"	m	struct:__anon3
respPDOLEMV_len	armsrc/emvcard.h	/^    uint8_t respPDOLEMV_len; $/;"	m	struct:__anon3
respPDOLMSR	armsrc/emvcard.h	/^    uint8_t respPDOLMSR[255];$/;"	m	struct:__anon3
respPDOLMSR_len	armsrc/emvcard.h	/^    uint8_t respPDOLMSR_len;$/;"	m	struct:__anon3
respRR11	armsrc/emvcard.h	/^    uint8_t respRR11[255];$/;"	m	struct:__anon3
respRR11_len	armsrc/emvcard.h	/^    uint8_t respRR11_len;$/;"	m	struct:__anon3
respRR21	armsrc/emvcard.h	/^    uint8_t respRR21[255];$/;"	m	struct:__anon3
respRR21_len	armsrc/emvcard.h	/^    uint8_t respRR21_len;$/;"	m	struct:__anon3
respRR31	armsrc/emvcard.h	/^    uint8_t respRR31[255];$/;"	m	struct:__anon3
respRR31_len	armsrc/emvcard.h	/^    uint8_t respRR31_len;$/;"	m	struct:__anon3
respRR32	armsrc/emvcard.h	/^    uint8_t respRR32[255];$/;"	m	struct:__anon3
respRR32_len	armsrc/emvcard.h	/^    uint8_t respRR32_len;$/;"	m	struct:__anon3
respRR41	armsrc/emvcard.h	/^    uint8_t respRR41[255];$/;"	m	struct:__anon3
respRR41_len	armsrc/emvcard.h	/^    uint8_t respRR41_len;$/;"	m	struct:__anon3
respRR42	armsrc/emvcard.h	/^    uint8_t respRR42[255];$/;"	m	struct:__anon3
respRR42_len	armsrc/emvcard.h	/^    uint8_t respRR42_len;$/;"	m	struct:__anon3
respSELAID	armsrc/emvcard.h	/^    uint8_t respSELAID[255];$/;"	m	struct:__anon3
respSELAID_len	armsrc/emvcard.h	/^    uint8_t respSELAID_len;$/;"	m	struct:__anon3
respSELPPSE	armsrc/emvcard.h	/^    uint8_t respSELPPSE[255];$/;"	m	struct:__anon3
respSELPPSE_len	armsrc/emvcard.h	/^    uint8_t respSELPPSE_len; $/;"	m	struct:__anon3
response	armsrc/iso14443a.h	/^  uint8_t* response;$/;"	m	struct:__anon22
response_n	armsrc/iso14443a.h	/^  size_t   response_n;$/;"	m	struct:__anon22
restartcollection	liblua/lgc.c	/^static void restartcollection (global_State *g) {$/;"	f	file:
restorestack	liblua/ldo.h	/^#define restorestack(/;"	d
resume	liblua/ldo.c	/^static void resume (lua_State *L, void *ud) {$/;"	f	file:
resume_error	liblua/ldo.c	/^static l_noret resume_error (lua_State *L, const char *msg, StkId firstArg) {$/;"	f	file:
retraversegrays	liblua/lgc.c	/^static void retraversegrays (global_State *g) {$/;"	f	file:
retstat	liblua/lparser.c	/^static void retstat (LexState *ls) {$/;"	f	file:
returnToLuaWithError	client/scripting.c	/^static int returnToLuaWithError(lua_State *L, const char* fmt, ...)$/;"	f	file:
return_on_error	client/hid-flasher/proxusb.c	/^unsigned char return_on_error = 0;$/;"	v
rev16	armsrc/hitag2.c	/^#define rev16(/;"	d	file:
rev32	armsrc/hitag2.c	/^#define rev32(/;"	d	file:
rev64	armsrc/hitag2.c	/^#define rev64(/;"	d	file:
rev8	armsrc/hitag2.c	/^#define rev8(/;"	d	file:
reverseCrcBytes	client/scripts/tnp3dump.lua	/^local function reverseCrcBytes(crc)$/;"	f
reverse_arraybytes	client/loclass/cipherutils.c	/^void reverse_arraybytes(uint8_t* arr, size_t len)$/;"	f
reverse_arraycopy	client/loclass/cipherutils.c	/^void reverse_arraycopy(uint8_t* arr, uint8_t* dest, size_t len)$/;"	f
reversebytes	client/loclass/cipherutils.c	/^uint8_t reversebytes(uint8_t b) {$/;"	f
revstate	client/mifarehost.c	/^struct Crypto1State *revstate;$/;"	v	typeref:struct:Crypto1State
rht2d_authenticate	include/hitag2.h	/^} PACKED rht2d_authenticate;$/;"	t	typeref:struct:__anon58
rht2d_crypto	include/hitag2.h	/^} PACKED rht2d_crypto;$/;"	t	typeref:struct:__anon59
rht2d_password	include/hitag2.h	/^} PACKED rht2d_password;$/;"	t	typeref:struct:__anon57
right	liblua/lparser.c	/^  lu_byte right; \/* right priority *\/$/;"	m	struct:__anon74	file:
righttt	liblua/lobject.h	/^#define righttt(/;"	d
rk	client/aes.h	/^    uint32_t *rk;               \/*!<  AES round keys    *\/$/;"	m	struct:__anon26
rk	client/loclass/elite_crack.c	/^void rk(uint8_t *key, uint8_t n, uint8_t *outp_key)$/;"	f
rl	client/loclass/elite_crack.c	/^uint8_t rl(uint8_t val)$/;"	f
rmtree	client/pm3_eml_mfd_test.py	/^from shutil import rmtree$/;"	i
rol	armsrc/util.c	/^void rol(uint8_t *data, const size_t len){$/;"	f
rol	client/cmdhfmfu.c	/^void rol (uint8_t *data, const size_t len){$/;"	f
rotateCSN	armsrc/iclass.c	/^void rotateCSN(uint8_t* originalCSN, uint8_t* rotatedCSN) {$/;"	f
rotl64	armsrc/hitag2.c	/^#define rotl64(/;"	d	file:
rr	client/loclass/elite_crack.c	/^uint8_t rr(uint8_t val)$/;"	f
rsamples	armsrc/iso14443a.c	/^int rsamples = 0;$/;"	v
rttype	liblua/lobject.h	/^#define rttype(/;"	d
rttype	liblua/lobject.h	/^#undef rttype$/;"	d
run	client/proxmark3.c	/^	int run;$/;"	m	struct:receiver_arg	file:
run_test	fpga/tests/Makefile	/^run_test = \\$/;"	m
runargs	liblua/lua.c	/^static int runargs (lua_State *L, char **argv, int n) {$/;"	f	file:
rx	client/proxmark3.c	/^byte_t rx[0x1000000];$/;"	v
s	liblua/lauxlib.c	/^  const char *s;$/;"	m	struct:LoadS	file:
sak	include/mifare.h	/^	byte_t sak;$/;"	m	struct:__anon61
sample_buf	client/data.c	/^uint8_t* sample_buf;$/;"	v
sample_config	include/usb_cmd.h	/^} sample_config;$/;"	t	typeref:struct:__anon65
samples	armsrc/iclass.c	/^	int     samples;$/;"	m	struct:__anon10	file:
samples	armsrc/iclass.c	/^    int     samples;$/;"	m	struct:__anon8	file:
samples	armsrc/iso14443a.h	/^	uint16_t samples;$/;"	m	struct:__anon17
save	liblua/llex.c	/^static void save (LexState *ls, int c) {$/;"	f	file:
saveFile	client/loclass/fileutils.c	/^int saveFile(const char *preferredName, const char *suffix, const void* data, size_t datalen)$/;"	f
saveTraceCard	client/mifarehost.c	/^int saveTraceCard(void) {$/;"	f
save_BIN	client/lualibs/html_dumplib.lua	/^local function save_BIN(data, filename)$/;"	f
save_HTML	client/lualibs/html_dumplib.lua	/^local function save_HTML(javascript, filename)$/;"	f
save_TEXT	client/lualibs/html_dumplib.lua	/^local function save_TEXT(data,filename)$/;"	f
save_and_next	liblua/llex.c	/^#define save_and_next(/;"	d	file:
savedpc	liblua/lstate.h	/^      const Instruction *savedpc;$/;"	m	struct:CallInfo::__anon79::__anon80
savestack	liblua/ldo.h	/^#define savestack(/;"	d
saw_deep_modulation	fpga/hi_iso14443a.v	/^reg [8:0] saw_deep_modulation;$/;"	r
sbox	armsrc/des.c	/^const uint8_t sbox[256]  = {$/;"	v
scanformat	liblua/lstrlib.c	/^static const char *scanformat (lua_State *L, const char *strfrmt, char *form) {$/;"	f	file:
script_cmds_file	client/proxmark3.c	/^	char *script_cmds_file;$/;"	m	struct:main_loop_arg	file:
search	tools/findbits.py	/^def search(target,data):$/;"	f
searcher_C	liblua/loadlib.c	/^static int searcher_C (lua_State *L) {$/;"	f	file:
searcher_Croot	liblua/loadlib.c	/^static int searcher_Croot (lua_State *L) {$/;"	f	file:
searcher_Lua	liblua/loadlib.c	/^static int searcher_Lua (lua_State *L) {$/;"	f	file:
searcher_preload	liblua/loadlib.c	/^static int searcher_preload (lua_State *L) {$/;"	f	file:
searchpath	liblua/loadlib.c	/^static const char *searchpath (lua_State *L, const char *name,$/;"	f	file:
searchupvalue	liblua/lparser.c	/^static int searchupvalue (FuncState *fs, TString *name) {$/;"	f	file:
searchvar	liblua/lparser.c	/^static int searchvar (FuncState *fs, TString *n) {$/;"	f	file:
sector	client/mifarehost.h	/^} sector;$/;"	t	typeref:struct:__anon50
sectors	armsrc/hitag2.c	/^	byte_t sectors[12][4];$/;"	m	struct:hitag2_tag	file:
seed	liblua/lstate.h	/^  unsigned int seed;  \/* randomized seed for hashes *\/$/;"	m	struct:global_State
segments	client/flash.h	/^	flash_seg_t *segments;$/;"	m	struct:__anon33
segments	client/hid-flasher/flash.h	/^	flash_seg_t *segments;$/;"	m	struct:__anon37
sel	fpga/util.v	/^    input [2:0] sel;$/;"	p
selftest	client/scripts/14araw.lua	/^function selftest()$/;"	f
semerror	liblua/lparser.c	/^static l_noret semerror (LexState *ls, const char *msg) {$/;"	f	file:
seminfo	liblua/llex.h	/^  SemInfo seminfo;$/;"	m	struct:Token
sendCmdGetResponseWithRetries	armsrc/iclass.c	/^size_t sendCmdGetResponseWithRetries(uint8_t* command, size_t cmdsize, uint8_t* resp, uint8_t expected_size, uint8_t retries)$/;"	f
sendRaw	client/scripts/14araw.lua	/^function sendRaw(rawdata, options)$/;"	f
sendToDevice	client/lualibs/hf_reader.lua	/^local function sendToDevice(command, ignoreresponse)$/;"	f
sendToDevice	client/lualibs/read14a.lua	/^local function sendToDevice(command, ignoreresponse)$/;"	f
sendbit	fpga/hi_iso14443a.v	/^reg sendbit;$/;"	r
separatetobefnz	liblua/lgc.c	/^static void separatetobefnz (lua_State *L, int all) {$/;"	f	file:
serial_number	client/hid-flasher/proxusb.h	/^  char serial_number[256];$/;"	m	struct:prox_unit
serial_port	client/uart.h	/^typedef void* serial_port;$/;"	t
serial_port_name	client/flasher.c	/^static char* serial_port_name;$/;"	v	file:
serial_port_parity	client/uart.h	/^} serial_port_parity;$/;"	t	typeref:enum:__anon54
serial_port_unix	client/uart.c	/^} serial_port_unix;$/;"	t	typeref:struct:__anon52	file:
serial_port_windows	client/uart.c	/^} serial_port_windows;$/;"	t	typeref:struct:__anon53	file:
set2	liblua/ltablib.c	/^static void set2 (lua_State *L, int i, int j) {$/;"	f	file:
setDemodBuf	client/cmddata.c	/^void setDemodBuf(uint8_t *buff, size_t size, size_t startIdx)$/;"	f
setGraphBuf	client/graph.c	/^void setGraphBuf(uint8_t *buff, size_t size)$/;"	f
setLuaPath	client/scripting.c	/^int setLuaPath( lua_State* L, const char* path )$/;"	f
setSamplingConfig	armsrc/lfsampling.c	/^void setSamplingConfig(sample_config *sc)$/;"	f
setUp	client/pm3_eml_mfd_test.py	/^    def setUp(self):$/;"	m	class:TestEmlMfd
setUp	tools/findbits_test.py	/^	def setUp(self):$/;"	m	class:TestFindBits
set_bin_library	client/pm3_binlib.c	/^int set_bin_library (lua_State *L) {$/;"	f
set_bit_library	client/pm3_bitlib.c	/^int set_bit_library (lua_State *L) {$/;"	f
set_env	liblua/loadlib.c	/^static void set_env (lua_State *L) {$/;"	f	file:
set_pm3_libraries	client/scripting.c	/^int set_pm3_libraries(lua_State *L)$/;"	f
set_tracing	armsrc/BigBuf.c	/^void set_tracing(bool enable) {$/;"	f
setarg	liblua/lopcodes.h	/^#define setarg(/;"	d
setarrayvector	liblua/ltable.c	/^static void setarrayvector (lua_State *L, Table *t, int size) {$/;"	f	file:
setbits	liblua/lgc.h	/^#define setbits(/;"	d
setboolfield	liblua/loslib.c	/^static void setboolfield (lua_State *L, const char *key, int value) {$/;"	f	file:
setbvalue	liblua/lobject.h	/^#define setbvalue(/;"	d
setclCvalue	liblua/lobject.h	/^#define setclCvalue(/;"	d
setclLvalue	liblua/lobject.h	/^#define setclLvalue(/;"	d
setdeadvalue	liblua/lobject.h	/^#define setdeadvalue(/;"	d
seterrorobj	liblua/ldo.c	/^static void seterrorobj (lua_State *L, int errcode, StkId oldtop) {$/;"	f	file:
setfield	liblua/loslib.c	/^static void setfield (lua_State *L, const char *key, int value) {$/;"	f	file:
setfvalue	liblua/lobject.h	/^#define setfvalue(/;"	d
setgcovalue	liblua/lobject.h	/^#define setgcovalue(/;"	d
sethvalue	liblua/lobject.h	/^#define sethvalue(/;"	d
sethvalue2s	liblua/lobject.h	/^#define sethvalue2s	/;"	d
setnilvalue	liblua/lobject.h	/^#define setnilvalue(/;"	d
setnodevector	liblua/ltable.c	/^static void setnodevector (lua_State *L, Table *t, int size) {$/;"	f	file:
setnvalue	liblua/lobject.h	/^#define setnvalue(/;"	d
setnvalue	liblua/lobject.h	/^#undef setnvalue$/;"	d
setobj	liblua/lobject.h	/^#define setobj(/;"	d
setobj	liblua/lobject.h	/^#undef setobj$/;"	d
setobj2n	liblua/lobject.h	/^#define setobj2n	/;"	d
setobj2s	liblua/lobject.h	/^#define setobj2s	/;"	d
setobj2t	liblua/lobject.h	/^#define setobj2t	/;"	d
setobjs2s	liblua/lobject.h	/^#define setobjs2s	/;"	d
setobjt2t	liblua/lobject.h	/^#define setobjt2t	/;"	d
setpath	liblua/loadlib.c	/^static void setpath (lua_State *L, const char *fieldname, const char *envname1,$/;"	f	file:
setpause	liblua/lgc.c	/^static void setpause (global_State *g, l_mem estimate) {$/;"	f	file:
setprogdir	liblua/loadlib.c	/^#define setprogdir(/;"	d	file:
setprogdir	liblua/loadlib.c	/^#undef setprogdir$/;"	d	file:
setprogdir	liblua/loadlib.c	/^static void setprogdir (lua_State *L) {$/;"	f	file:
setptvalue2s	liblua/lobject.h	/^#define setptvalue2s	/;"	d
setpvalue	liblua/lobject.h	/^#define setpvalue(/;"	d
setsvalue	liblua/lobject.h	/^#define setsvalue(/;"	d
setsvalue2n	liblua/lobject.h	/^#define setsvalue2n	/;"	d
setsvalue2s	liblua/lobject.h	/^#define setsvalue2s	/;"	d
settabsb	liblua/ldblib.c	/^static void settabsb (lua_State *L, const char *i, int v) {$/;"	f	file:
settabsi	liblua/ldblib.c	/^static void settabsi (lua_State *L, const char *i, int v) {$/;"	f	file:
settabss	liblua/ldblib.c	/^static void settabss (lua_State *L, const char *i, const char *v) {$/;"	f	file:
setthvalue	liblua/lobject.h	/^#define setthvalue(/;"	d
settt_	liblua/lobject.h	/^#define settt_(/;"	d
settt_	liblua/lobject.h	/^#undef settt_$/;"	d
setupIclassReader	armsrc/iclass.c	/^void setupIclassReader()$/;"	f
setup_timer	armsrc/legicrf.c	/^static void setup_timer(void)$/;"	f	file:
setuvalue	liblua/lobject.h	/^#define setuvalue(/;"	d
shallow_modulation	fpga/hi_read_tx.v	/^    input shallow_modulation;$/;"	p
shallow_modulation	fpga/testbed_hi_read_tx.v	/^	reg  shallow_modulation;$/;"	r
shiftReg	armsrc/iclass.c	/^    uint16_t    shiftReg;$/;"	m	struct:__anon10	file:
shiftReg	armsrc/iclass.c	/^    uint16_t    shiftReg;$/;"	m	struct:__anon8	file:
shiftReg	armsrc/iso14443.c	/^	uint16_t    shiftReg;$/;"	m	struct:__anon13	file:
shiftReg	armsrc/iso14443.c	/^	uint16_t    shiftReg;$/;"	m	struct:__anon15	file:
shiftReg	armsrc/iso14443a.h	/^	uint16_t shiftReg;$/;"	m	struct:__anon17
shiftReg	armsrc/iso14443a.h	/^	uint16_t shiftReg;$/;"	m	struct:__anon20
shift_reg	fpga/fpga_hf.v	/^reg [15:0] shift_reg;$/;"	r
shift_reg	fpga/fpga_lf.v	/^reg [15:0] shift_reg;$/;"	r
shiftkey	armsrc/des.c	/^void shiftkey(uint8_t *key){$/;"	f	file:
shiftkey_inv	armsrc/des.c	/^void shiftkey_inv(uint8_t *key){$/;"	f	file:
shiftkey_permtab	armsrc/des.c	/^const uint8_t shiftkey_permtab[] = {$/;"	v
shiftkeyinv_permtab	armsrc/des.c	/^const uint8_t shiftkeyinv_permtab[] = {$/;"	v
short_src	liblua/lua.h	/^  char short_src[LUA_IDSIZE]; \/* (S) *\/$/;"	m	struct:lua_Debug
show	client/scripts/ndef_dump.lua	/^local function show(data)$/;"	f
showHelp	client/loclass/main.c	/^int showHelp()$/;"	f
show_usage	client/eml2UPPER.sh	/^show_usage()$/;"	f
show_usage	client/eml2lower.sh	/^show_usage()$/;"	f
show_usage	client/gen_pm3mfsim_script.sh	/^show_usage()$/;"	f
showdata	client/scripts/14araw.lua	/^function showdata(usbpacket)$/;"	f
sig	fpga/tests/plot_edgedetect.py	/^sig = map(lambda x: ord(x), sig)$/;"	v
sig	fpga/tests/plot_edgedetect.py	/^sig = open(BASENAME + ".filtered").read()$/;"	v
signed	fpga/hi_iso14443a.v	/^reg signed [10:0] rx_mod_falling_edge_max;$/;"	r
signed	fpga/hi_iso14443a.v	/^reg signed [10:0] rx_mod_rising_edge_max;$/;"	r
signed	fpga/hi_iso14443a.v	/^wire signed [10:0] adc_d_filtered;$/;"	n
signed	fpga/hi_iso14443a.v	/^wire signed [10:0] adc_d_times_2 = {0, 0, adc_d, 0}; $/;"	n
signed	fpga/hi_iso14443a.v	/^wire signed [10:0] input_prev_1_times_1 = {0, 0, 0, input_prev_1};$/;"	n
signed	fpga/hi_iso14443a.v	/^wire signed [10:0] input_prev_3_times_1 = {0, 0, 0, input_prev_3};$/;"	n
signed	fpga/hi_iso14443a.v	/^wire signed [10:0] input_prev_4_times_2 = {0, 0, input_prev_4, 0};$/;"	n
signed	fpga/hi_iso14443a.v	/^wire signed [10:0] tmp_1, tmp_2;$/;"	n
signed	fpga/hi_read_rx_xcorr.v	/^reg signed [15:0] corr_i_accum;$/;"	r
signed	fpga/hi_read_rx_xcorr.v	/^reg signed [15:0] corr_q_accum;$/;"	r
signed	fpga/hi_read_rx_xcorr.v	/^reg signed [7:0] corr_i_out;$/;"	r
signed	fpga/hi_read_rx_xcorr.v	/^reg signed [7:0] corr_q_out;$/;"	r
simpleexp	liblua/lparser.c	/^static void simpleexp (LexState *ls, expdesc *v) {$/;"	f	file:
singlematch	liblua/lstrlib.c	/^static int singlematch (MatchState *ms, const char *s, const char *p,$/;"	f	file:
singlestep	liblua/lgc.c	/^static lu_mem singlestep (lua_State *L) {$/;"	f	file:
singlevar	liblua/lparser.c	/^static void singlevar (LexState *ls, expdesc *var) {$/;"	f	file:
singlevaraux	liblua/lparser.c	/^static int singlevaraux (FuncState *fs, TString *n, expdesc *var, int base) {$/;"	f	file:
size	liblua/lauxlib.c	/^  size_t size;$/;"	m	struct:LoadS	file:
size	liblua/lauxlib.h	/^  size_t size;  \/* buffer size *\/$/;"	m	struct:luaL_Buffer
size	liblua/lparser.h	/^    int size;$/;"	m	struct:Dyndata::__anon78
size	liblua/lparser.h	/^  int size;  \/* array size *\/$/;"	m	struct:Labellist
size	liblua/lstate.h	/^  int size;$/;"	m	struct:stringtable
sizeCclosure	liblua/lfunc.h	/^#define sizeCclosure(/;"	d
sizeLclosure	liblua/lfunc.h	/^#define sizeLclosure(/;"	d
sizearray	liblua/lobject.h	/^  int sizearray;  \/* size of `array' array *\/$/;"	m	struct:Table
sizecode	liblua/lobject.h	/^  int sizecode;$/;"	m	struct:Proto
sizek	liblua/lobject.h	/^  int sizek;  \/* size of `k' *\/$/;"	m	struct:Proto
sizelineinfo	liblua/lobject.h	/^  int sizelineinfo;$/;"	m	struct:Proto
sizelocvars	liblua/lobject.h	/^  int sizelocvars;$/;"	m	struct:Proto
sizenode	liblua/lobject.h	/^#define sizenode(/;"	d
sizep	liblua/lobject.h	/^  int sizep;  \/* size of `p' *\/$/;"	m	struct:Proto
sizestring	liblua/lstring.h	/^#define sizestring(/;"	d
sizeudata	liblua/lstring.h	/^#define sizeudata(/;"	d
sizeupvalues	liblua/lobject.h	/^  int sizeupvalues;  \/* size of 'upvalues' *\/$/;"	m	struct:Proto
sk	client/loclass/des.h	/^	uint32_t sk[32];            \/*!<  DES subkeys       *\/$/;"	m	struct:__anon43
sk	client/loclass/des.h	/^	uint32_t sk[96];            \/*!<  3DES subkeys      *\/$/;"	m	struct:__anon44
skipBOM	liblua/lauxlib.c	/^static int skipBOM (LoadF *lf) {$/;"	f	file:
skip_sep	liblua/llex.c	/^static int skip_sep (LexState *ls) {$/;"	f	file:
skipcomment	liblua/lauxlib.c	/^static int skipcomment (LoadF *lf, int *cp) {$/;"	f	file:
skipnoopstat	liblua/lparser.c	/^static void skipnoopstat (LexState *ls) {$/;"	f	file:
sleep	client/hid-flasher/sleep.h	/^#define sleep(/;"	d
sleep	client/sleep.h	/^# define sleep(/;"	d
slhead	client/mifarehost.c	/^			struct Crypto1State *slhead;$/;"	m	union:__anon47::__anon48	typeref:struct:__anon47::__anon48::Crypto1State	file:
sltail	client/mifarehost.c	/^			struct Crypto1State *sltail;$/;"	m	union:__anon47::__anon49	typeref:struct:__anon47::__anon49::Crypto1State	file:
sniffATQA	armsrc/mifaresniff.c	/^static uint8_t sniffATQA[2] = {0x00};$/;"	v	file:
sniffBuf	armsrc/mifaresniff.c	/^static uint8_t sniffBuf[16] = {0x00};$/;"	v	file:
sniffSAK	armsrc/mifaresniff.c	/^static uint8_t sniffSAK;$/;"	v	file:
sniffState	armsrc/mifaresniff.c	/^static int sniffState = SNF_INIT;$/;"	v	file:
sniffUID	armsrc/mifaresniff.c	/^static uint8_t sniffUID[8] = {0x00};$/;"	v	file:
sniffUIDType	armsrc/mifaresniff.c	/^static uint8_t sniffUIDType;$/;"	v	file:
snoop	fpga/hi_read_rx_xcorr.v	/^    input xcorr_is_848, snoop, xcorr_quarter_freq;$/;"	p
software_interrupt	bootrom/flash-reset.s	/^software_interrupt:$/;"	l
sort	liblua/ltablib.c	/^static int sort (lua_State *L) {$/;"	f	file:
sort_comp	liblua/ltablib.c	/^static int sort_comp (lua_State *L, int a, int b) {$/;"	f	file:
source	liblua/llex.h	/^  TString *source;  \/* current source name *\/$/;"	m	struct:LexState
source	liblua/lobject.h	/^  TString  *source;  \/* used for debug information *\/$/;"	m	struct:Proto
source	liblua/lua.h	/^  const char *source;	\/* (S) *\/$/;"	m	struct:lua_Debug
sp	client/flasher.c	/^static serial_port sp;$/;"	v	file:
sp	client/proxmark3.c	/^static serial_port sp;$/;"	v	file:
spck	fpga/fpga_hf.v	/^	input spck, output miso, input mosi, input ncs,$/;"	p
spck	fpga/fpga_lf.v	/^	input spck, output miso, input mosi, input ncs,$/;"	p
spck	fpga/testbed_fpga.v	/^    reg spck, mosi, ncs;$/;"	r
split	client/lualibs/getopt.lua	/^local function split(txt)$/;"	f
splitin6bitword_permtab	armsrc/des.c	/^const uint8_t splitin6bitword_permtab[] = {$/;"	v
splitin6bitwords	armsrc/des.c	/^uint64_t splitin6bitwords(uint64_t a){$/;"	f	file:
sprintUID	armsrc/iso15693.c	/^#define sprintUID(/;"	d	file:
sprintUID	client/cmdhf15.c	/^#define sprintUID(/;"	d	file:
sprint_bin	client/util.c	/^char * sprint_bin(const uint8_t * data, const size_t len) {$/;"	f
sprint_hex	client/util.c	/^char * sprint_hex(const uint8_t * data, const size_t len) {$/;"	f
sprintf	armsrc/printf.c	/^sprintf(char *dest, const char *fmt, ...)$/;"	f
src_end	liblua/lstrlib.c	/^  const char *src_end;  \/* end ('\\0') of source string *\/$/;"	m	struct:MatchState	file:
src_init	liblua/lstrlib.c	/^  const char *src_init;  \/* init of source string *\/$/;"	m	struct:MatchState	file:
ssize_t	armsrc/printf.c	/^typedef int ssize_t;$/;"	t	file:
ssp_clk	fpga/hi_iso14443a.v	/^    output ssp_frame, ssp_din, ssp_clk;$/;"	p
ssp_clk	fpga/hi_iso14443a.v	/^reg ssp_clk;$/;"	r
ssp_clk	fpga/hi_read_rx_xcorr.v	/^    output ssp_frame, ssp_din, ssp_clk;$/;"	p
ssp_clk	fpga/hi_read_rx_xcorr.v	/^reg ssp_clk;$/;"	r
ssp_clk	fpga/hi_read_tx.v	/^    output ssp_frame, ssp_din, ssp_clk;$/;"	p
ssp_clk	fpga/hi_simulate.v	/^    output ssp_frame, ssp_din, ssp_clk;$/;"	p
ssp_clk	fpga/hi_simulate.v	/^reg ssp_clk;$/;"	r
ssp_clk	fpga/lo_simulate.v	/^    output ssp_frame, ssp_din, ssp_clk;$/;"	p
ssp_clk	fpga/testbed_fpga.v	/^    wire ssp_frame, ssp_din, ssp_clk;$/;"	n
ssp_clk	fpga/testbed_hi_read_tx.v	/^	wire ssp_clk;$/;"	n
ssp_clk	fpga/testbed_hi_simulate.v	/^	wire ssp_clk;$/;"	n
ssp_clk	fpga/testbed_lo_read.v	/^	wire ssp_clk;$/;"	n
ssp_clk	fpga/testbed_lo_simulate.v	/^	wire ssp_clk;$/;"	n
ssp_clk_divider	fpga/hi_simulate.v	/^reg [10:0] ssp_clk_divider;$/;"	r
ssp_din	fpga/hi_iso14443a.v	/^    output ssp_frame, ssp_din, ssp_clk;$/;"	p
ssp_din	fpga/hi_read_rx_xcorr.v	/^    output ssp_frame, ssp_din, ssp_clk;$/;"	p
ssp_din	fpga/hi_read_tx.v	/^    output ssp_frame, ssp_din, ssp_clk;$/;"	p
ssp_din	fpga/hi_simulate.v	/^    output ssp_frame, ssp_din, ssp_clk;$/;"	p
ssp_din	fpga/hi_simulate.v	/^reg ssp_din;$/;"	r
ssp_din	fpga/lo_simulate.v	/^    output ssp_frame, ssp_din, ssp_clk;$/;"	p
ssp_din	fpga/testbed_fpga.v	/^    wire ssp_frame, ssp_din, ssp_clk;$/;"	n
ssp_din	fpga/testbed_hi_read_tx.v	/^	wire ssp_din;$/;"	n
ssp_din	fpga/testbed_hi_simulate.v	/^	wire ssp_din;$/;"	n
ssp_din	fpga/testbed_lo_read.v	/^	wire ssp_din;$/;"	n
ssp_din	fpga/testbed_lo_simulate.v	/^	wire ssp_din;$/;"	n
ssp_dout	fpga/hi_iso14443a.v	/^    input ssp_dout;$/;"	p
ssp_dout	fpga/hi_read_rx_xcorr.v	/^    input ssp_dout;$/;"	p
ssp_dout	fpga/hi_read_tx.v	/^    input ssp_dout;$/;"	p
ssp_dout	fpga/hi_simulate.v	/^    input ssp_dout;$/;"	p
ssp_dout	fpga/lo_simulate.v	/^    input ssp_dout;$/;"	p
ssp_dout	fpga/testbed_fpga.v	/^    reg ssp_dout;$/;"	r
ssp_dout	fpga/testbed_hi_read_tx.v	/^	reg  ssp_dout;$/;"	r
ssp_dout	fpga/testbed_hi_simulate.v	/^	reg  ssp_dout;$/;"	r
ssp_dout	fpga/testbed_lo_read.v	/^	reg ssp_dout;$/;"	r
ssp_dout	fpga/testbed_lo_simulate.v	/^	reg  ssp_dout;$/;"	r
ssp_frame	fpga/fpga_hf.v	/^	output ssp_frame, output ssp_din, input ssp_dout, output ssp_clk,$/;"	p
ssp_frame	fpga/fpga_lf.v	/^	output ssp_frame, output ssp_din, input ssp_dout, output ssp_clk,$/;"	p
ssp_frame	fpga/hi_iso14443a.v	/^    output ssp_frame, ssp_din, ssp_clk;$/;"	p
ssp_frame	fpga/hi_iso14443a.v	/^reg ssp_frame;$/;"	r
ssp_frame	fpga/hi_read_rx_xcorr.v	/^    output ssp_frame, ssp_din, ssp_clk;$/;"	p
ssp_frame	fpga/hi_read_rx_xcorr.v	/^reg ssp_frame;$/;"	r
ssp_frame	fpga/hi_read_tx.v	/^    output ssp_frame, ssp_din, ssp_clk;$/;"	p
ssp_frame	fpga/hi_simulate.v	/^    output ssp_frame, ssp_din, ssp_clk;$/;"	p
ssp_frame	fpga/hi_simulate.v	/^reg ssp_frame;$/;"	r
ssp_frame	fpga/lo_edge_detect.v	/^    output ssp_frame, input ssp_dout, output ssp_clk,$/;"	p
ssp_frame	fpga/lo_read.v	/^	output ssp_frame, output ssp_din, output ssp_clk,$/;"	p
ssp_frame	fpga/lo_simulate.v	/^    output ssp_frame, ssp_din, ssp_clk;$/;"	p
ssp_frame	fpga/testbed_fpga.v	/^    wire ssp_frame, ssp_din, ssp_clk;$/;"	n
ssp_frame	fpga/testbed_hi_read_tx.v	/^	wire ssp_frame;$/;"	n
ssp_frame	fpga/testbed_hi_simulate.v	/^	wire ssp_frame;$/;"	n
ssp_frame	fpga/testbed_lo_read.v	/^	wire ssp_frame;$/;"	n
ssp_frame	fpga/testbed_lo_simulate.v	/^	wire ssp_frame;$/;"	n
ssp_frame_counter	fpga/hi_iso14443a.v	/^reg [2:0] ssp_frame_counter;$/;"	r
ssp_frame_divider_from_arm	fpga/hi_simulate.v	/^reg [2:0] ssp_frame_divider_from_arm;$/;"	r
ssp_frame_divider_to_arm	fpga/hi_simulate.v	/^reg [2:0] ssp_frame_divider_to_arm;$/;"	r
stack	liblua/lstate.h	/^  StkId stack;  \/* stack base *\/$/;"	m	struct:lua_State
stack_init	liblua/lstate.c	/^static void stack_init (lua_State *L1, lua_State *L) {$/;"	f	file:
stack_last	liblua/lstate.h	/^  StkId stack_last;  \/* last free slot in the stack *\/$/;"	m	struct:lua_State
stackinuse	liblua/ldo.c	/^static int stackinuse (lua_State *L) {$/;"	f	file:
stacksize	liblua/lstate.h	/^  int stacksize;$/;"	m	struct:lua_State
start	client/flash.h	/^	uint32_t start;$/;"	m	struct:__anon32
start	client/hid-flasher/flash.h	/^	uint32_t start;$/;"	m	struct:__anon36
startMax	client/proxguiqt.cpp	/^int startMax;$/;"	v
startTime	armsrc/iso14443a.h	/^	uint32_t startTime, endTime;$/;"	m	struct:__anon17
startTime	armsrc/iso14443a.h	/^	uint32_t startTime, endTime;$/;"	m	struct:__anon20
start_addr	bootrom/bootrom.c	/^unsigned int start_addr, end_addr, bootrom_unlocked;$/;"	v
start_capture	liblua/lstrlib.c	/^static const char *start_capture (MatchState *ms, const char *s,$/;"	f	file:
startpc	liblua/lobject.h	/^  int startpc;  \/* first point where variable is active *\/$/;"	m	struct:LocVar
startvalue	client/loclass/elite_crack.c	/^static uint32_t startvalue = 0;$/;"	v	file:
state	armsrc/hitag2.c	/^	} state;$/;"	m	struct:hitag2_tag	typeref:enum:hitag2_tag::__anon7	file:
state	armsrc/iclass.c	/^    }       state;$/;"	m	struct:__anon10	typeref:enum:__anon10::__anon11	file:
state	armsrc/iclass.c	/^    }       state;$/;"	m	struct:__anon8	typeref:enum:__anon8::__anon9	file:
state	armsrc/iso14443.c	/^	}       state;$/;"	m	struct:__anon13	typeref:enum:__anon13::__anon14	file:
state	armsrc/iso14443.c	/^	}       state;$/;"	m	struct:__anon15	typeref:enum:__anon15::__anon16	file:
state	armsrc/iso14443a.h	/^		} state;$/;"	m	struct:__anon20	typeref:enum:__anon20::__anon21
state	armsrc/iso14443a.h	/^	} state;$/;"	m	struct:__anon17	typeref:enum:__anon17::__anon18
state	fpga/min_max_tracker.v	/^	reg [1:0] state = 0;$/;"	r
state	include/crc.h	/^	uint32_t state;$/;"	m	struct:crc
statement	liblua/lparser.c	/^static void statement (LexState *ls) {$/;"	f	file:
states	fpga/tests/plot_edgedetect.py	/^states = map(lambda x: ord(x) * 10 + 65, states)$/;"	v
states	fpga/tests/plot_edgedetect.py	/^states = open(BASENAME + ".state").read()$/;"	v
staticMetaObject	client/proxguiqt.moc.cpp	/^const QMetaObject ProxGuiQT::staticMetaObject = {$/;"	m	class:ProxGuiQT	file:
staticMetaObject	client/proxguiqt.moc.cpp	/^const QMetaObject ProxWidget::staticMetaObject = {$/;"	m	class:ProxWidget	file:
staticMetaObjectExtraData	client/proxguiqt.moc.cpp	/^const QMetaObjectExtraData ProxGuiQT::staticMetaObjectExtraData = {$/;"	m	class:ProxGuiQT	file:
staticMetaObjectExtraData	client/proxguiqt.moc.cpp	/^const QMetaObjectExtraData ProxWidget::staticMetaObjectExtraData = {$/;"	m	class:ProxWidget	file:
statlist	liblua/lparser.c	/^static void statlist (LexState *ls) {$/;"	f	file:
status	liblua/ldo.c	/^  volatile int status;  \/* error code *\/$/;"	m	struct:lua_longjmp	file:
status	liblua/ldump.c	/^ int status;$/;"	m	struct:__anon66	file:
status	liblua/lstate.h	/^      lu_byte status;$/;"	m	struct:CallInfo::__anon79::__anon81
status	liblua/lstate.h	/^  lu_byte status;$/;"	m	struct:lua_State
storeCommand	client/cmdmain.c	/^void storeCommand(UsbCommand *command)$/;"	f
strDescriptor	common/usb_cdc.c	/^const char strDescriptor[] = {$/;"	v
str_byte	liblua/lstrlib.c	/^static int str_byte (lua_State *L) {$/;"	f	file:
str_char	liblua/lstrlib.c	/^static int str_char (lua_State *L) {$/;"	f	file:
str_checkname	liblua/lparser.c	/^static TString *str_checkname (LexState *ls) {$/;"	f	file:
str_dump	liblua/lstrlib.c	/^static int str_dump (lua_State *L) {$/;"	f	file:
str_ends_with	client/cmdscript.c	/^int str_ends_with(const char * str, const char * suffix) {$/;"	f
str_find	liblua/lstrlib.c	/^static int str_find (lua_State *L) {$/;"	f	file:
str_find_aux	liblua/lstrlib.c	/^static int str_find_aux (lua_State *L, int find) {$/;"	f	file:
str_format	liblua/lstrlib.c	/^static int str_format (lua_State *L) {$/;"	f	file:
str_gsub	liblua/lstrlib.c	/^static int str_gsub (lua_State *L) {$/;"	f	file:
str_len	liblua/lstrlib.c	/^static int str_len (lua_State *L) {$/;"	f	file:
str_lower	liblua/lstrlib.c	/^static int str_lower (lua_State *L) {$/;"	f	file:
str_match	liblua/lstrlib.c	/^static int str_match (lua_State *L) {$/;"	f	file:
str_rep	liblua/lstrlib.c	/^static int str_rep (lua_State *L) {$/;"	f	file:
str_reverse	liblua/lstrlib.c	/^static int str_reverse (lua_State *L) {$/;"	f	file:
str_sub	liblua/lstrlib.c	/^static int str_sub (lua_State *L) {$/;"	f	file:
str_upper	liblua/lstrlib.c	/^static int str_upper (lua_State *L) {$/;"	f	file:
strcat	armsrc/string.c	/^char* strcat(char *dest, const char *src)$/;"	f
stringreverse	tools/findbits.py	/^def stringreverse(data):$/;"	f
stringtable	liblua/lstate.h	/^typedef struct stringtable {$/;"	s
stringtable	liblua/lstate.h	/^} stringtable;$/;"	t	typeref:struct:stringtable
strip	liblua/ldump.c	/^ int strip;$/;"	m	struct:__anon66	file:
stripping	liblua/luac.c	/^static int stripping=0;			\/* strip debug information? *\/$/;"	v	file:
strlen	armsrc/string.c	/^int strlen(const char *str)$/;"	f
strlib	liblua/lstrlib.c	/^static const luaL_Reg strlib[] = {$/;"	v	file:
strncat	armsrc/string.c	/^char* strncat(char *dest, const char *src, unsigned int n)$/;"	f
strreverse	armsrc/string.c	/^void strreverse(char s[])$/;"	f
strt	liblua/lstate.h	/^  stringtable strt;  \/* hash table for strings *\/$/;"	m	struct:global_State
sub	armsrc/iclass.c	/^	}		sub;$/;"	m	struct:__anon10	typeref:enum:__anon10::__anon12	file:
sub_carrier	fpga/hi_iso14443a.v	/^wire sub_carrier;$/;"	n
sub_carrier_cnt	fpga/hi_iso14443a.v	/^reg [3:0] sub_carrier_cnt;$/;"	r
subexpr	liblua/lparser.c	/^static BinOpr subexpr (LexState *ls, expdesc *v, int limit) {$/;"	f	file:
substitute	armsrc/des.c	/^uint8_t substitute(uint8_t a, uint8_t * sbp){$/;"	f	file:
suc	client/loclass/cipher.c	/^State suc(uint8_t* k,State s, BitstreamIn *bitstream)$/;"	f
successor	client/loclass/cipher.c	/^State successor(uint8_t* k, State s, bool y)$/;"	f
suffixedexp	liblua/lparser.c	/^static void suffixedexp (LexState *ls, expdesc *v) {$/;"	f	file:
sumI	armsrc/iso14443.c	/^	int     sumI;$/;"	m	struct:__anon15	file:
sumQ	armsrc/iso14443.c	/^	int     sumQ;$/;"	m	struct:__anon15	file:
svalue	liblua/lobject.h	/^#define svalue(/;"	d
swap	client/loclass/elite_crack.c	/^uint8_t swap(uint8_t val)$/;"	f
swapZvalues	client/loclass/ikeys.c	/^uint64_t swapZvalues(uint64_t c)$/;"	f
swapper	armsrc/iclass.c	/^    int     swapper;$/;"	m	struct:__anon8	file:
sweepfin	liblua/lstate.h	/^  GCObject **sweepfin;  \/* current position of sweep in list 'finobj' *\/$/;"	m	struct:global_State
sweepgc	liblua/lstate.h	/^  GCObject **sweepgc;  \/* current position of sweep in list 'allgc' *\/$/;"	m	struct:global_State
sweeplist	liblua/lgc.c	/^static GCObject **sweeplist (lua_State *L, GCObject **p, lu_mem count) {$/;"	f	file:
sweepphases	liblua/lgc.c	/^#define sweepphases /;"	d	file:
sweepstrgc	liblua/lstate.h	/^  int sweepstrgc;  \/* position of sweep in `strt' *\/$/;"	m	struct:global_State
sweepthread	liblua/lgc.c	/^static void sweepthread (lua_State *L, lua_State *L1) {$/;"	f	file:
sweeptolive	liblua/lgc.c	/^static GCObject **sweeptolive (lua_State *L, GCObject **p, int *n) {$/;"	f	file:
sweepwholelist	liblua/lgc.c	/^#define sweepwholelist(/;"	d	file:
switch_off_tag_rwd	armsrc/legicrf.c	/^static void switch_off_tag_rwd(void)$/;"	f	file:
syncBit	armsrc/iclass.c	/^	int     syncBit;$/;"	m	struct:__anon10	file:
syncBit	armsrc/iclass.c	/^    int     syncBit;$/;"	m	struct:__anon8	file:
syncBit	armsrc/iso14443a.h	/^	uint16_t syncBit;$/;"	m	struct:__anon17
syncBit	armsrc/iso14443a.h	/^	uint16_t syncBit;$/;"	m	struct:__anon20
sys	client/pm3_eml2mfd.py	/^import sys$/;"	i
sys	client/pm3_mfd2eml.py	/^import sys$/;"	i
sys	fpga/tests/plot_edgedetect.py	/^import sys$/;"	i
sys	tools/findbits.py	/^import sys$/;"	i
sys	tools/findbits_test.py	/^import unittest, sys, findbits$/;"	i
sys	tools/xorcheck.py	/^import sys$/;"	i
syslib	liblua/loslib.c	/^static const luaL_Reg syslib[] = {$/;"	v	file:
t	client/loclass/cipher.c	/^	uint16_t t;$/;"	m	struct:__anon40	file:
t	liblua/llex.h	/^  Token t;  \/* current token *\/$/;"	m	struct:LexState
t	liblua/lparser.c	/^  expdesc *t;  \/* table descriptor *\/$/;"	m	struct:ConsControl	file:
t	liblua/lparser.h	/^      lu_byte t;  \/* table (register or upvalue) *\/$/;"	m	struct:expdesc::__anon76::__anon77
t	liblua/lparser.h	/^  int t;  \/* patch list of `exit when true' *\/$/;"	m	struct:expdesc
tDemod	armsrc/iso14443a.h	/^} tDemod;$/;"	t	typeref:struct:__anon17
tUart	armsrc/iso14443a.h	/^} tUart;$/;"	t	typeref:struct:__anon20
t_key	client/loclass/ikeys.c	/^	uint8_t t_key[8];$/;"	m	struct:__anon46	file:
tab_funcs	liblua/ltablib.c	/^static const luaL_Reg tab_funcs[] = {$/;"	v	file:
tag	armsrc/emvdataels.c	/^uint8_t tag[2];$/;"	m	struct:__anon4	file:
tag	armsrc/emvdataels.h	/^    uint8_t tag[2];$/;"	m	struct:__anon5
tag	armsrc/hitag2.c	/^static struct hitag2_tag tag = {$/;"	v	typeref:struct:hitag2_tag	file:
tag	armsrc/tlv.h	/^    uint8_t tag[TAG_LENGTH];$/;"	m	struct:__anon25
tag2tt	liblua/lobject.h	/^#define tag2tt(/;"	d
tag_4F	armsrc/emvcard.h	/^    uint8_t tag_4F[16]; \/\/Application Identifier (AID) $/;"	m	struct:__anon2
tag_4F_len	armsrc/emvcard.h	/^    uint8_t tag_4F_len; \/\/length of AID $/;"	m	struct:__anon2
tag_50	armsrc/emvcard.h	/^    uint8_t tag_50[16]; \/\/Application Label$/;"	m	struct:__anon2
tag_50_len	armsrc/emvcard.h	/^    uint8_t tag_50_len; \/\/length of application label $/;"	m	struct:__anon2
tag_56	armsrc/emvcard.h	/^    uint8_t tag_56[76]; \/\/Track 1 Data$/;"	m	struct:__anon2
tag_56_len	armsrc/emvcard.h	/^    uint8_t tag_56_len; \/\/track1 length $/;"	m	struct:__anon2
tag_57	armsrc/emvcard.h	/^    uint8_t tag_57[19]; \/\/Track 2 Equivalent Data$/;"	m	struct:__anon2
tag_57_len	armsrc/emvcard.h	/^    uint8_t tag_57_len; \/\/track2 equiv len $/;"	m	struct:__anon2
tag_5A	armsrc/emvcard.h	/^    uint8_t tag_5A[10]; \/\/Application Primary Account Number (PAN)$/;"	m	struct:__anon2
tag_5A_len	armsrc/emvcard.h	/^    uint8_t tag_5A_len; \/\/PAN length $/;"	m	struct:__anon2
tag_5F20	armsrc/emvcard.h	/^    uint8_t tag_5F20[26]; \/\/Cardholder Name$/;"	m	struct:__anon2
tag_5F20_len	armsrc/emvcard.h	/^    uint8_t tag_5F20_len; $/;"	m	struct:__anon2
tag_5F24	armsrc/emvcard.h	/^    uint8_t tag_5F24[3]; \/\/Application Expiry Date $/;"	m	struct:__anon2
tag_5F25	armsrc/emvcard.h	/^    uint8_t tag_5F25[3]; \/\/Application Effective Date YYMMDD$/;"	m	struct:__anon2
tag_5F28	armsrc/emvcard.h	/^    uint8_t tag_5F28[2]; \/\/Issuer Country Code  $/;"	m	struct:__anon2
tag_5F2A	armsrc/emvcard.h	/^    uint8_t tag_5F2A[2]; \/\/Transaction Currency Code$/;"	m	struct:__anon2
tag_5F2D	armsrc/emvcard.h	/^    uint8_t tag_5F2D[8]; \/\/Language Preference$/;"	m	struct:__anon2
tag_5F2D_len	armsrc/emvcard.h	/^    uint8_t tag_5F2D_len; $/;"	m	struct:__anon2
tag_5F30	armsrc/emvcard.h	/^    uint8_t tag_5F30[2]; \/\/Service Code$/;"	m	struct:__anon2
tag_5F34	armsrc/emvcard.h	/^    uint8_t tag_5F34[1]; \/\/Application Primary Account Number (PAN) Sequence Number$/;"	m	struct:__anon2
tag_5F36	armsrc/emvcard.h	/^    uint8_t tag_5F36[2]; \/\/ATC$/;"	m	struct:__anon2
tag_5F50	armsrc/emvcard.h	/^    uint8_t tag_5F50[255]; \/\/Issuer URL $/;"	m	struct:__anon2
tag_5F50_len	armsrc/emvcard.h	/^    uint8_t tag_5F50_len; $/;"	m	struct:__anon2
tag_5F54	armsrc/emvcard.h	/^    uint8_t tag_5F54[11]; \/\/Bank Identifier Code (BIC) $/;"	m	struct:__anon2
tag_5F54_len	armsrc/emvcard.h	/^    uint8_t tag_5F54_len; $/;"	m	struct:__anon2
tag_61	armsrc/emvcard.h	/^    uint8_t tag_61[255]; \/\/Application template$/;"	m	struct:__anon2
tag_61_len	armsrc/emvcard.h	/^    uint8_t tag_61_len; $/;"	m	struct:__anon2
tag_6F	armsrc/emvcard.h	/^    uint8_t tag_6F[255]; \/\/6F template$/;"	m	struct:__anon2
tag_6F_len	armsrc/emvcard.h	/^    uint8_t tag_6F_len; $/;"	m	struct:__anon2
tag_70	armsrc/emvcard.h	/^    uint8_t tag_70[255]; \/\/70 template$/;"	m	struct:__anon2
tag_70_len	armsrc/emvcard.h	/^    uint8_t tag_70_len; $/;"	m	struct:__anon2
tag_77	armsrc/emvcard.h	/^    uint8_t tag_77[255]; \/\/77 template$/;"	m	struct:__anon2
tag_77_len	armsrc/emvcard.h	/^    uint8_t tag_77_len; $/;"	m	struct:__anon2
tag_80	armsrc/emvcard.h	/^    uint8_t tag_80[255]; \/\/80 template $/;"	m	struct:__anon2
tag_80_len	armsrc/emvcard.h	/^    uint8_t tag_80_len; $/;"	m	struct:__anon2
tag_82	armsrc/emvcard.h	/^    uint8_t tag_82[2]; \/\/Application Interchange Profile AIP$/;"	m	struct:__anon2
tag_84	armsrc/emvcard.h	/^    uint8_t tag_84[16]; \/\/DF Name$/;"	m	struct:__anon2
tag_84_len	armsrc/emvcard.h	/^    uint8_t tag_84_len; $/;"	m	struct:__anon2
tag_86	armsrc/emvcard.h	/^    uint8_t tag_86[261]; \/\/Issuer Script Command$/;"	m	struct:__anon2
tag_86_len	armsrc/emvcard.h	/^    uint8_t tag_86_len; $/;"	m	struct:__anon2
tag_87	armsrc/emvcard.h	/^    uint8_t tag_87[1]; \/\/Application Priority Indicator$/;"	m	struct:__anon2
tag_88	armsrc/emvcard.h	/^    uint8_t tag_88[1]; \/\/Short File Identifier$/;"	m	struct:__anon2
tag_8A	armsrc/emvcard.h	/^    uint8_t tag_8A[2]; \/\/Authorisation Response Code$/;"	m	struct:__anon2
tag_8C	armsrc/emvcard.h	/^    uint8_t tag_8C[252]; \/\/CDOL1$/;"	m	struct:__anon2
tag_8C_len	armsrc/emvcard.h	/^    uint8_t tag_8C_len; $/;"	m	struct:__anon2
tag_8D	armsrc/emvcard.h	/^    uint8_t tag_8D[252]; \/\/CDOL2$/;"	m	struct:__anon2
tag_8D_len	armsrc/emvcard.h	/^    uint8_t tag_8D_len; $/;"	m	struct:__anon2
tag_8E	armsrc/emvcard.h	/^    uint8_t tag_8E[252]; \/\/Cardholder Verification Method (CVM) List$/;"	m	struct:__anon2
tag_8E_len	armsrc/emvcard.h	/^    uint8_t tag_8E_len; $/;"	m	struct:__anon2
tag_8F	armsrc/emvcard.h	/^    uint8_t tag_8F[1];  \/\/Certification Authority Public Key Index$/;"	m	struct:__anon2
tag_90	armsrc/emvcard.h	/^    uint8_t tag_90[255]; \/\/ssuer Public Key Certificate$/;"	m	struct:__anon2
tag_90_len	armsrc/emvcard.h	/^    uint8_t tag_90_len; $/;"	m	struct:__anon2
tag_91	armsrc/emvcard.h	/^    uint8_t tag_91[16]; $/;"	m	struct:__anon2
tag_91_len	armsrc/emvcard.h	/^    uint8_t tag_91_len; \/\/Issuer Authentication Data $/;"	m	struct:__anon2
tag_92	armsrc/emvcard.h	/^    uint8_t tag_92[255]; \/\/Issuer Public Key Remainder$/;"	m	struct:__anon2
tag_92_len	armsrc/emvcard.h	/^    uint8_t tag_92_len; $/;"	m	struct:__anon2
tag_93	armsrc/emvcard.h	/^    uint8_t tag_93[255]; \/\/Signed Static Application Data$/;"	m	struct:__anon2
tag_93_len	armsrc/emvcard.h	/^    uint8_t tag_93_len; $/;"	m	struct:__anon2
tag_94	armsrc/emvcard.h	/^    uint8_t tag_94[252]; \/\/Application File Locator AFL$/;"	m	struct:__anon2
tag_94_len	armsrc/emvcard.h	/^    uint8_t tag_94_len; $/;"	m	struct:__anon2
tag_95	armsrc/emvcard.h	/^    uint8_t tag_95[5]; \/\/Terminal Verification Results$/;"	m	struct:__anon2
tag_97	armsrc/emvcard.h	/^    uint8_t tag_97[252]; \/\/Transaction Certificate Data Object List (TDOL)$/;"	m	struct:__anon2
tag_97_len	armsrc/emvcard.h	/^    uint8_t tag_97_len; $/;"	m	struct:__anon2
tag_98	armsrc/emvcard.h	/^    uint8_t tag_98[20]; \/\/Transaction Certificate (TC) Hash Value $/;"	m	struct:__anon2
tag_99	armsrc/emvcard.h	/^    uint8_t tag_99[20]; \/\/Transaction Personal Identification Number (PIN) Data $/;"	m	struct:__anon2
tag_99_len	armsrc/emvcard.h	/^    uint8_t tag_99_len; $/;"	m	struct:__anon2
tag_9A	armsrc/emvcard.h	/^    uint8_t tag_9A[3]; \/\/Transaction Date $/;"	m	struct:__anon2
tag_9B	armsrc/emvcard.h	/^    uint8_t tag_9B[2]; \/\/Transaction Status Information $/;"	m	struct:__anon2
tag_9C	armsrc/emvcard.h	/^    uint8_t tag_9C[1]; \/\/Transaction Type$/;"	m	struct:__anon2
tag_9D	armsrc/emvcard.h	/^    uint8_t tag_9D[16]; \/\/Directory Definition File$/;"	m	struct:__anon2
tag_9D_len	armsrc/emvcard.h	/^    uint8_t tag_9D_len;$/;"	m	struct:__anon2
tag_9F01	armsrc/emvcard.h	/^    uint8_t tag_9F01[6]; \/\/Acquirer Identifier $/;"	m	struct:__anon2
tag_9F02	armsrc/emvcard.h	/^    uint8_t tag_9F02[6]; \/\/ Amount, Authorised (Numeric)$/;"	m	struct:__anon2
tag_9F03	armsrc/emvcard.h	/^    uint8_t tag_9F03[6]; \/\/Amount, Other (Numeric) $/;"	m	struct:__anon2
tag_9F04	armsrc/emvcard.h	/^    uint8_t tag_9F04[4]; \/\/Amount, Other (Binary)$/;"	m	struct:__anon2
tag_9F05	armsrc/emvcard.h	/^    uint8_t tag_9F05[32]; \/\/Application Discretionary Data $/;"	m	struct:__anon2
tag_9F05_len	armsrc/emvcard.h	/^    uint8_t tag_9F05_len; $/;"	m	struct:__anon2
tag_9F06	armsrc/emvcard.h	/^    uint8_t tag_9F06[16]; \/\/AID terminal $/;"	m	struct:__anon2
tag_9F06_len	armsrc/emvcard.h	/^    uint8_t tag_9F06_len; $/;"	m	struct:__anon2
tag_9F07	armsrc/emvcard.h	/^    uint8_t tag_9F07[2]; \/\/Application Usage Control  $/;"	m	struct:__anon2
tag_9F08	armsrc/emvcard.h	/^    uint8_t tag_9F08[2]; \/\/Application Version Number $/;"	m	struct:__anon2
tag_9F09	armsrc/emvcard.h	/^    uint8_t tag_9F09[2]; \/\/Application Version Number$/;"	m	struct:__anon2
tag_9F0B	armsrc/emvcard.h	/^    uint8_t tag_9F0B[45]; \/\/Cardholder Name Extended$/;"	m	struct:__anon2
tag_9F0B_len	armsrc/emvcard.h	/^    uint8_t tag_9F0B_len; $/;"	m	struct:__anon2
tag_9F0D	armsrc/emvcard.h	/^    uint8_t tag_9F0D[5]; \/\/Issuer Action Code - Default $/;"	m	struct:__anon2
tag_9F0E	armsrc/emvcard.h	/^    uint8_t tag_9F0E[5]; \/\/Issuer Action Code - Denial $/;"	m	struct:__anon2
tag_9F0F	armsrc/emvcard.h	/^    uint8_t tag_9F0F[5]; \/\/Issuer Action Code - Online $/;"	m	struct:__anon2
tag_9F10	armsrc/emvcard.h	/^    uint8_t tag_9F10[32]; $/;"	m	struct:__anon2
tag_9F10_len	armsrc/emvcard.h	/^    uint8_t tag_9F10_len; \/\/Issuer Application Data$/;"	m	struct:__anon2
tag_9F11	armsrc/emvcard.h	/^    uint8_t tag_9F11[1]; \/\/Issuer Code Table Index$/;"	m	struct:__anon2
tag_9F12	armsrc/emvcard.h	/^    uint8_t tag_9F12[255]; \/\/Application Preferred Name $/;"	m	struct:__anon2
tag_9F12_len	armsrc/emvcard.h	/^    uint8_t tag_9F12_len; $/;"	m	struct:__anon2
tag_9F13	armsrc/emvcard.h	/^    uint8_t tag_9F13[2]; \/\/Last Online Application Transaction Counter (ATC) Registerjk $/;"	m	struct:__anon2
tag_9F14	armsrc/emvcard.h	/^    uint8_t tag_9F14[1]; \/\/Lower Consecutive Offline Limit$/;"	m	struct:__anon2
tag_9F15	armsrc/emvcard.h	/^    uint8_t tag_9F15[2]; \/\/Merchant Category Code $/;"	m	struct:__anon2
tag_9F16	armsrc/emvcard.h	/^    uint8_t tag_9F16[15]; \/\/Merchant Identifier$/;"	m	struct:__anon2
tag_9F17	armsrc/emvcard.h	/^    uint8_t tag_9F17[1]; \/\/Personal Identification Number (PIN) Try Counter$/;"	m	struct:__anon2
tag_9F18	armsrc/emvcard.h	/^    uint8_t tag_9F18[4]; \/\/Issuer Script Identifier$/;"	m	struct:__anon2
tag_9F1A	armsrc/emvcard.h	/^    uint8_t tag_9F1A[2]; \/\/Terminal Country Code$/;"	m	struct:__anon2
tag_9F1B	armsrc/emvcard.h	/^    uint8_t tag_9F1B[4]; \/\/Terminal Floor Limit$/;"	m	struct:__anon2
tag_9F1C	armsrc/emvcard.h	/^    uint8_t tag_9F1C[8]; \/\/Terminal Identification$/;"	m	struct:__anon2
tag_9F1D	armsrc/emvcard.h	/^    uint8_t tag_9F1D[8]; \/\/Terminal Risk Management Data $/;"	m	struct:__anon2
tag_9F1D_len	armsrc/emvcard.h	/^    uint8_t tag_9F1D_len; $/;"	m	struct:__anon2
tag_9F1E	armsrc/emvcard.h	/^    uint8_t tag_9F1E[8]; \/\/Interface Device (IFD) Serial Number $/;"	m	struct:__anon2
tag_9F1F	armsrc/emvcard.h	/^    uint8_t tag_9F1F[255]; \/\/Track 1 Discretionary Data $/;"	m	struct:__anon2
tag_9F1F_len	armsrc/emvcard.h	/^    uint8_t tag_9F1F_len;$/;"	m	struct:__anon2
tag_9F20	armsrc/emvcard.h	/^    uint8_t tag_9F20[255]; \/\/Track 2 DD $/;"	m	struct:__anon2
tag_9F20_len	armsrc/emvcard.h	/^    uint8_t tag_9F20_len;$/;"	m	struct:__anon2
tag_9F21	armsrc/emvcard.h	/^    uint8_t tag_9F21[3]; \/\/Transaction Time$/;"	m	struct:__anon2
tag_9F22	armsrc/emvcard.h	/^    uint8_t tag_9F22[1]; \/\/Certification Authority Public Key Index$/;"	m	struct:__anon2
tag_9F23	armsrc/emvcard.h	/^    uint8_t tag_9F23[1]; \/\/Upper Consecutive Offline Limit$/;"	m	struct:__anon2
tag_9F26	armsrc/emvcard.h	/^    uint8_t tag_9F26[8]; \/\/Application Cryptogram$/;"	m	struct:__anon2
tag_9F27	armsrc/emvcard.h	/^    uint8_t tag_9F27[1]; \/\/Cryptogram Information Data$/;"	m	struct:__anon2
tag_9F2D	armsrc/emvcard.h	/^    uint8_t tag_9F2D[255]; \/\/Integrated Circuit Card (ICC) PIN Encipherment Public Key Certificate$/;"	m	struct:__anon2
tag_9F2D_len	armsrc/emvcard.h	/^    uint8_t tag_9F2D_len; $/;"	m	struct:__anon2
tag_9F2E	armsrc/emvcard.h	/^    uint8_t tag_9F2E[3]; \/\/Integrated Circuit Card (ICC) PIN Encipherment Public Key Exponent$/;"	m	struct:__anon2
tag_9F2F	armsrc/emvcard.h	/^    uint8_t tag_9F2F[255]; \/\/Integrated Circuit Card (ICC) PIN Encipherment Public Key Remainder $/;"	m	struct:__anon2
tag_9F2F_len	armsrc/emvcard.h	/^    uint8_t tag_9F2F_len; $/;"	m	struct:__anon2
tag_9F32	armsrc/emvcard.h	/^    uint8_t tag_9F32[3]; \/\/Issuer Public Key Exponent$/;"	m	struct:__anon2
tag_9F32_len	armsrc/emvcard.h	/^    uint8_t tag_9F32_len; $/;"	m	struct:__anon2
tag_9F33	armsrc/emvcard.h	/^    uint8_t tag_9F33[3]; \/\/Terminal Capabilities$/;"	m	struct:__anon2
tag_9F34	armsrc/emvcard.h	/^    uint8_t tag_9F34[3]; \/\/Cardholder Verification Method (CVM) Results $/;"	m	struct:__anon2
tag_9F35	armsrc/emvcard.h	/^    uint8_t tag_9F35[1]; \/\/Terminal Type$/;"	m	struct:__anon2
tag_9F36	armsrc/emvcard.h	/^    uint8_t tag_9F36[2]; \/\/Application Transaction Counter (ATC)$/;"	m	struct:__anon2
tag_9F37	armsrc/emvcard.h	/^    uint8_t tag_9F37[4]; \/\/Unpredictable Number$/;"	m	struct:__anon2
tag_9F38	armsrc/emvcard.h	/^    uint8_t tag_9F38[255]; \/\/PDOL $/;"	m	struct:__anon2
tag_9F38_len	armsrc/emvcard.h	/^    uint8_t tag_9F38_len; $/;"	m	struct:__anon2
tag_9F39	armsrc/emvcard.h	/^    uint8_t tag_9F39[1]; \/\/Point-of-Service (POS) Entry Mode$/;"	m	struct:__anon2
tag_9F40	armsrc/emvcard.h	/^    uint8_t tag_9F40[5]; \/\/Additional Terminal Capabilities$/;"	m	struct:__anon2
tag_9F41	armsrc/emvcard.h	/^    uint8_t tag_9F41[4]; \/\/Transaction Sequence Counter$/;"	m	struct:__anon2
tag_9F42	armsrc/emvcard.h	/^    uint8_t tag_9F42[2]; \/\/Application Currency Code$/;"	m	struct:__anon2
tag_9F43	armsrc/emvcard.h	/^    uint8_t tag_9F43[4]; \/\/Application Reference Currency Exponent$/;"	m	struct:__anon2
tag_9F44	armsrc/emvcard.h	/^    uint8_t tag_9F44[1]; \/\/Application Currency Exponent$/;"	m	struct:__anon2
tag_9F45	armsrc/emvcard.h	/^    uint8_t tag_9F45[2]; \/\/Data Authentication Code$/;"	m	struct:__anon2
tag_9F46	armsrc/emvcard.h	/^    uint8_t tag_9F46[255]; \/\/ICC Public Key Certificate$/;"	m	struct:__anon2
tag_9F46_len	armsrc/emvcard.h	/^    uint8_t tag_9F46_len; $/;"	m	struct:__anon2
tag_9F47	armsrc/emvcard.h	/^    uint8_t tag_9F47[3]; \/\/ICC Public Key Exponent$/;"	m	struct:__anon2
tag_9F47_len	armsrc/emvcard.h	/^    uint8_t tag_9F47_len; $/;"	m	struct:__anon2
tag_9F48	armsrc/emvcard.h	/^    uint8_t tag_9F48[255]; \/\/ICC Public Key Remainder$/;"	m	struct:__anon2
tag_9F48_len	armsrc/emvcard.h	/^    uint8_t tag_9F48_len; $/;"	m	struct:__anon2
tag_9F49	armsrc/emvcard.h	/^    uint8_t tag_9F49[252]; $/;"	m	struct:__anon2
tag_9F49_len	armsrc/emvcard.h	/^    uint8_t tag_9F49_len; $/;"	m	struct:__anon2
tag_9F4A	armsrc/emvcard.h	/^    uint8_t tag_9F4A[1]; \/\/SDA Tag list$/;"	m	struct:__anon2
tag_9F4B	armsrc/emvcard.h	/^    uint8_t tag_9F4B[255]; \/\/Signed Dynamic Application Data $/;"	m	struct:__anon2
tag_9F4B_len	armsrc/emvcard.h	/^    uint8_t tag_9F4B_len; $/;"	m	struct:__anon2
tag_9F4C	armsrc/emvcard.h	/^    uint8_t tag_9F4C[8]; \/\/ICC Dynamic Number$/;"	m	struct:__anon2
tag_9F4D	armsrc/emvcard.h	/^    uint8_t tag_9F4D[2]; \/\/Log Entry$/;"	m	struct:__anon2
tag_9F4E	armsrc/emvcard.h	/^    uint8_t tag_9F4E[255]; \/\/Merchant Name and Location$/;"	m	struct:__anon2
tag_9F60	armsrc/emvcard.h	/^    uint8_t tag_9F60[2]; \/\/CVC3 track1$/;"	m	struct:__anon2
tag_9F61	armsrc/emvcard.h	/^    uint8_t tag_9F61[2]; \/\/CVC3 track2$/;"	m	struct:__anon2
tag_9F62	armsrc/emvcard.h	/^    uint8_t tag_9F62[6]; \/\/Track 1 Bit Map for CVC3 (PCVC3TRACK1)$/;"	m	struct:__anon2
tag_9F63	armsrc/emvcard.h	/^    uint8_t tag_9F63[6]; \/\/Track 1 Bit Map for UN and ATC (PUNATCTRACK1)$/;"	m	struct:__anon2
tag_9F64	armsrc/emvcard.h	/^    uint8_t tag_9F64[1]; \/\/Track 1 Number of ATC Digits (NATCTRACK1)$/;"	m	struct:__anon2
tag_9F65	armsrc/emvcard.h	/^    uint8_t tag_9F65[2]; \/\/rack 2 Bit Map for CVC3 (PCVC3TRACK2)$/;"	m	struct:__anon2
tag_9F66	armsrc/emvcard.h	/^    uint8_t tag_9F66[2];   \/\/Track 2 Bit Map for UN and ATC (PUNATCTRACK2), or VISA card type$/;"	m	struct:__anon2
tag_9F67	armsrc/emvcard.h	/^    uint8_t tag_9F67[1];   \/\/Track 2 Number of ATC Digits (NATCTRACK2)$/;"	m	struct:__anon2
tag_9F68	armsrc/emvcard.h	/^    uint8_t tag_9F68[252]; \/\/Mag Stripe CVM List$/;"	m	struct:__anon2
tag_9F68_len	armsrc/emvcard.h	/^    uint8_t tag_9F68_len; $/;"	m	struct:__anon2
tag_9F69	armsrc/emvcard.h	/^    uint8_t tag_9F69[255]; \/\/Unpredictable Number Data Object List (UDOL)$/;"	m	struct:__anon2
tag_9F69_len	armsrc/emvcard.h	/^    uint8_t tag_9F69_len; $/;"	m	struct:__anon2
tag_9F6A	armsrc/emvcard.h	/^    uint8_t tag_9F6A[8]; \/\/Unpredictable Number (Numeric)$/;"	m	struct:__anon2
tag_9F6B	armsrc/emvcard.h	/^    uint8_t tag_9F6B[19]; \/\/track 2 data$/;"	m	struct:__anon2
tag_9F6B_len	armsrc/emvcard.h	/^    uint8_t tag_9F6B_len; $/;"	m	struct:__anon2
tag_9F6C	armsrc/emvcard.h	/^    uint8_t tag_9F6C[2]; \/\/Mag Stripe Application Version  Number(Card)$/;"	m	struct:__anon2
tag_A5	armsrc/emvcard.h	/^    uint8_t tag_A5[255]; \/\/A5 template $/;"	m	struct:__anon2
tag_A5_len	armsrc/emvcard.h	/^    uint8_t tag_A5_len; $/;"	m	struct:__anon2
tag_AF	armsrc/emvcard.h	/^    uint8_t tag_AF[255]; \/\/Proprietary Information $/;"	m	struct:__anon2
tag_AF_len	armsrc/emvcard.h	/^    uint8_t tag_AF_len; $/;"	m	struct:__anon2
tag_BF0C	armsrc/emvcard.h	/^    uint8_t tag_BF0C[222]; \/\/File Control Information (FCI) Issuer Discretionary Data $/;"	m	struct:__anon2
tag_BF0C_len	armsrc/emvcard.h	/^    uint8_t tag_BF0C_len; $/;"	m	struct:__anon2
tag_CD	armsrc/emvcard.h	/^    uint8_t tag_CD[3]; \/\/Card Issuer Action Codes Paypass$/;"	m	struct:__anon2
tag_CE	armsrc/emvcard.h	/^    uint8_t tag_CE[3];$/;"	m	struct:__anon2
tag_CF	armsrc/emvcard.h	/^    uint8_t tag_CF[3];$/;"	m	struct:__anon2
tag_D7	armsrc/emvcard.h	/^    uint8_t tag_D7[3]; \/\/Application Control (PayPass)$/;"	m	struct:__anon2
tag_D8	armsrc/emvcard.h	/^    uint8_t tag_D8[2]; \/\/Application Interchange Profile (PayPass) $/;"	m	struct:__anon2
tag_D9	armsrc/emvcard.h	/^    uint8_t tag_D9[16]; $/;"	m	struct:__anon2
tag_D9_len	armsrc/emvcard.h	/^    uint8_t tag_D9_len; \/\/Application File Locator (PayPass) $/;"	m	struct:__anon2
tag_DA	armsrc/emvcard.h	/^    uint8_t tag_DA[2]; \/\/Static CVC3track1 $/;"	m	struct:__anon2
tag_DB	armsrc/emvcard.h	/^    uint8_t tag_DB[2]; \/\/Static CVC3track2 $/;"	m	struct:__anon2
tag_DC	armsrc/emvcard.h	/^    uint8_t tag_DC[2]; \/\/IVCVC3 CVC3track1 $/;"	m	struct:__anon2
tag_DD	armsrc/emvcard.h	/^    uint8_t tag_DD[2]; \/\/IVCVC3 CVC3track2 $/;"	m	struct:__anon2
tag_DFNAME	armsrc/emvcard.h	/^    uint8_t tag_DFNAME[255]; \/\/A5 template $/;"	m	struct:__anon2
tag_DFNAME_len	armsrc/emvcard.h	/^    uint8_t tag_DFNAME_len; $/;"	m	struct:__anon2
tag_DFName	armsrc/emvcard.h	/^    uint8_t tag_DFName[16];$/;"	m	struct:__anon2
tag_DFName_len	armsrc/emvcard.h	/^    uint8_t tag_DFName_len;$/;"	m	struct:__anon2
tag_data	fpga/hi_iso14443a.v	/^reg [3:0] tag_data;$/;"	r
tag_error	liblua/lauxlib.c	/^static void tag_error (lua_State *L, int narg, int tag) {$/;"	f	file:
tag_modulation	fpga/lo_edge_detect.v	/^wire tag_modulation = ssp_dout & !lf_field;$/;"	n
tag_response_info_t	armsrc/iso14443a.h	/^} tag_response_info_t;$/;"	t	typeref:struct:__anon22
tagdescription	armsrc/emvdataels.c	/^}tagdescription;$/;"	t	typeref:struct:__anon4	file:
tagdescription	armsrc/emvdataels.h	/^}tagdescription;$/;"	t	typeref:struct:__anon5
tail	client/mifarehost.c	/^		} tail;$/;"	m	struct:__anon47	typeref:union:__anon47::__anon49	file:
tail	client/nonce2key/crapto1.c	/^		uint32_t *head, *tail;$/;"	m	struct:bucket_info::__anon51	file:
tailBit	client/loclass/cipherutils.c	/^bool tailBit( BitstreamIn *stream)$/;"	f
target	tools/xorcheck.py	/^target= int(sys.argv[len(sys.argv) - 1],16)$/;"	v
tconcat	liblua/ltablib.c	/^static int tconcat (lua_State *L) {$/;"	f	file:
td	client/lualibs/htmlskel.lua	/^	function td(row, text){$/;"	f
tdea_dec	armsrc/des.h	/^#define tdea_dec /;"	d
tdea_enc	armsrc/des.h	/^#define tdea_enc /;"	d
tdes_dec	armsrc/des.c	/^void tdes_dec(void* out, void* in, const uint8_t* key){$/;"	f
tdes_enc	armsrc/des.c	/^void tdes_enc(void* out, void* in, const void* key){$/;"	f
tearDown	client/pm3_eml_mfd_test.py	/^    def tearDown(self):$/;"	m	class:TestEmlMfd
tearDown	tools/findbits_test.py	/^	def tearDown(self):$/;"	m	class:TestFindBits
temp_buffer_reset	fpga/hi_iso14443a.v	/^reg temp_buffer_reset;$/;"	r
term_info	client/uart.c	/^typedef struct termios term_info;$/;"	t	typeref:struct:termios	file:
testAMode	liblua/lopcodes.h	/^#define testAMode(/;"	d
testBitStream	client/loclass/cipherutils.c	/^int testBitStream()$/;"	f
testCipherUtils	client/loclass/cipherutils.c	/^int testCipherUtils(void)$/;"	f
testCryptedCSN	client/loclass/ikeys.c	/^uint64_t testCryptedCSN(uint64_t crypted_csn, uint64_t expected)$/;"	f
testDES	client/loclass/ikeys.c	/^int testDES(Testcase testcase, des_context ctx_enc, des_context ctx_dec)$/;"	f
testDES2	client/loclass/ikeys.c	/^int testDES2(uint64_t csn, uint64_t expected)$/;"	f
testElite	client/loclass/elite_crack.c	/^int testElite()$/;"	f
testKeyDiversificationWithMasterkeyTestcases	client/loclass/ikeys.c	/^int testKeyDiversificationWithMasterkeyTestcases()$/;"	f
testMAC	client/loclass/cipher.c	/^int testMAC()$/;"	f
testPermute	client/loclass/ikeys.c	/^void testPermute()$/;"	f
testReversedBitstream	client/loclass/cipherutils.c	/^int testReversedBitstream()$/;"	f
testTMode	liblua/lopcodes.h	/^#define testTMode(/;"	d
test_all	tools/rfidtest.pl	/^sub test_all$/;"	s
test_binstring	tools/findbits_test.py	/^	def test_binstring(self):$/;"	m	class:TestFindBits
test_eml2mfd	client/pm3_eml_mfd_test.py	/^    def test_eml2mfd(self):$/;"	m	class:TestEmlMfd
test_eof	liblua/liolib.c	/^static int test_eof (lua_State *L, FILE *f) {$/;"	f	file:
test_invert	tools/findbits_test.py	/^	def test_invert(self):$/;"	m	class:TestFindBits
test_mfd2eml	client/pm3_eml_mfd_test.py	/^    def test_mfd2eml(self):$/;"	m	class:TestEmlMfd
test_search	tools/findbits_test.py	/^	def test_search(self):$/;"	m	class:TestFindBits
test_stringreverse	tools/findbits_test.py	/^	def test_stringreverse(self):$/;"	m	class:TestFindBits
test_then_block	liblua/lparser.c	/^static void test_then_block (LexState *ls, int *escapelist) {$/;"	f	file:
testbed_fpga	fpga/testbed_fpga.v	/^module testbed_fpga;$/;"	m
testbed_hi_read_tx	fpga/testbed_hi_read_tx.v	/^module testbed_hi_read_tx;$/;"	m
testbed_hi_simulate	fpga/testbed_hi_simulate.v	/^module testbed_hi_simulate;$/;"	m
testbed_lo_read	fpga/testbed_lo_read.v	/^module testbed_lo_read;$/;"	m
testbed_lo_simulate	fpga/testbed_lo_simulate.v	/^module testbed_lo_simulate;$/;"	m
testbit	liblua/lgc.h	/^#define testbit(/;"	d
testbits	liblua/lgc.h	/^#define testbits(/;"	d
testcases	client/loclass/ikeys.c	/^Testcase testcases[] ={$/;"	v
testnext	liblua/lparser.c	/^static int testnext (LexState *ls, int c) {$/;"	f	file:
testprop	liblua/lctype.h	/^#define testprop(/;"	d
th	liblua/lstate.h	/^  struct lua_State th;  \/* thread *\/$/;"	m	union:GCObject	typeref:struct:GCObject::lua_State
thisBit	armsrc/iso14443.c	/^	int     thisBit;$/;"	m	struct:__anon15	file:
three_argument_test	client/pm3_eml_mfd_test.py	/^    def three_argument_test(self, operation, cases, c14n=str):$/;"	m	class:TestEmlMfd
thvalue	liblua/lobject.h	/^#define thvalue(/;"	d
tiNew	client/uart.c	/^  term_info tiNew;  \/\/ Terminal info during the transaction$/;"	m	struct:__anon52	file:
tiOld	client/uart.c	/^  term_info tiOld;  \/\/ Terminal info before using the port$/;"	m	struct:__anon52	file:
timeout	armsrc/iclass.c	/^static int timeout = 4096;$/;"	v	file:
timeout	client/uart.c	/^const struct timeval timeout = {$/;"	v	typeref:struct:timeval
timer	armsrc/legicrf.c	/^AT91PS_TC timer;$/;"	v
timerData	armsrc/mifaresniff.c	/^static uint32_t timerData = 0;$/;"	v	file:
timestamp	armsrc/legicrf.c	/^int timestamp;$/;"	v
tinsert	liblua/ltablib.c	/^static int tinsert (lua_State *L) {$/;"	f	file:
tlvtag	armsrc/tlv.h	/^}tlvtag;$/;"	t	typeref:struct:__anon25
tmname	liblua/lstate.h	/^  TString *tmname[TM_N];  \/* array with tag-method names *\/$/;"	m	struct:global_State
to_arm	fpga/hi_iso14443a.v	/^reg [7:0] to_arm;$/;"	r
to_arm_shiftreg	fpga/lo_read.v	/^reg [7:0] to_arm_shiftreg;$/;"	r
to_ascii	client/lualibs/htmlskel.lua	/^	function to_ascii(hexval)$/;"	f
tobefnz	liblua/lstate.h	/^  GCObject *tobefnz;  \/* list of userdata to be GC *\/$/;"	m	struct:global_State
tofile	liblua/liolib.c	/^static FILE *tofile (lua_State *L) {$/;"	f	file:
toggles	fpga/tests/plot_edgedetect.py	/^toggles = map(lambda x: ord(x) * 10 + 80, toggles)$/;"	v
toggles	fpga/tests/plot_edgedetect.py	/^toggles = open(BASENAME+ ".toggle").read()$/;"	v
token	liblua/llex.h	/^  int token;$/;"	m	struct:Token
tolstream	liblua/liolib.c	/^#define tolstream(/;"	d	file:
tonumber	liblua/lvm.h	/^#define tonumber(/;"	d
top	liblua/lstate.h	/^  StkId	top;  \/* top for this function *\/$/;"	m	struct:CallInfo
top	liblua/lstate.h	/^  StkId top;  \/* first free slot in the stack *\/$/;"	m	struct:lua_State
toproto	liblua/luac.c	/^#define toproto(/;"	d	file:
tostore	liblua/lparser.c	/^  int tostore;  \/* number of array elements pending to be stored *\/$/;"	m	struct:ConsControl	file:
tostring	liblua/lvm.h	/^#define tostring(/;"	d
tostring_1443a	client/lualibs/read14a.lua	/^local function tostring_1443a(sak)$/;"	f
totalbytes	liblua/lstate.h	/^  lu_mem totalbytes;  \/* number of bytes currently allocated - GCdebt *\/$/;"	m	struct:global_State
toupper	armsrc/printf.c	/^#define toupper(/;"	d	file:
tr	client/lualibs/htmlskel.lua	/^	function tr(table){$/;"	f
traceCard	client/mifarehost.c	/^static uint8_t traceCard[4096] = {0x00};$/;"	v	file:
traceCrypto1	client/mifarehost.c	/^struct Crypto1State *traceCrypto1 = NULL;$/;"	v	typeref:struct:Crypto1State
traceCurBlock	client/mifarehost.c	/^static uint8_t traceCurBlock = 0;$/;"	v	file:
traceCurKey	client/mifarehost.c	/^static uint8_t traceCurKey = 0;$/;"	v	file:
traceFileName	client/mifarehost.c	/^static char traceFileName[FILE_PATH_SIZE] = {0x00};$/;"	v	file:
traceLen	armsrc/BigBuf.c	/^static uint16_t traceLen = 0;$/;"	v	file:
traceState	client/mifarehost.c	/^static int traceState = TRACE_IDLE;$/;"	v	file:
traceback	liblua/lua.c	/^static int traceback (lua_State *L) {$/;"	f	file:
traceexec	liblua/lvm.c	/^static void traceexec (lua_State *L) {$/;"	f	file:
tracing	armsrc/BigBuf.c	/^int tracing = 1; \/\/Last global one.. todo static?$/;"	v
trailerAccessBytes	client/mifarehost.c	/^static uint8_t trailerAccessBytes[4] = {0x08, 0x77, 0x8F, 0x00};$/;"	v	file:
traverseCclosure	liblua/lgc.c	/^static lu_mem traverseCclosure (global_State *g, CClosure *cl) {$/;"	f	file:
traverseLclosure	liblua/lgc.c	/^static lu_mem traverseLclosure (global_State *g, LClosure *cl) {$/;"	f	file:
traverseephemeron	liblua/lgc.c	/^static int traverseephemeron (global_State *g, Table *h) {$/;"	f	file:
traverseproto	liblua/lgc.c	/^static int traverseproto (global_State *g, Proto *f) {$/;"	f	file:
traversestack	liblua/lgc.c	/^static lu_mem traversestack (global_State *g, lua_State *th) {$/;"	f	file:
traversestrongtable	liblua/lgc.c	/^static void traversestrongtable (global_State *g, Table *h) {$/;"	f	file:
traversetable	liblua/lgc.c	/^static lu_mem traversetable (global_State *g, Table *h) {$/;"	f	file:
traverseweakvalue	liblua/lgc.c	/^static void traverseweakvalue (global_State *g, Table *h) {$/;"	f	file:
treatstackoption	liblua/ldblib.c	/^static void treatstackoption (lua_State *L, lua_State *L1, const char *fname) {$/;"	f	file:
tremove	liblua/ltablib.c	/^static int tremove (lua_State *L) {$/;"	f	file:
trigger	armsrc/iso14443a.c	/^uint8_t trigger = 0;$/;"	v
trigger_enabled	fpga/lf_edge_detect.v	/^	reg trigger_enabled = 1;$/;"	r
trigger_threshold	include/usb_cmd.h	/^	int trigger_threshold;$/;"	m	struct:__anon65
trim	liblua/lbitlib.c	/^#define trim(/;"	d	file:
trydecpoint	liblua/llex.c	/^static void trydecpoint (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
tryfuncTM	liblua/ldo.c	/^static StkId tryfuncTM (lua_State *L, StkId func) {$/;"	f	file:
ts	liblua/llex.h	/^  TString *ts;$/;"	m	union:__anon67
ts	liblua/lstate.h	/^  union TString ts;$/;"	m	union:GCObject	typeref:union:GCObject::TString
tsv	liblua/lobject.h	/^  } tsv;$/;"	m	union:TString	typeref:struct:TString::__anon68
tsvalue	liblua/lobject.h	/^#define tsvalue(/;"	d
tt_	liblua/lobject.h	/^#define tt_(/;"	d
ttisCclosure	liblua/lobject.h	/^#define ttisCclosure(/;"	d
ttisLclosure	liblua/lobject.h	/^#define ttisLclosure(/;"	d
ttisboolean	liblua/lobject.h	/^#define ttisboolean(/;"	d
ttisclosure	liblua/lobject.h	/^#define ttisclosure(/;"	d
ttisdeadkey	liblua/lobject.h	/^#define ttisdeadkey(/;"	d
ttisequal	liblua/lobject.h	/^#define ttisequal(/;"	d
ttisequal	liblua/lobject.h	/^#undef ttisequal$/;"	d
ttisfunction	liblua/lobject.h	/^#define ttisfunction(/;"	d
ttislcf	liblua/lobject.h	/^#define ttislcf(/;"	d
ttislightuserdata	liblua/lobject.h	/^#define ttislightuserdata(/;"	d
ttislngstring	liblua/lobject.h	/^#define ttislngstring(/;"	d
ttisnil	liblua/lobject.h	/^#define ttisnil(/;"	d
ttisnumber	liblua/lobject.h	/^#define ttisnumber(/;"	d
ttisnumber	liblua/lobject.h	/^#undef ttisnumber$/;"	d
ttisshrstring	liblua/lobject.h	/^#define ttisshrstring(/;"	d
ttisstring	liblua/lobject.h	/^#define ttisstring(/;"	d
ttistable	liblua/lobject.h	/^#define ttistable(/;"	d
ttisthread	liblua/lobject.h	/^#define ttisthread(/;"	d
ttisuserdata	liblua/lobject.h	/^#define ttisuserdata(/;"	d
ttype	liblua/lobject.h	/^#define ttype(/;"	d
ttypename	liblua/ltm.h	/^#define ttypename(/;"	d
ttypenv	liblua/lobject.h	/^#define ttypenv(/;"	d
tvk	liblua/lobject.h	/^  TValue tvk;$/;"	m	union:TKey
twoBits	armsrc/iso14443a.h	/^	uint16_t twoBits;$/;"	m	struct:__anon17
twoBits	armsrc/iso14443a.h	/^	uint16_t twoBits;$/;"	m	struct:__anon20
twoto	liblua/lobject.h	/^#define twoto(/;"	d
txcmd	client/proxmark3.c	/^static UsbCommand txcmd;$/;"	v	file:
txcmd_pending	client/proxmark3.c	/^volatile static bool txcmd_pending = false;$/;"	v	file:
txtToken	liblua/llex.c	/^static const char *txtToken (LexState *ls, int token) {$/;"	f	file:
typeerror	liblua/lauxlib.c	/^static int typeerror (lua_State *L, int narg, const char *tname) {$/;"	f	file:
u	liblua/lobject.h	/^  } u;$/;"	m	struct:UpVal	typeref:union:UpVal::__anon70
u	liblua/lparser.h	/^  } u;$/;"	m	struct:expdesc	typeref:union:expdesc::__anon76
u	liblua/lstate.h	/^  union Udata u;$/;"	m	union:GCObject	typeref:union:GCObject::Udata
u	liblua/lstate.h	/^  } u;$/;"	m	struct:CallInfo	typeref:union:CallInfo::__anon79
u32	armsrc/hitag2.c	/^#define u32	/;"	d	file:
u64	armsrc/hitag2.c	/^#define u64	/;"	d	file:
u8	armsrc/hitag2.c	/^#define u8	/;"	d	file:
u_char	armsrc/printf.c	/^typedef unsigned char u_char;$/;"	t	file:
u_int	armsrc/printf.c	/^typedef unsigned int u_int;$/;"	t	file:
u_long	armsrc/printf.c	/^typedef unsigned long u_long;$/;"	t	file:
u_quad_t	armsrc/printf.c	/^typedef unsigned long long u_quad_t;$/;"	t	file:
u_short	armsrc/printf.c	/^typedef unsigned short u_short;$/;"	t	file:
uart_close	client/uart.c	/^void uart_close(const serial_port sp) {$/;"	f
uart_cts	client/uart.c	/^bool uart_cts(const serial_port sp) {$/;"	f
uart_get_parity	client/uart.c	/^serial_port_parity uart_get_parity(const serial_port sp) {$/;"	f
uart_get_speed	client/uart.c	/^uint32_t uart_get_speed(const serial_port sp) {$/;"	f
uart_open	client/uart.c	/^serial_port uart_open(const char* pcPortName) {$/;"	f
uart_open	client/uart.c	/^serial_port uart_open(const char* pcPortName)$/;"	f
uart_receive	client/uart.c	/^bool uart_receive(const serial_port sp, byte_t* pbtRx, size_t* pszRxLen) {$/;"	f
uart_receiver	client/proxmark3.c	/^static void *uart_receiver(void *targ) {$/;"	f	file:
uart_send	client/uart.c	/^bool uart_send(const serial_port sp, const byte_t* pbtTx, const size_t szTxLen) {$/;"	f
uart_set_parity	client/uart.c	/^bool uart_set_parity(serial_port sp, serial_port_parity spp) {$/;"	f
uart_set_speed	client/uart.c	/^bool uart_set_speed(serial_port sp, const uint32_t uiPortSpeed) {$/;"	f
uchar	liblua/lstrlib.c	/^#define uchar(/;"	d	file:
ud	liblua/lstate.h	/^  void *ud;         \/* auxiliary data to `frealloc' *\/$/;"	m	struct:global_State
udata2finalize	liblua/lgc.c	/^static GCObject *udata2finalize (global_State *g) {$/;"	f	file:
udatatypename	liblua/ltm.c	/^static const char udatatypename[] = "userdata";$/;"	v	file:
uid	armsrc/hitag2.c	/^	uint32_t uid;$/;"	m	struct:hitag2_tag	file:
uid	client/cmdhf14a.c	/^	uint8_t uid;$/;"	m	struct:__anon28	file:
uid	client/cmdhf15.c	/^	uint64_t uid;$/;"	m	struct:__anon29	file:
uid	client/loclass/ikeys.c	/^	uint8_t uid[8];$/;"	m	struct:__anon46	file:
uid	client/mifarehost.c	/^		uint32_t uid;$/;"	m	struct:__anon47	file:
uid	client/mifarehost.c	/^uint32_t uid;     \/\/ serial number$/;"	v
uid	include/mifare.h	/^	byte_t uid[10];$/;"	m	struct:__anon61
uidlen	include/mifare.h	/^	byte_t uidlen;$/;"	m	struct:__anon61
uidmapping	client/cmdhf15.c	/^const productName uidmapping[] = {$/;"	v
uint16_t	armsrc/stdint.h	/^typedef unsigned short int		uint16_t;$/;"	t
uint32_t	armsrc/stdint.h	/^typedef unsigned int			uint32_t;$/;"	t
uint32_t	client/aes.h	/^typedef UINT32 uint32_t;$/;"	t
uint32_t	client/hid-flasher/usb_cmd.h	/^typedef DWORD uint32_t;$/;"	t
uint32_t	client/loclass/des.h	/^typedef UINT32 uint32_t;$/;"	t
uint32_t	include/usb_cmd.h	/^typedef DWORD uint32_t;$/;"	t
uint64_t	armsrc/stdint.h	/^typedef unsigned long long int	uint64_t;$/;"	t
uint8_t	armsrc/stdint.h	/^typedef unsigned char			uint8_t;$/;"	t
uint8_t	client/hid-flasher/usb_cmd.h	/^typedef BYTE uint8_t;$/;"	t
uint8_t	include/usb_cmd.h	/^typedef BYTE uint8_t;$/;"	t
uintmax_t	armsrc/printf.c	/^typedef uint32_t uintmax_t;$/;"	t	file:
uintptr_t	armsrc/stdint.h	/^typedef unsigned int			uintptr_t;$/;"	t
ukbhit	client/util.c	/^int ukbhit(void) {$/;"	f
ukbhit	client/util.c	/^int ukbhit(void)$/;"	f
unary_operation_test	tools/findbits_test.py	/^	def unary_operation_test(self, operation, cases):$/;"	m	class:TestFindBits
unbound_search	liblua/ltable.c	/^static int unbound_search (Table *t, unsigned int j) {$/;"	f	file:
undefgoto	liblua/lparser.c	/^static l_noret undefgoto (LexState *ls, Labeldesc *gt) {$/;"	f	file:
undefined_instruction	bootrom/flash-reset.s	/^undefined_instruction:$/;"	l
uniq	client/lualibs/mf_default_keys.lua	/^local function uniq(list)$/;"	f
unitTests	client/loclass/main.c	/^int unitTests()$/;"	f
unittest	client/pm3_eml_mfd_test.py	/^import unittest, os$/;"	i
unittest	tools/findbits_test.py	/^import unittest, sys, findbits$/;"	i
unlink	client/flasher.c	/^# define unlink(/;"	d	file:
unlinkupval	liblua/lfunc.c	/^static void unlinkupval (UpVal *uv) {$/;"	f	file:
unmakemask	liblua/ldblib.c	/^static char *unmakemask (int mask, char *smask) {$/;"	f	file:
unpack	liblua/ltablib.c	/^static int unpack (lua_State *L) {$/;"	f	file:
unroll	liblua/ldo.c	/^static void unroll (lua_State *L, void *ud) {$/;"	f	file:
upcase	client/uart.c	/^void upcase(char *p) {$/;"	f
update_contribution	armsrc/crapto1.c	/^update_contribution(uint32_t *item, const uint32_t mask1, const uint32_t mask2)$/;"	f	file:
update_contribution	client/nonce2key/crapto1.c	/^update_contribution(uint32_t *item, const uint32_t mask1, const uint32_t mask2)$/;"	f	file:
update_contribution	tools/mfkey/crapto1.c	/^update_contribution(uint32_t *item, const uint32_t mask1, const uint32_t mask2)$/;"	f	file:
update_contribution	tools/nonce2key/crapto1.c	/^update_contribution(uint32_t *item, const uint32_t mask1, const uint32_t mask2)$/;"	f	file:
update_crc16	common/crc16.c	/^unsigned short update_crc16( unsigned short crc, unsigned char c )$/;"	f
upval	liblua/lparser.c	/^  lu_byte upval;  \/* true if some variable in the block is an upvalue *\/$/;"	m	struct:BlockCnt	file:
upvalname	liblua/ldebug.c	/^static const char *upvalname (Proto *p, int uv) {$/;"	f	file:
upvals	liblua/lobject.h	/^  UpVal *upvals[1];  \/* list of upvalues *\/$/;"	m	struct:LClosure
upvalue	liblua/lobject.h	/^  TValue upvalue[1];  \/* list of upvalues *\/$/;"	m	struct:CClosure
upvalues	liblua/lobject.h	/^  Upvaldesc *upvalues;  \/* upvalue information *\/$/;"	m	struct:Proto
usage	client/flasher.c	/^static void usage(char *argv0)$/;"	f	file:
usage	client/hid-flasher/flasher.c	/^static void usage(char *argv0)$/;"	f	file:
usage	liblua/luac.c	/^static void usage(const char* message)$/;"	f	file:
usage_lf_config	client/cmdlf.c	/^int usage_lf_config()$/;"	f
usage_lf_read	client/cmdlf.c	/^int usage_lf_read()$/;"	f
usage_lf_snoop	client/cmdlf.c	/^int usage_lf_snoop()$/;"	f
usb_check	common/usb_cdc.c	/^bool usb_check() {$/;"	f
usb_disable	common/usb_cdc.c	/^void usb_disable() {$/;"	f
usb_enable	common/usb_cdc.c	/^void usb_enable() {$/;"	f
usb_poll	common/usb_cdc.c	/^bool usb_poll()$/;"	f
usb_present	client/proxmark3.c	/^	int usb_present;$/;"	m	struct:main_loop_arg	file:
usb_read	common/usb_cdc.c	/^uint32_t usb_read(byte_t* data, size_t len) {$/;"	f
usb_write	common/usb_cdc.c	/^uint32_t usb_write(const byte_t* data, const size_t len) {$/;"	f
user_byte1	fpga/fpga_lf.v	/^reg [7:0] user_byte1;$/;"	r
usleep	client/sleep.h	/^# define usleep(/;"	d
uv	liblua/lobject.h	/^  } uv;$/;"	m	union:Udata	typeref:struct:Udata::__anon69
uv	liblua/lstate.h	/^  struct UpVal uv;$/;"	m	union:GCObject	typeref:struct:GCObject::UpVal
uvalue	liblua/lobject.h	/^#define uvalue(/;"	d
uvhead	liblua/lstate.h	/^  UpVal uvhead;  \/* head of double-linked list of all open upvalues *\/$/;"	m	struct:global_State
v	liblua/lobject.h	/^  TValue *v;  \/* points to stack or to its own value *\/$/;"	m	struct:UpVal
v	liblua/lparser.c	/^  expdesc v;  \/* last list item read *\/$/;"	m	struct:ConsControl	file:
v	liblua/lparser.c	/^  expdesc v;  \/* variable (global, local, upvalue, or indexed) *\/$/;"	m	struct:LHS_assign	file:
v_	liblua/lobject.h	/^#define v_(/;"	d
val_	liblua/lobject.h	/^#define val_(/;"	d
val_	liblua/lobject.h	/^#undef val_$/;"	d
valid_nonce	armsrc/mifarecmd.c	/^int valid_nonce(uint32_t Nt, uint32_t NtEnc, uint32_t Ks1, uint8_t *parity) {$/;"	f
valiswhite	liblua/lgc.h	/^#define valiswhite(/;"	d
value	armsrc/tlv.h	/^    uint8_t value[VALUE_LENGTH];$/;"	m	struct:__anon25
value	liblua/lobject.h	/^    TValue value;  \/* the value (when closed) *\/$/;"	m	union:UpVal::__anon70
valuelength	armsrc/tlv.h	/^    uint16_t valuelength; $/;"	m	struct:__anon25
varname	liblua/lobject.h	/^  TString *varname;$/;"	m	struct:LocVar
version	armsrc/epa.h	/^	uint8_t version;$/;"	m	struct:__anon6
version	include/proxmark3.h	/^	char version; \/* Must be 1 *\/$/;"	m	struct:common_area
version	liblua/lstate.h	/^  const lua_Number *version;  \/* pointer to version number *\/$/;"	m	struct:global_State
version_information	armsrc/version.c	/^const struct version_information __attribute__((section(".version_information"))) version_information = {$/;"	v	typeref:struct:version_information
version_information	bootrom/version.c	/^const struct version_information __attribute__((section(".version_information"))) version_information = {$/;"	v	typeref:struct:version_information
version_information	common/default_version.c	/^const struct version_information __attribute__((section(".version_information"))) version_information = { $/;"	v	typeref:struct:version_information
version_information	include/proxmark3.h	/^struct version_information {$/;"	s
versionversion	include/proxmark3.h	/^	char versionversion; \/* Must be 1 *\/$/;"	m	struct:version_information
vkisinreg	liblua/lparser.h	/^#define vkisinreg(/;"	d
vkisvar	liblua/lparser.h	/^#define vkisvar(/;"	d
vmcase	liblua/lvm.c	/^#define vmcase(/;"	d	file:
vmcasenb	liblua/lvm.c	/^#define vmcasenb(/;"	d	file:
vmdispatch	liblua/lvm.c	/^#define vmdispatch(/;"	d	file:
vsprintf	armsrc/printf.c	/^int vsprintf(char *dest, const char *fmt, va_list ap)$/;"	f
vt	liblua/lparser.h	/^      lu_byte vt;  \/* whether 't' is register (VLOCAL) or upvalue (VUPVAL) *\/$/;"	m	struct:expdesc::__anon76::__anon77
waitCmd	client/cmdhf14a.c	/^static void waitCmd(uint8_t iSelect)$/;"	f	file:
waitCmd	client/scripts/ndef_dump.lua	/^function waitCmd(iSelect)$/;"	f
waitCmd	client/scripts/tnp3dump.lua	/^local function waitCmd()$/;"	f
waitFor14443a	client/lualibs/read14a.lua	/^local function waitFor14443a()$/;"	f
waitForTag	client/lualibs/hf_reader.lua	/^local function waitForTag()$/;"	f
wait_for_ack	client/flash.c	/^static int wait_for_ack(void)$/;"	f	file:
wait_for_ack	client/hid-flasher/flash.c	/^static int wait_for_ack(void)$/;"	f	file:
wait_for_mifare	client/scripts/mifare_autopwn.lua	/^function wait_for_mifare()$/;"	f
weak	liblua/lstate.h	/^  GCObject *weak;  \/* list of tables with weak values *\/$/;"	m	struct:global_State
weak_key_table	client/loclass/des.c	/^static const unsigned char weak_key_table[WEAK_KEY_COUNT][DES_KEY_SIZE] =$/;"	v	file:
what	liblua/lua.h	/^  const char *what;	\/* (S) 'Lua', 'C', 'main', 'tail' *\/$/;"	m	struct:lua_Debug
whilestat	liblua/lparser.c	/^static void whilestat (LexState *ls, int line) {$/;"	f	file:
white2gray	liblua/lgc.c	/^#define white2gray(/;"	d	file:
wiegand_add_parity	client/util.c	/^void wiegand_add_parity(char *target, char *source, char length)$/;"	f
with_statement	client/pm3_eml2mfd.py	/^from __future__ import with_statement$/;"	i
with_statement	client/pm3_eml_mfd_test.py	/^from __future__ import with_statement$/;"	i
with_statement	client/pm3_mfd2eml.py	/^from __future__ import with_statement$/;"	i
write	tools/findbits_test.py	/^	def write(self, data):$/;"	m	class:OutputBuffer
writeDumpFile 	client/scripts/ndef_dump.lua	/^	writeDumpFile = function(uid, blockData)$/;"	f
write_block	client/flash.c	/^static int write_block(uint32_t address, uint8_t *data, uint32_t length)$/;"	f	file:
write_block	client/hid-flasher/flash.c	/^static int write_block(uint32_t address, uint8_t *data, uint32_t length)$/;"	f	file:
writedumpfile	client/scripts/tnp3sim.lua	/^local function writedumpfile(infile)$/;"	f
writer	liblua/ldump.c	/^ lua_Writer writer;$/;"	m	struct:__anon66	file:
writer	liblua/lstrlib.c	/^static int writer (lua_State *L, const void* b, size_t size, void* B) {$/;"	f	file:
writer	liblua/luac.c	/^static int writer(lua_State* L, const void* p, size_t size, void* u)$/;"	f	file:
x0	fpga/lp20khz_1MSa_iir_filter.v	/^	reg [7:0] x0 = 0;$/;"	r
x0	fpga/util.v	/^    input x0, x1, x2, x3, x4, x5, x6, x7;$/;"	p
x1	fpga/lp20khz_1MSa_iir_filter.v	/^	reg [7:0] x1 = 0;$/;"	r
x1	fpga/util.v	/^    input x0, x1, x2, x3, x4, x5, x6, x7;$/;"	p
x2	fpga/util.v	/^    input x0, x1, x2, x3, x4, x5, x6, x7;$/;"	p
x3	fpga/util.v	/^    input x0, x1, x2, x3, x4, x5, x6, x7;$/;"	p
x4	fpga/util.v	/^    input x0, x1, x2, x3, x4, x5, x6, x7;$/;"	p
x5	fpga/util.v	/^    input x0, x1, x2, x3, x4, x5, x6, x7;$/;"	p
x6	fpga/util.v	/^    input x0, x1, x2, x3, x4, x5, x6, x7;$/;"	p
x7	fpga/util.v	/^    input x0, x1, x2, x3, x4, x5, x6, x7;$/;"	p
x_bytes_to_num	client/loclass/cipherutils.c	/^uint64_t x_bytes_to_num(uint8_t* src, size_t len)$/;"	f
x_num_to_bytes	client/loclass/cipherutils.c	/^void x_num_to_bytes(uint64_t n, size_t len, uint8_t* dest)$/;"	f
xcorr_is_848	fpga/hi_read_rx_xcorr.v	/^    input xcorr_is_848, snoop, xcorr_quarter_freq;$/;"	p
xcorr_quarter_freq	fpga/hi_read_rx_xcorr.v	/^    input xcorr_is_848, snoop, xcorr_quarter_freq;$/;"	p
xorbits_8	client/cmdhficlass.c	/^int xorbits_8(uint8_t val)$/;"	f
y	fpga/util.v	/^    output y;$/;"	p
y	fpga/util.v	/^    reg y;$/;"	r
y0	fpga/lp20khz_1MSa_iir_filter.v	/^	reg [16:0] y0 = 0;$/;"	r
y1	fpga/lp20khz_1MSa_iir_filter.v	/^	reg [16:0] y1 = 0;$/;"	r
yindex	liblua/lparser.c	/^static void yindex (LexState *ls, expdesc *v) {$/;"	f	file:
z	liblua/ldo.c	/^  ZIO *z;$/;"	m	struct:SParser	file:
z	liblua/llex.h	/^  ZIO *z;  \/* input stream *\/$/;"	m	struct:LexState
zgetc	liblua/lzio.h	/^#define zgetc(/;"	d
~ProxGuiQT	client/proxguiqt.cpp	/^ProxGuiQT::~ProxGuiQT(void)$/;"	f	class:ProxGuiQT
